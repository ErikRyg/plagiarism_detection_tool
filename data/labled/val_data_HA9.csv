code1,code2,label
"#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}","#include <stdio.mywyyedcmpjv>
#include <stdlib.mywyyedcmpjv>
void jbcpktlcxndn(char* str){
for(int nvcgzulabnca = 0; str[nvcgzulabnca] != '\0'; nvcgzulabnca++){
   if(str[nvcgzulabnca] == 'x' || str[nvcgzulabnca] == 'y' || str[nvcgzulabnca] == 'q' || str[nvcgzulabnca] == 'X' || str[nvcgzulabnca] == 'Y' || str[nvcgzulabnca] == 'Q'){ 
   for(int mywyyedcmpjv = nvcgzulabnca; str[mywyyedcmpjv] != '0'; mywyyedcmpjv++) str[mywyyedcmpjv] = str[mywyyedcmpjv+1];
   }
 }
}
char* strc(char* ungggewbtrje, char* str2){
int nvcgzulabnca,mywyyedcmpjv;
char* st = ungggewbtrje;
for(nvcgzulabnca = 0; st[nvcgzulabnca] != '\0'; nvcgzulabnca++){
}
for(mywyyedcmpjv = 0; str2[mywyyedcmpjv] != '\0'; mywyyedcmpjv++){
ungggewbtrje[nvcgzulabnca+mywyyedcmpjv] = str2[mywyyedcmpjv];
}
ungggewbtrje[nvcgzulabnca+mywyyedcmpjv]= '\0';
return ungggewbtrje;
}
int main( int xtoyrplshnih, char* argv[] )
{  
jbcpktlcxndn(argv[1]);
jbcpktlcxndn(argv[2]);
jbcpktlcxndn(argv[3]);
jbcpktlcxndn(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
}",1.0
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char strneu[100];
	int a = 0;
	for (int i = 0; i < argc -1; i++)
	{
		for (int length = 0; *(*(argv+1+i)+length) != '\0'; length++)
		{
			str[a] = *(*(argv+1+i)+length);
			a++;
		}
	}
	str[a] = '\0';
	for (int i = 0; i < a+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			do
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			} while(1);
			a--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((a/2)-2); i++, z += 3)
	{
		strneu[i] = str[z];
	}
	int length = 0;
	for (length; str[length] != '\0'; length++){}
	strneu[length] = '\0';
	printf(""Der neue String lautet: %s"",strneu);
}","#include <stdio.h>
int main(int vpccsdszahst, char* argv[] )
{  
	char dpixagxngdzy[100];
	char laaytngujzmw[100];
	int vpjegsofoefm = 0;
	for (int ublpmafiavgp = 0; ublpmafiavgp < vpccsdszahst -1; ublpmafiavgp++)
	{
		for (int wdzyzvxvsrmp = 0; *(*(argv+1+ublpmafiavgp)+wdzyzvxvsrmp) != '\0'; wdzyzvxvsrmp++)
		{
			dpixagxngdzy[vpjegsofoefm] = *(*(argv+1+ublpmafiavgp)+wdzyzvxvsrmp);
			vpjegsofoefm++;
		}
	}
	dpixagxngdzy[vpjegsofoefm] = '\0';
	for (int ublpmafiavgp = 0; ublpmafiavgp < vpjegsofoefm+1; ublpmafiavgp++)
	{
		if ((dpixagxngdzy[ublpmafiavgp] == 'x') || (dpixagxngdzy[ublpmafiavgp] == 'y') || (dpixagxngdzy[ublpmafiavgp] == 'q') || (dpixagxngdzy[ublpmafiavgp] == 'X') || (dpixagxngdzy[ublpmafiavgp] == 'Y') || (dpixagxngdzy[ublpmafiavgp] == 'Q'))
		{
			do
			{
				dpixagxngdzy[ublpmafiavgp] = dpixagxngdzy[ublpmafiavgp+1];
				ublpmafiavgp++;
				if (dpixagxngdzy[ublpmafiavgp] == '\0')
				{	
					break;
				}
			} while(1);
			vpjegsofoefm--;
			ublpmafiavgp = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",dpixagxngdzy);
	for (int ublpmafiavgp = 0, z = 0; ublpmafiavgp < ((vpjegsofoefm/2)-2); ublpmafiavgp++, z += 3)
	{
		laaytngujzmw[ublpmafiavgp] = dpixagxngdzy[z];
	}
	int wdzyzvxvsrmp = 0;
	for (wdzyzvxvsrmp; dpixagxngdzy[wdzyzvxvsrmp] != '\0'; wdzyzvxvsrmp++){}
	laaytngujzmw[wdzyzvxvsrmp] = '\0';
	printf(""Der neue String lautet: %s"",laaytngujzmw);
}",1.0
"#include <stdio.h>
int main(int  argc, char *argv[]) // start at argv[1]
{
char array[100];
int slot_count = 0;
char b[100];
int slot_count_b = 0;
for(int i = 1; i < argc; i++)
	{
	int j = -1;
	do
		{
		j++;
		if(argv[i][j] == 'x') continue;
		else if(argv[i][j] == 'y') continue;
		else if(argv[i][j] == 'q') continue;
		else if(argv[i][j] == 'X') continue;
		else if(argv[i][j] == 'Y') continue;
		else if(argv[i][j] == 'Q') continue;
		else if(argv[i][j] == '\0')
			{
			array[slot_count] = '\0';
			b[slot_count_b] = '\0';
			}
		else
			{
			array[slot_count] = argv[i][j];
			if( (slot_count == 0 || (slot_count) % 3 == 0) )
				{
				b[slot_count_b] = array[slot_count];
				slot_count_b++;
				}		
			slot_count++;
			}
		}		
	while(argv[i][j] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int m = 0; m < slot_count; m++) printf(""%c"", array[m]); 
printf(""\nDer neue String lautet: "");
for(int n = 0; n < slot_count_b; n++) printf(""%c"", b[n]); 
}","#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}",0.0
"#include <stdio.h>
int main(int argc, char** argv){
    char array [100];
    char array2 [100];
    int k = 0;
    for( int i = 1; i < argc; i++){
        for(int j = 0; '\0' != argv[i][j]; j++){
             if(argv[i][j] != 'x' && argv[i][j] && argv[i][j] != 'y' && argv[i][j]!= 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q'){ 
             array[k] = argv[i][j];
             k++;
             }
        }
    }
    array[k] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", array);
    for(int i = 0; 3 * i < k ; i++){
        array2[i] = array[3*i];
    }
    printf(""Der neue String lautet: %s"", array2);
}","#include <stdio.h>
int main(int zpamitumpwnf, char** argv){
    char ykbthrghtmus [100];
    char jnnsmnsssebx [100];
    int svortyozpdgk = 0;
    for( int lmvpdofuhiqx = 1; lmvpdofuhiqx < zpamitumpwnf; lmvpdofuhiqx++){
        for(int gxyqzfjxxmun = 0; '\0' != argv[lmvpdofuhiqx][gxyqzfjxxmun]; gxyqzfjxxmun++){
             if(argv[lmvpdofuhiqx][gxyqzfjxxmun] != 'x' && argv[lmvpdofuhiqx][gxyqzfjxxmun] && argv[lmvpdofuhiqx][gxyqzfjxxmun] != 'y' && argv[lmvpdofuhiqx][gxyqzfjxxmun]!= 'q' && argv[lmvpdofuhiqx][gxyqzfjxxmun] != 'X' && argv[lmvpdofuhiqx][gxyqzfjxxmun] != 'Y' && argv[lmvpdofuhiqx][gxyqzfjxxmun] != 'Q'){ 
             ykbthrghtmus[svortyozpdgk] = argv[lmvpdofuhiqx][gxyqzfjxxmun];
             svortyozpdgk++;
             }
        }
    }
    ykbthrghtmus[svortyozpdgk] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", ykbthrghtmus);
    for(int lmvpdofuhiqx = 0; 3 * lmvpdofuhiqx < svortyozpdgk ; lmvpdofuhiqx++){
        jnnsmnsssebx[lmvpdofuhiqx] = ykbthrghtmus[3*lmvpdofuhiqx];
    }
    printf(""Der neue String lautet: %s"", jnnsmnsssebx);
}",1.0
"#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}","#include <stdio.h>
int main(int mvvifwhipiam, char** argv){
	char aghdxdafdahw[100];
	int rxoaoojzdtml = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int omiovldjjaqb = 1; omiovldjjaqb < mvvifwhipiam; omiovldjjaqb++){
		for(int jxdkyiwabooe = 0; argv[omiovldjjaqb][jxdkyiwabooe] != '\0'; jxdkyiwabooe++){
			if(argv[omiovldjjaqb][jxdkyiwabooe] == 'x'){
				for(int zlkrgojgcvtc = jxdkyiwabooe; argv[omiovldjjaqb][zlkrgojgcvtc] != '\0'; zlkrgojgcvtc++){
					argv[omiovldjjaqb][zlkrgojgcvtc] = argv[omiovldjjaqb][zlkrgojgcvtc+1];
				}
			};
			if(argv[omiovldjjaqb][jxdkyiwabooe] == 'X'){
				for(int zlkrgojgcvtc = jxdkyiwabooe; argv[omiovldjjaqb][zlkrgojgcvtc] != '\0'; zlkrgojgcvtc++){
					argv[omiovldjjaqb][zlkrgojgcvtc] = argv[omiovldjjaqb][zlkrgojgcvtc+1];
				}
			};
			if(argv[omiovldjjaqb][jxdkyiwabooe] == 'y'){
				for(int zlkrgojgcvtc = jxdkyiwabooe; argv[omiovldjjaqb][zlkrgojgcvtc] != '\0'; zlkrgojgcvtc++){
					argv[omiovldjjaqb][zlkrgojgcvtc] = argv[omiovldjjaqb][zlkrgojgcvtc+1];
				}
			};
			if(argv[omiovldjjaqb][jxdkyiwabooe] == 'Y'){
				for(int zlkrgojgcvtc = jxdkyiwabooe; argv[omiovldjjaqb][zlkrgojgcvtc] != '\0'; zlkrgojgcvtc++){
					argv[omiovldjjaqb][zlkrgojgcvtc] = argv[omiovldjjaqb][zlkrgojgcvtc+1];
				}
			};
			if(argv[omiovldjjaqb][jxdkyiwabooe] == 'q'){
				for(int zlkrgojgcvtc = jxdkyiwabooe; argv[omiovldjjaqb][zlkrgojgcvtc] != '\0'; zlkrgojgcvtc++){
					argv[omiovldjjaqb][zlkrgojgcvtc] = argv[omiovldjjaqb][zlkrgojgcvtc+1];
				}
			};
			if(argv[omiovldjjaqb][jxdkyiwabooe] == 'Q'){
				for(int zlkrgojgcvtc = jxdkyiwabooe; argv[omiovldjjaqb][zlkrgojgcvtc] != '\0'; zlkrgojgcvtc++){
					argv[omiovldjjaqb][zlkrgojgcvtc] = argv[omiovldjjaqb][zlkrgojgcvtc+1];
				}
			};
			if(argv[omiovldjjaqb][jxdkyiwabooe] == '\0') rxoaoojzdtml -= 1;
			if(argv[omiovldjjaqb][jxdkyiwabooe] != '\0') aghdxdafdahw[rxoaoojzdtml] = argv[omiovldjjaqb][jxdkyiwabooe];
			rxoaoojzdtml++;
		}
	}
	char sdapsdxdlnvf[100];
	int lmcwyshidrwy = 0;
	for(int omiovldjjaqb = 0; omiovldjjaqb < rxoaoojzdtml; omiovldjjaqb++){
			if((omiovldjjaqb % 3) == 0){
				sdapsdxdlnvf[lmcwyshidrwy] = aghdxdafdahw[omiovldjjaqb];
				lmcwyshidrwy++;
			}
	}
	for(int omiovldjjaqb = 0; omiovldjjaqb < rxoaoojzdtml; omiovldjjaqb++){
		printf(""%c"", aghdxdafdahw[omiovldjjaqb]);
	}
	printf(""\nDer neue String lautet: "");
	for(int omiovldjjaqb = 0; omiovldjjaqb < lmcwyshidrwy; omiovldjjaqb++){
		printf(""%c"", sdapsdxdlnvf[omiovldjjaqb]);
	}
	printf(""\n"");
}",1.0
"#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}","#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}
//**(argv + 1 + lange) != '\0'",0.0
"#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}","#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}",0.0
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\0';
printf(""Der neue String lautet: %s\n"",erg2);
}","#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}",0.0
"#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}","#include <stdio.tqprprspgiru>
#include <stdlib.tqprprspgiru>
void rfbbacsqsser(char* str){
for(int vltfawupfszo = 0; str[vltfawupfszo] != '\0'; vltfawupfszo++){
   if(str[vltfawupfszo] == 'x' || str[vltfawupfszo] == 'y' || str[vltfawupfszo] == 'q' || str[vltfawupfszo] == 'X' || str[vltfawupfszo] == 'Y' || str[vltfawupfszo] == 'Q'){ 
   for(int tqprprspgiru = vltfawupfszo; str[tqprprspgiru] != '0'; tqprprspgiru++) str[tqprprspgiru] = str[tqprprspgiru+1];
   }
 }
}
char* strc(char* tpwptinukwwp, char* str2){
int vltfawupfszo,tqprprspgiru;
char* st = tpwptinukwwp;
for(vltfawupfszo = 0; st[vltfawupfszo] != '\0'; vltfawupfszo++){
}
for(tqprprspgiru = 0; str2[tqprprspgiru] != '\0'; tqprprspgiru++){
tpwptinukwwp[vltfawupfszo+tqprprspgiru] = str2[tqprprspgiru];
}
tpwptinukwwp[vltfawupfszo+tqprprspgiru]= '\0';
return tpwptinukwwp;
}
int main( int bxxwjhtzpaxd, char* argv[] )
{  
rfbbacsqsser(argv[1]);
rfbbacsqsser(argv[2]);
rfbbacsqsser(argv[3]);
rfbbacsqsser(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
}",1.0
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}
//**(argv + 1 + lange) != '\0'","#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
}",0.0
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\0';
printf(""Der neue String lautet: %s\n"",erg2);
}","#include <stdio.h>
int main(int argc, char* argv[]) {
    //char* str[] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""}; //zum testen
    //int agc = 4;                                              //zum testen
    for(int i= 1; i<5; i++){
    //printf(""%s\n"", str[i]);                                 //test
    }
    char string1[100]; string1[99] = '\0';
    char string2[100]; string2[99] = '\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\0';
        string2[i] = '\0';
        string3[i] = '\0';
    }
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\0'){
        laenge++;
        j++;
        }
        //printf(""i=%i - laenge=%i\n"", i, laenge);                //test
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    //buchstabenloeschen
    int j = 0;
    int length = 0;
    while(string1[j] != '\0'){
    length++;
    j++;
    }
    //printf(""length: %i\n"", length);                       //test
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
    //nur noch jeden 3ten Buchstaben verwenden
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\n"", string3);
    //string1[0] = str[1][0];                                   //test
    //printf(""%s\n"", string1);                                  //test
    //printf(""%s\n"", string2);                                  //test
    //printf(""%s\n"", string3);                                  //test
    return 0;
}",0.0
"#include <stdio.h>
int main(int  argc, char *argv[]) // start at argv[1]
{
char array[100];
int slot_count = 0;
char b[100];
int slot_count_b = 0;
for(int i = 1; i < argc; i++)
	{
	int j = -1;
	do
		{
		j++;
		if(argv[i][j] == 'x') continue;
		else if(argv[i][j] == 'y') continue;
		else if(argv[i][j] == 'q') continue;
		else if(argv[i][j] == 'X') continue;
		else if(argv[i][j] == 'Y') continue;
		else if(argv[i][j] == 'Q') continue;
		else if(argv[i][j] == '\0')
			{
			array[slot_count] = '\0';
			b[slot_count_b] = '\0';
			}
		else
			{
			array[slot_count] = argv[i][j];
			if( (slot_count == 0 || (slot_count) % 3 == 0) )
				{
				b[slot_count_b] = array[slot_count];
				slot_count_b++;
				}		
			slot_count++;
			}
		}		
	while(argv[i][j] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int m = 0; m < slot_count; m++) printf(""%c"", array[m]); 
printf(""\nDer neue String lautet: "");
for(int n = 0; n < slot_count_b; n++) printf(""%c"", b[n]); 
}","#include <stdio.h>
int main(int  odvxvzbpyvfy, char *gvgrjgsipmue[]) 
{
char nwshnozgbjwp[100];
int hfsaqmqzynqm = 0;
char tzdmikbdthtg[100];
int mmujveluphri = 0;
for(int pmijhckdluqu = 1; pmijhckdluqu < odvxvzbpyvfy; pmijhckdluqu++)
	{
	int jvozbxgdaaon = -1;
	do
		{
		jvozbxgdaaon++;
		gxbfaziorars(gvgrjgsipmue[pmijhckdluqu][jvozbxgdaaon] == 'x') continue;
		else gxbfaziorars(gvgrjgsipmue[pmijhckdluqu][jvozbxgdaaon] == 'y') continue;
		else gxbfaziorars(gvgrjgsipmue[pmijhckdluqu][jvozbxgdaaon] == 'q') continue;
		else gxbfaziorars(gvgrjgsipmue[pmijhckdluqu][jvozbxgdaaon] == 'X') continue;
		else gxbfaziorars(gvgrjgsipmue[pmijhckdluqu][jvozbxgdaaon] == 'Y') continue;
		else gxbfaziorars(gvgrjgsipmue[pmijhckdluqu][jvozbxgdaaon] == 'Q') continue;
		else gxbfaziorars(gvgrjgsipmue[pmijhckdluqu][jvozbxgdaaon] == '\0')
			{
			nwshnozgbjwp[hfsaqmqzynqm] = '\0';
			tzdmikbdthtg[mmujveluphri] = '\0';
			}
		else
			{
			nwshnozgbjwp[hfsaqmqzynqm] = gvgrjgsipmue[pmijhckdluqu][jvozbxgdaaon];
			gxbfaziorars( (hfsaqmqzynqm == 0 || (hfsaqmqzynqm) % 3 == 0) )
				{
				tzdmikbdthtg[mmujveluphri] = nwshnozgbjwp[hfsaqmqzynqm];
				mmujveluphri++;
				}		
			hfsaqmqzynqm++;
			}
		}		
	while(gvgrjgsipmue[pmijhckdluqu][jvozbxgdaaon] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int npakrhlaxboe = 0; npakrhlaxboe < hfsaqmqzynqm; npakrhlaxboe++) printf(""%c"", nwshnozgbjwp[npakrhlaxboe]); 
printf(""\nDer neue String lautet: "");
for(int ubenkeirglmv = 0; ubenkeirglmv < mmujveluphri; ubenkeirglmv++) printf(""%c"", tzdmikbdthtg[ubenkeirglmv]); 
}",1.0
"#include <stdio.h>
int main(int argc, char* argv[]){
	int a = 0;
	char str1[100];
	for(int i = 1; i<argc; ++i){
		int j = 0; 
		while(argv[i][j] != '\0'){
			if(argv[i][j] == 'x' || argv[i][j] == 'y' || argv[i][j] == 'q' || argv[i][j] == 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q'){
			}else{
				str1[a] = argv[i][j];
				++a;
			}
			++j;
		}
	}
	str1[a] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"", str1);
	char str2[100];
	int i = 0;
	int j = 0;
	while(str1[i] != '\0'){
		if(i%3 == 0){
			str2[j] = str1[i];
			++j;
		}
		++i;
	}
	str2[j] = '\0';
	printf(""Der neue String lautet: %s\n"", str2);
}","#include <stdio.h>
int main(int  argc, char *argv[]) // start at argv[1]
{
char array[100];
int slot_count = 0;
char b[100];
int slot_count_b = 0;
for(int i = 1; i < argc; i++)
	{
	int j = -1;
	do
		{
		j++;
		if(argv[i][j] == 'x') continue;
		else if(argv[i][j] == 'y') continue;
		else if(argv[i][j] == 'q') continue;
		else if(argv[i][j] == 'X') continue;
		else if(argv[i][j] == 'Y') continue;
		else if(argv[i][j] == 'Q') continue;
		else if(argv[i][j] == '\0')
			{
			array[slot_count] = '\0';
			b[slot_count_b] = '\0';
			}
		else
			{
			array[slot_count] = argv[i][j];
			if( (slot_count == 0 || (slot_count) % 3 == 0) )
				{
				b[slot_count_b] = array[slot_count];
				slot_count_b++;
				}		
			slot_count++;
			}
		}		
	while(argv[i][j] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int m = 0; m < slot_count; m++) printf(""%c"", array[m]); 
printf(""\nDer neue String lautet: "");
for(int n = 0; n < slot_count_b; n++) printf(""%c"", b[n]); 
}",0.0
"#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \n"", kedi(argc,argv)[1] );
}","#include <stdio.h>
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; str1[i] != 0 ; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; str2[i] != 0 ; i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; str1[i] != 0 ; i++){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[i] != 0 ; i++ ){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	for(int i = 0; i < 100; i++)
	{string[i] = 0x00; string2[i] = 0x00;}
	//char x;
	for( int i = 1 ; i < argc ; i++ ){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\n"", string);
}",0.0
"#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}","#include <stdio.h>
int main(int mnwemplkprxa, char** argv){
    char qocyfjljyypl[100]= """";
    char wvrixdhlozyk[100]= """";
    int gklfwldoulpw =0;
    int uzduyznmrmnh =0;
    for (int yttovnkxcifh = 1; yttovnkxcifh < mnwemplkprxa ; yttovnkxcifh++)
    {   
        for (int xdgpkyekiljc = 0; argv[yttovnkxcifh][xdgpkyekiljc] != '\0'; xdgpkyekiljc++)
        {   
            if (argv[yttovnkxcifh][xdgpkyekiljc] != 'x' && argv[yttovnkxcifh][xdgpkyekiljc] != 'y' && argv[yttovnkxcifh][xdgpkyekiljc] != 'q' && argv[yttovnkxcifh][xdgpkyekiljc] != 'X' && argv[yttovnkxcifh][xdgpkyekiljc] != 'Y' && argv[yttovnkxcifh][xdgpkyekiljc] != 'Q')
            {
                qocyfjljyypl[gklfwldoulpw] = argv[yttovnkxcifh][xdgpkyekiljc];
                if (gklfwldoulpw % 3 == 0)
                {
                    wvrixdhlozyk[uzduyznmrmnh] = argv[yttovnkxcifh][xdgpkyekiljc];
                    uzduyznmrmnh++;
                }
                gklfwldoulpw++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", qocyfjljyypl);
    printf(""Der neue String lautet: %s\n"",wvrixdhlozyk);
}",1.0
"#include <stdio.h>
int main(int argc, char* argv[]) {
    //char* str[] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""}; //zum testen
    //int agc = 4;                                              //zum testen
    for(int i= 1; i<5; i++){
    //printf(""%s\n"", str[i]);                                 //test
    }
    char string1[100]; string1[99] = '\0';
    char string2[100]; string2[99] = '\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\0';
        string2[i] = '\0';
        string3[i] = '\0';
    }
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\0'){
        laenge++;
        j++;
        }
        //printf(""i=%i - laenge=%i\n"", i, laenge);                //test
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    //buchstabenloeschen
    int j = 0;
    int length = 0;
    while(string1[j] != '\0'){
    length++;
    j++;
    }
    //printf(""length: %i\n"", length);                       //test
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
    //nur noch jeden 3ten Buchstaben verwenden
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\n"", string3);
    //string1[0] = str[1][0];                                   //test
    //printf(""%s\n"", string1);                                  //test
    //printf(""%s\n"", string2);                                  //test
    //printf(""%s\n"", string3);                                  //test
    return 0;
}","#include <stdio.h>
int main(int lwyakknqyydp, char* argv[]) {
    for(int btequmwdqttm= 1; btequmwdqttm<5; btequmwdqttm++){
    }
    char ycbfesibmxlm[100]; ycbfesibmxlm[99] = '\0';
    char tyltezndcpmk[100]; tyltezndcpmk[99] = '\0';
    char nabuxwsbpojr[100];
    for(int btequmwdqttm = 0; btequmwdqttm < 100; btequmwdqttm++){
        ycbfesibmxlm[btequmwdqttm] = '\0';
        tyltezndcpmk[btequmwdqttm] = '\0';
        nabuxwsbpojr[btequmwdqttm] = '\0';
    }
    int rjwlsgooamiy = 0;
    for(int btequmwdqttm = 1; btequmwdqttm<lwyakknqyydp; btequmwdqttm++){
        int ykjdodhobmsx = 0;
        int rvjsequbrojq = 0;
        while(argv[btequmwdqttm][ykjdodhobmsx] != '\0'){
        rvjsequbrojq++;
        ykjdodhobmsx++;
        }
        for(int nilbsihrrzkk = 0; nilbsihrrzkk<rvjsequbrojq; nilbsihrrzkk++){
            ycbfesibmxlm[rjwlsgooamiy] = argv[btequmwdqttm][nilbsihrrzkk];
            rjwlsgooamiy++;
        }
    }
    int ykjdodhobmsx = 0;
    int bsaygoxieohs = 0;
    while(ycbfesibmxlm[ykjdodhobmsx] != '\0'){
    bsaygoxieohs++;
    ykjdodhobmsx++;
    }
    int clesfsoutebn = 0;
    for(int btequmwdqttm=0; btequmwdqttm<bsaygoxieohs; btequmwdqttm++){
        yptptboaxgno(ycbfesibmxlm[btequmwdqttm] == 'x' || ycbfesibmxlm[btequmwdqttm] == 'nilbsihrrzkk' || ycbfesibmxlm[btequmwdqttm] == 'q'){
        }
        else yptptboaxgno(ycbfesibmxlm[btequmwdqttm] == 'X' || ycbfesibmxlm[btequmwdqttm] == 'Y' || ycbfesibmxlm[btequmwdqttm] == 'Q'){
        }
        else{
            tyltezndcpmk[clesfsoutebn] = ycbfesibmxlm[btequmwdqttm];
            clesfsoutebn++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", tyltezndcpmk);
    int bslnzmjtzpay = 0;
    for(int btequmwdqttm=0; btequmwdqttm<=clesfsoutebn; btequmwdqttm+=3){
        nabuxwsbpojr[bslnzmjtzpay] = tyltezndcpmk[btequmwdqttm];
        bslnzmjtzpay++;
    }
    printf(""Der neue String lautet: %s\n"", nabuxwsbpojr);
    return 0;
}",1.0
"#include <stdio.h>
int main(int argc, char* argv[]){
	int a = 0;
	char str1[100];
	for(int i = 1; i<argc; ++i){
		int j = 0; 
		while(argv[i][j] != '\0'){
			if(argv[i][j] == 'x' || argv[i][j] == 'y' || argv[i][j] == 'q' || argv[i][j] == 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q'){
			}else{
				str1[a] = argv[i][j];
				++a;
			}
			++j;
		}
	}
	str1[a] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"", str1);
	char str2[100];
	int i = 0;
	int j = 0;
	while(str1[i] != '\0'){
		if(i%3 == 0){
			str2[j] = str1[i];
			++j;
		}
		++i;
	}
	str2[j] = '\0';
	printf(""Der neue String lautet: %s\n"", str2);
}","#include <stdio.h>
int main(int wrzcnnnfwzjm, char* argv[]){
	int tlaxgqwogfof = 0;
	char bluhredaablo[100];
	for(int ieomqjxnwbbp = 1; ieomqjxnwbbp<wrzcnnnfwzjm; ++ieomqjxnwbbp){
		int mdzwdfctspfs = 0; 
		while(argv[ieomqjxnwbbp][mdzwdfctspfs] != '\0'){
			if(argv[ieomqjxnwbbp][mdzwdfctspfs] == 'x' || argv[ieomqjxnwbbp][mdzwdfctspfs] == 'y' || argv[ieomqjxnwbbp][mdzwdfctspfs] == 'q' || argv[ieomqjxnwbbp][mdzwdfctspfs] == 'X' || argv[ieomqjxnwbbp][mdzwdfctspfs]== 'Y' || argv[ieomqjxnwbbp][mdzwdfctspfs]== 'Q'){
			}else{
				bluhredaablo[tlaxgqwogfof] = argv[ieomqjxnwbbp][mdzwdfctspfs];
				++tlaxgqwogfof;
			}
			++mdzwdfctspfs;
		}
	}
	bluhredaablo[tlaxgqwogfof] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"", bluhredaablo);
	char fyotgicvudfa[100];
	int ieomqjxnwbbp = 0;
	int mdzwdfctspfs = 0;
	while(bluhredaablo[ieomqjxnwbbp] != '\0'){
		if(ieomqjxnwbbp%3 == 0){
			fyotgicvudfa[mdzwdfctspfs] = bluhredaablo[ieomqjxnwbbp];
			++mdzwdfctspfs;
		}
		++ieomqjxnwbbp;
	}
	fyotgicvudfa[mdzwdfctspfs] = '\0';
	printf(""Der neue String lautet: %s\n"", fyotgicvudfa);
}",1.0
"#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
}","#include <stdio.h>
int main(int  argc, char *argv[]) // start at argv[1]
{
char array[100];
int slot_count = 0;
char b[100];
int slot_count_b = 0;
for(int i = 1; i < argc; i++)
	{
	int j = -1;
	do
		{
		j++;
		if(argv[i][j] == 'x') continue;
		else if(argv[i][j] == 'y') continue;
		else if(argv[i][j] == 'q') continue;
		else if(argv[i][j] == 'X') continue;
		else if(argv[i][j] == 'Y') continue;
		else if(argv[i][j] == 'Q') continue;
		else if(argv[i][j] == '\0')
			{
			array[slot_count] = '\0';
			b[slot_count_b] = '\0';
			}
		else
			{
			array[slot_count] = argv[i][j];
			if( (slot_count == 0 || (slot_count) % 3 == 0) )
				{
				b[slot_count_b] = array[slot_count];
				slot_count_b++;
				}		
			slot_count++;
			}
		}		
	while(argv[i][j] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int m = 0; m < slot_count; m++) printf(""%c"", array[m]); 
printf(""\nDer neue String lautet: "");
for(int n = 0; n < slot_count_b; n++) printf(""%c"", b[n]); 
}",0.0
"#include <stdio.h>
int main() {
   char satz[100], satz2[100];
   int l, k;
   fgets(satz, sizeof(satz), stdin);
   for (int i = 0, j; satz[i] != '\0'; ++i) {
      while (!(satz[i] >= 'a' && satz[i] <= 'p') && !(satz[i] >= 'r' && satz[i] <= 'w') && !(satz[i] == 'z') && !(satz[i] >= 'A' && satz[i] <= 'P') && !(satz[i] >= 'R' && satz[i] <= 'W') && !(satz[i] == 'Z') && !(satz[i] == '!') && !(satz[i] == '?') && !(satz[i] == '\0')){
         for (j = i; satz[j] != '\0'; ++j) {
            satz[j] = satz[j + 1];
         }
         satz[j] = '\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(satz);
     for (int l = 0, k; satz[l] != '\0'; ++l) {
        satz2[k] == satz[l];
        k++;
        l=l+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}","#include <stdio.h>
int main() {
   char mphasyexrzfq[100], satz2[100];
   int hrvxvxbqetcp, k;
   fgets(mphasyexrzfq, sizeof(mphasyexrzfq), stdin);
   for (int vffnairdvitd = 0, j; mphasyexrzfq[vffnairdvitd] != '\0'; ++vffnairdvitd) {
      while (!(mphasyexrzfq[vffnairdvitd] >= 'a' && mphasyexrzfq[vffnairdvitd] <= 'p') && !(mphasyexrzfq[vffnairdvitd] >= 'r' && mphasyexrzfq[vffnairdvitd] <= 'w') && !(mphasyexrzfq[vffnairdvitd] == 'z') && !(mphasyexrzfq[vffnairdvitd] >= 'A' && mphasyexrzfq[vffnairdvitd] <= 'P') && !(mphasyexrzfq[vffnairdvitd] >= 'R' && mphasyexrzfq[vffnairdvitd] <= 'W') && !(mphasyexrzfq[vffnairdvitd] == 'Z') && !(mphasyexrzfq[vffnairdvitd] == '!') && !(mphasyexrzfq[vffnairdvitd] == '?') && !(mphasyexrzfq[vffnairdvitd] == '\0')){
         for (j = vffnairdvitd; mphasyexrzfq[j] != '\0'; ++j) {
            mphasyexrzfq[j] = mphasyexrzfq[j + 1];
         }
         mphasyexrzfq[j] = '\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(mphasyexrzfq);
     for (int hrvxvxbqetcp = 0, k; mphasyexrzfq[hrvxvxbqetcp] != '\0'; ++hrvxvxbqetcp) {
        satz2[k] == mphasyexrzfq[hrvxvxbqetcp];
        k++;
        hrvxvxbqetcp=hrvxvxbqetcp+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}",1.0
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\0';
printf(""Der neue String lautet: %s\n"",erg2);
}","#include <stdio.h>
#include <stdlib.h>
int main( int bjcugtblcozp, char* argv[] )
{
 char pvpgxrmroucm[100];
 int osjgbrmqiayp=0;
 for(int fbotysppdfci=0;fbotysppdfci<bjcugtblcozp-1;fbotysppdfci++){
	 int ztapeblymauk=0;
	 while(argv[fbotysppdfci+1][ztapeblymauk] != '\0'){
		 char nunkufntzpmx=argv[fbotysppdfci+1][ztapeblymauk];
		 if(nunkufntzpmx != 'x' && nunkufntzpmx != 'y' && nunkufntzpmx != 'q'){
			 if(nunkufntzpmx != 'X' && nunkufntzpmx != 'Y' && nunkufntzpmx != 'Q'){
			 pvpgxrmroucm[osjgbrmqiayp]=argv[fbotysppdfci+1][ztapeblymauk];
			 osjgbrmqiayp++;
			 }
		 }
		 ztapeblymauk++;
	 }
pvpgxrmroucm[osjgbrmqiayp]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",pvpgxrmroucm);
 char eaoemsbplfrj[100];
 int awndkbtrxuhj=0;
 int ztapeblymauk=0;
 	 while(pvpgxrmroucm[awndkbtrxuhj] != '\0'){
 		 if(awndkbtrxuhj % 3==0){
 			 eaoemsbplfrj[ztapeblymauk]=pvpgxrmroucm[awndkbtrxuhj];
 			 ztapeblymauk++;
 		 }
 		 awndkbtrxuhj++;
 	 }
 eaoemsbplfrj[osjgbrmqiayp]='\0';
printf(""Der neue String lautet: %s\n"",eaoemsbplfrj);
}",1.0
"#include <stdio.h>
int main(int argc, char** argv){
    char array [100];
    char array2 [100];
    int k = 0;
    for( int i = 1; i < argc; i++){
        for(int j = 0; '\0' != argv[i][j]; j++){
             if(argv[i][j] != 'x' && argv[i][j] && argv[i][j] != 'y' && argv[i][j]!= 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q'){ 
             array[k] = argv[i][j];
             k++;
             }
        }
    }
    array[k] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", array);
    for(int i = 0; 3 * i < k ; i++){
        array2[i] = array[3*i];
    }
    printf(""Der neue String lautet: %s"", array2);
}","#include <stdio.h>
int main(int argc, char* argv[]){
	int a = 0;
	char str1[100];
	for(int i = 1; i<argc; ++i){
		int j = 0; 
		while(argv[i][j] != '\0'){
			if(argv[i][j] == 'x' || argv[i][j] == 'y' || argv[i][j] == 'q' || argv[i][j] == 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q'){
			}else{
				str1[a] = argv[i][j];
				++a;
			}
			++j;
		}
	}
	str1[a] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"", str1);
	char str2[100];
	int i = 0;
	int j = 0;
	while(str1[i] != '\0'){
		if(i%3 == 0){
			str2[j] = str1[i];
			++j;
		}
		++i;
	}
	str2[j] = '\0';
	printf(""Der neue String lautet: %s\n"", str2);
}",0.0
"#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
}","#include <stdio.h>
int main(int fxmpgovmapeh, char** argv){
    char odtaavshksmd[100] = """";
    char llrausybssiw[100] = """";
    char zfvtqwizsbmr[100] = """";
    int unvwdruushmv = 0;
    for (int gvjowxoeuamj = 1; gvjowxoeuamj < fxmpgovmapeh; gvjowxoeuamj++){
        for (int gclyaledoxym = 0; argv[gvjowxoeuamj][gclyaledoxym] != '\0' ; gclyaledoxym++){
           odtaavshksmd[unvwdruushmv] += argv[gvjowxoeuamj][gclyaledoxym];
           unvwdruushmv++;
        }  
    }
    int gclyaledoxym = 0;
    for (int gvjowxoeuamj = 0; odtaavshksmd[gvjowxoeuamj] != '\0'; gvjowxoeuamj++){
        if(odtaavshksmd[gvjowxoeuamj] != 'x' && odtaavshksmd[gvjowxoeuamj] != 'y' && odtaavshksmd[gvjowxoeuamj] != 'q' && odtaavshksmd[gvjowxoeuamj] != 'X' && odtaavshksmd[gvjowxoeuamj] != 'Y' && odtaavshksmd[gvjowxoeuamj] != 'Q' ){
            llrausybssiw[gclyaledoxym] = odtaavshksmd[gvjowxoeuamj];
            gclyaledoxym++;
        }
    }
    int emwbajeolxmq = 0;
    for (int gvjowxoeuamj = 0 ; llrausybssiw[gvjowxoeuamj] != '\0'; gvjowxoeuamj = gvjowxoeuamj + 3){
        zfvtqwizsbmr[emwbajeolxmq] = llrausybssiw[gvjowxoeuamj];
        emwbajeolxmq++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", llrausybssiw);
    printf(""Der neue String lautet: %s\n"", zfvtqwizsbmr);
}",1.0
"#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}","#include <stdio.h>
int main(int argc, char* argv[]) {
    //char* str[] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""}; //zum testen
    //int agc = 4;                                              //zum testen
    for(int i= 1; i<5; i++){
    //printf(""%s\n"", str[i]);                                 //test
    }
    char string1[100]; string1[99] = '\0';
    char string2[100]; string2[99] = '\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\0';
        string2[i] = '\0';
        string3[i] = '\0';
    }
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\0'){
        laenge++;
        j++;
        }
        //printf(""i=%i - laenge=%i\n"", i, laenge);                //test
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    //buchstabenloeschen
    int j = 0;
    int length = 0;
    while(string1[j] != '\0'){
    length++;
    j++;
    }
    //printf(""length: %i\n"", length);                       //test
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
    //nur noch jeden 3ten Buchstaben verwenden
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\n"", string3);
    //string1[0] = str[1][0];                                   //test
    //printf(""%s\n"", string1);                                  //test
    //printf(""%s\n"", string2);                                  //test
    //printf(""%s\n"", string3);                                  //test
    return 0;
}",0.0
"#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}","#include <stdio.h>
int main(int zrljcjhjlpmy, char** argv){
	char xsazcoieiimx[100];
	int zyvtjzddqsxu = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int pizbelzqbgga = 1; pizbelzqbgga < zrljcjhjlpmy; pizbelzqbgga++){
		for(int zjfvhgigkbmo = 0; argv[pizbelzqbgga][zjfvhgigkbmo] != '\0'; zjfvhgigkbmo++){
			if(argv[pizbelzqbgga][zjfvhgigkbmo] == 'x'){
				for(int feqckgpxlree = zjfvhgigkbmo; argv[pizbelzqbgga][feqckgpxlree] != '\0'; feqckgpxlree++){
					argv[pizbelzqbgga][feqckgpxlree] = argv[pizbelzqbgga][feqckgpxlree+1];
				}
			};
			if(argv[pizbelzqbgga][zjfvhgigkbmo] == 'X'){
				for(int feqckgpxlree = zjfvhgigkbmo; argv[pizbelzqbgga][feqckgpxlree] != '\0'; feqckgpxlree++){
					argv[pizbelzqbgga][feqckgpxlree] = argv[pizbelzqbgga][feqckgpxlree+1];
				}
			};
			if(argv[pizbelzqbgga][zjfvhgigkbmo] == 'y'){
				for(int feqckgpxlree = zjfvhgigkbmo; argv[pizbelzqbgga][feqckgpxlree] != '\0'; feqckgpxlree++){
					argv[pizbelzqbgga][feqckgpxlree] = argv[pizbelzqbgga][feqckgpxlree+1];
				}
			};
			if(argv[pizbelzqbgga][zjfvhgigkbmo] == 'Y'){
				for(int feqckgpxlree = zjfvhgigkbmo; argv[pizbelzqbgga][feqckgpxlree] != '\0'; feqckgpxlree++){
					argv[pizbelzqbgga][feqckgpxlree] = argv[pizbelzqbgga][feqckgpxlree+1];
				}
			};
			if(argv[pizbelzqbgga][zjfvhgigkbmo] == 'q'){
				for(int feqckgpxlree = zjfvhgigkbmo; argv[pizbelzqbgga][feqckgpxlree] != '\0'; feqckgpxlree++){
					argv[pizbelzqbgga][feqckgpxlree] = argv[pizbelzqbgga][feqckgpxlree+1];
				}
			};
			if(argv[pizbelzqbgga][zjfvhgigkbmo] == 'Q'){
				for(int feqckgpxlree = zjfvhgigkbmo; argv[pizbelzqbgga][feqckgpxlree] != '\0'; feqckgpxlree++){
					argv[pizbelzqbgga][feqckgpxlree] = argv[pizbelzqbgga][feqckgpxlree+1];
				}
			};
			if(argv[pizbelzqbgga][zjfvhgigkbmo] == '\0') zyvtjzddqsxu -= 1;
			if(argv[pizbelzqbgga][zjfvhgigkbmo] != '\0') xsazcoieiimx[zyvtjzddqsxu] = argv[pizbelzqbgga][zjfvhgigkbmo];
			zyvtjzddqsxu++;
		}
	}
	char lwkkkttadxow[100];
	int grrllqxgomol = 0;
	for(int pizbelzqbgga = 0; pizbelzqbgga < zyvtjzddqsxu; pizbelzqbgga++){
			if((pizbelzqbgga % 3) == 0){
				lwkkkttadxow[grrllqxgomol] = xsazcoieiimx[pizbelzqbgga];
				grrllqxgomol++;
			}
	}
	for(int pizbelzqbgga = 0; pizbelzqbgga < zyvtjzddqsxu; pizbelzqbgga++){
		printf(""%c"", xsazcoieiimx[pizbelzqbgga]);
	}
	printf(""\nDer neue String lautet: "");
	for(int pizbelzqbgga = 0; pizbelzqbgga < grrllqxgomol; pizbelzqbgga++){
		printf(""%c"", lwkkkttadxow[pizbelzqbgga]);
	}
	printf(""\n"");
}",1.0
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}
//**(argv + 1 + lange) != '\0'","#include <stdio.h>
int main(int argc, char* argv[]) {
    //char* str[] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""}; //zum testen
    //int agc = 4;                                              //zum testen
    for(int i= 1; i<5; i++){
    //printf(""%s\n"", str[i]);                                 //test
    }
    char string1[100]; string1[99] = '\0';
    char string2[100]; string2[99] = '\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\0';
        string2[i] = '\0';
        string3[i] = '\0';
    }
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\0'){
        laenge++;
        j++;
        }
        //printf(""i=%i - laenge=%i\n"", i, laenge);                //test
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    //buchstabenloeschen
    int j = 0;
    int length = 0;
    while(string1[j] != '\0'){
    length++;
    j++;
    }
    //printf(""length: %i\n"", length);                       //test
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
    //nur noch jeden 3ten Buchstaben verwenden
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\n"", string3);
    //string1[0] = str[1][0];                                   //test
    //printf(""%s\n"", string1);                                  //test
    //printf(""%s\n"", string2);                                  //test
    //printf(""%s\n"", string3);                                  //test
    return 0;
}",0.0
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\0';
printf(""Der neue String lautet: %s\n"",erg2);
}","#include <stdio.h>
#include <stdlib.h>
int main( int vcazhumthmae, char* argv[] )
{
 char jnlkjvhdbkrn[100];
 int xzvyupfczpcp=0;
 for(int thspvqghkajz=0;thspvqghkajz<vcazhumthmae-1;thspvqghkajz++){
	 int dzjyijqimnau=0;
	 while(argv[thspvqghkajz+1][dzjyijqimnau] != '\0'){
		 char kukxlkfqrmab=argv[thspvqghkajz+1][dzjyijqimnau];
		 if(kukxlkfqrmab != 'x' && kukxlkfqrmab != 'y' && kukxlkfqrmab != 'q'){
			 if(kukxlkfqrmab != 'X' && kukxlkfqrmab != 'Y' && kukxlkfqrmab != 'Q'){
			 jnlkjvhdbkrn[xzvyupfczpcp]=argv[thspvqghkajz+1][dzjyijqimnau];
			 xzvyupfczpcp++;
			 }
		 }
		 dzjyijqimnau++;
	 }
jnlkjvhdbkrn[xzvyupfczpcp]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",jnlkjvhdbkrn);
 char fncqdcfsvuup[100];
 int jaibdzrijgbs=0;
 int dzjyijqimnau=0;
 	 while(jnlkjvhdbkrn[jaibdzrijgbs] != '\0'){
 		 if(jaibdzrijgbs % 3==0){
 			 fncqdcfsvuup[dzjyijqimnau]=jnlkjvhdbkrn[jaibdzrijgbs];
 			 dzjyijqimnau++;
 		 }
 		 jaibdzrijgbs++;
 	 }
 fncqdcfsvuup[xzvyupfczpcp]='\0';
printf(""Der neue String lautet: %s\n"",fncqdcfsvuup);
}",1.0
"#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef jpqzltbgsdaf _String {
	char *bjvdrhliwufr;
	unsigned rivmgzobquka str_len;
} String;
String* eaabkdhvbdzq (rivmgzobquka crikyqxlngje, char** args);
String* eaabkdhvbdzq (rivmgzobquka crikyqxlngje, char** args) {
	String* eaabkdhvbdzq = malloc(sizeof(String) * 2);
	rivmgzobquka vdesxfvchjgv = 0;
	eaabkdhvbdzq[0].str_len = 0;
	eaabkdhvbdzq[0].bjvdrhliwufr = malloc(256*sizeof(char));
	for (rivmgzobquka pwdjzchnfver=1; pwdjzchnfver<crikyqxlngje; pwdjzchnfver++) {
		char* arg = args[pwdjzchnfver];
		rivmgzobquka eizubfmuagtu = 0;
		char vjwexnfqjhbf = arg[eizubfmuagtu];
		while (vjwexnfqjhbf) {
			if (vjwexnfqjhbf == 'x'| vjwexnfqjhbf == 'X' | vjwexnfqjhbf == 'y' | vjwexnfqjhbf == 'Y' | vjwexnfqjhbf == 'q' | vjwexnfqjhbf == 'Q') {
				eizubfmuagtu++;
                        	vjwexnfqjhbf = arg[eizubfmuagtu];
				continue;
			}
			eaabkdhvbdzq[0].bjvdrhliwufr[vdesxfvchjgv] = vjwexnfqjhbf;
			vdesxfvchjgv++;
			eizubfmuagtu++;
			vjwexnfqjhbf = arg[eizubfmuagtu];
		}
	}
	eaabkdhvbdzq[0].str_len = vdesxfvchjgv;
	eaabkdhvbdzq[1].str_len = 0;
	eaabkdhvbdzq[1].bjvdrhliwufr = malloc(256 * sizeof(char));
	for (rivmgzobquka pwdjzchnfver=0; pwdjzchnfver<eaabkdhvbdzq[0].str_len; pwdjzchnfver++) {
		if (pwdjzchnfver%3 == 0) {
			eaabkdhvbdzq[1].bjvdrhliwufr[eaabkdhvbdzq[1].str_len] = eaabkdhvbdzq[0].bjvdrhliwufr[pwdjzchnfver];
			eaabkdhvbdzq[1].str_len++;
			}
		}
	return eaabkdhvbdzq;
}
rivmgzobquka main (rivmgzobquka cbzvxxlggvex, char** argv) {
	String* bjvdrhliwufr = eaabkdhvbdzq(cbzvxxlggvex, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", bjvdrhliwufr[0].bjvdrhliwufr, bjvdrhliwufr[1].bjvdrhliwufr);
	return 0;
}",1.0
"#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef aqbhmukfuijs _String {
	char *bqgqeykdtxnf;
	unsigned ckvemdoybpmo str_len;
} String;
String* pfbusipckeao (ckvemdoybpmo kbsounhalhbx, char** args);
String* pfbusipckeao (ckvemdoybpmo kbsounhalhbx, char** args) {
	String* pfbusipckeao = malloc(sizeof(String) * 2);
	ckvemdoybpmo jxovqzkdiyca = 0;
	pfbusipckeao[0].str_len = 0;
	pfbusipckeao[0].bqgqeykdtxnf = malloc(256*sizeof(char));
	for (ckvemdoybpmo ohfbzdxlguhq=1; ohfbzdxlguhq<kbsounhalhbx; ohfbzdxlguhq++) {
		char* arg = args[ohfbzdxlguhq];
		ckvemdoybpmo olkwzpcmshfx = 0;
		char ivmpbpnpjezl = arg[olkwzpcmshfx];
		while (ivmpbpnpjezl) {
			if (ivmpbpnpjezl == 'x'| ivmpbpnpjezl == 'X' | ivmpbpnpjezl == 'y' | ivmpbpnpjezl == 'Y' | ivmpbpnpjezl == 'q' | ivmpbpnpjezl == 'Q') {
				olkwzpcmshfx++;
                        	ivmpbpnpjezl = arg[olkwzpcmshfx];
				continue;
			}
			pfbusipckeao[0].bqgqeykdtxnf[jxovqzkdiyca] = ivmpbpnpjezl;
			jxovqzkdiyca++;
			olkwzpcmshfx++;
			ivmpbpnpjezl = arg[olkwzpcmshfx];
		}
	}
	pfbusipckeao[0].str_len = jxovqzkdiyca;
	pfbusipckeao[1].str_len = 0;
	pfbusipckeao[1].bqgqeykdtxnf = malloc(256 * sizeof(char));
	for (ckvemdoybpmo ohfbzdxlguhq=0; ohfbzdxlguhq<pfbusipckeao[0].str_len; ohfbzdxlguhq++) {
		if (ohfbzdxlguhq%3 == 0) {
			pfbusipckeao[1].bqgqeykdtxnf[pfbusipckeao[1].str_len] = pfbusipckeao[0].bqgqeykdtxnf[ohfbzdxlguhq];
			pfbusipckeao[1].str_len++;
			}
		}
	return pfbusipckeao;
}
ckvemdoybpmo main (ckvemdoybpmo qcrxetrgkovl, char** argv) {
	String* bqgqeykdtxnf = pfbusipckeao(qcrxetrgkovl, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", bqgqeykdtxnf[0].bqgqeykdtxnf, bqgqeykdtxnf[1].bqgqeykdtxnf);
	return 0;
}",1.0
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\0';
printf(""Der neue String lautet: %s\n"",erg2);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}",0.0
"#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \n"", kedi(argc,argv)[1] );
}","#include sjogiboegjfv.h
xokbijfchycy char* kedi(int czbaqwqosxvo, char* isim[]){
    char dhjaopgtxksl[100];
   int guhbmrxgehtr=0;
    for (int wuubaubuyvvn=0;wuubaubuyvvn<czbaqwqosxvo;wuubaubuyvvn++){
    int vfkyxwvijknx = strlen(isim[wuubaubuyvvn]);
    for (int jvnpdiyxvone=0;jvnpdiyxvone<vfkyxwvijknx;jvnpdiyxvone++){
        if (isim[wuubaubuyvvn][jvnpdiyxvone]==""x""||isim[wuubaubuyvvn][jvnpdiyxvone]||==""y""||isim[wuubaubuyvvn][jvnpdiyxvone]==""q""||isim[wuubaubuyvvn][jvnpdiyxvone]==""X""||isim[wuubaubuyvvn][jvnpdiyxvone]==""Y""||isim[wuubaubuyvvn][jvnpdiyxvone]==""Q""){
            }
            else {dhjaopgtxksl[guhbmrxgehtr]=isim[wuubaubuyvvn][jvnpdiyxvone];guhbmrxgehtr++;}
    }
}    
char qsdhevzkvutx[guhbmrxgehtr];
for (int wuubaubuyvvn=0;wuubaubuyvvn<=guhbmrxgehtr;wuubaubuyvvn++){
    qsdhevzkvutx[wuubaubuyvvn]=dhjaopgtxksl[wuubaubuyvvn];
}
char dvaadgigqudl[guhbmrxgehtr];
for (int wuubaubuyvvn=0;wuubaubuyvvn<guhbmrxgehtr;wuubaubuyvvn++){
    dvaadgigqudl[wuubaubuyvvn]=qsdhevzkvutx[wuubaubuyvvn];
}
return(qsdhevzkvutx,qsdhevzkvutx);
}
int main( int cogrioshcrqb, char* argv[] )
{  
  char ssaufrmqjlky[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \n"", kedi(cogrioshcrqb,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \n"", kedi(cogrioshcrqb,argv)[1] );
}",1.0
"#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
}","#include <stdio.h>
int main(int tqeruudbccbb, char** argv){
    char kbyhszrxmvzl[100] = """";
    char xgxbaxpafnkw[100] = """";
    char djrrblqkfyyl[100] = """";
    int ralgqoweqyay = 0;
    for (int xqhlbtiitkut = 1; xqhlbtiitkut < tqeruudbccbb; xqhlbtiitkut++){
        for (int qiwoauidfrlo = 0; argv[xqhlbtiitkut][qiwoauidfrlo] != '\0' ; qiwoauidfrlo++){
           kbyhszrxmvzl[ralgqoweqyay] += argv[xqhlbtiitkut][qiwoauidfrlo];
           ralgqoweqyay++;
        }  
    }
    int qiwoauidfrlo = 0;
    for (int xqhlbtiitkut = 0; kbyhszrxmvzl[xqhlbtiitkut] != '\0'; xqhlbtiitkut++){
        if(kbyhszrxmvzl[xqhlbtiitkut] != 'x' && kbyhszrxmvzl[xqhlbtiitkut] != 'y' && kbyhszrxmvzl[xqhlbtiitkut] != 'q' && kbyhszrxmvzl[xqhlbtiitkut] != 'X' && kbyhszrxmvzl[xqhlbtiitkut] != 'Y' && kbyhszrxmvzl[xqhlbtiitkut] != 'Q' ){
            xgxbaxpafnkw[qiwoauidfrlo] = kbyhszrxmvzl[xqhlbtiitkut];
            qiwoauidfrlo++;
        }
    }
    int lbtuvqhfswvn = 0;
    for (int xqhlbtiitkut = 0 ; xgxbaxpafnkw[xqhlbtiitkut] != '\0'; xqhlbtiitkut = xqhlbtiitkut + 3){
        djrrblqkfyyl[lbtuvqhfswvn] = xgxbaxpafnkw[xqhlbtiitkut];
        lbtuvqhfswvn++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", xgxbaxpafnkw);
    printf(""Der neue String lautet: %s\n"", djrrblqkfyyl);
}",1.0
"#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str1);
    printf(""Der neue String lautet: %s\n"", str2);
}","#include <stdio.h>
int main( int qrjcptbrnkiq, char* argv[] ) 
{
    char lmitrewndvza[100];
    char yrqocwnvuapt[100];
    int pmhxbstfoobd = 0;
    int ebpiabscbxey = 0;
    char* currPointer = argv[1];
    int vgfvcxsuhswb = 3;
    int hcjhohcjjmkb = 0;
    while (pmhxbstfoobd < (qrjcptbrnkiq - 1)) {
        if (*currPointer == 0) {
            pmhxbstfoobd++;
        } else {
            char wglvbffxjaee = *currPointer;
            if (wglvbffxjaee == 'x' || wglvbffxjaee == 'y' || wglvbffxjaee == 'q' || wglvbffxjaee == 'X' || wglvbffxjaee == 'Y' || wglvbffxjaee == 'Q') {
            } else {
                lmitrewndvza[ebpiabscbxey] = *currPointer;
                ebpiabscbxey++;
                if (vgfvcxsuhswb == 3) {
                    yrqocwnvuapt[hcjhohcjjmkb] = *currPointer;
                    hcjhohcjjmkb++;
                    vgfvcxsuhswb = 0;
                }
                    vgfvcxsuhswb++;
            }
        }
        currPointer++;
    }
    lmitrewndvza[ebpiabscbxey] = 0;
    yrqocwnvuapt[hcjhohcjjmkb] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", lmitrewndvza);
    printf(""Der neue String lautet: %s\n"", yrqocwnvuapt);
}",1.0
"#include <stdio.h>
int main() {
   char satz[100], satz2[100];
   int l, k;
   fgets(satz, sizeof(satz), stdin);
   for (int i = 0, j; satz[i] != '\0'; ++i) {
      while (!(satz[i] >= 'a' && satz[i] <= 'p') && !(satz[i] >= 'r' && satz[i] <= 'w') && !(satz[i] == 'z') && !(satz[i] >= 'A' && satz[i] <= 'P') && !(satz[i] >= 'R' && satz[i] <= 'W') && !(satz[i] == 'Z') && !(satz[i] == '!') && !(satz[i] == '?') && !(satz[i] == '\0')){
         for (j = i; satz[j] != '\0'; ++j) {
            satz[j] = satz[j + 1];
         }
         satz[j] = '\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(satz);
     for (int l = 0, k; satz[l] != '\0'; ++l) {
        satz2[k] == satz[l];
        k++;
        l=l+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}","#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
}",0.0
"#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str1);
    printf(""Der neue String lautet: %s\n"", str2);
}","#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}",0.0
"#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}",0.0
"#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}","#include <stdio.awbzqjmmkolh>
#include <stdlib.awbzqjmmkolh>
void jwykaozxzjwc(char* str){
for(int hjksrvfybbfa = 0; str[hjksrvfybbfa] != '\0'; hjksrvfybbfa++){
   if(str[hjksrvfybbfa] == 'x' || str[hjksrvfybbfa] == 'y' || str[hjksrvfybbfa] == 'q' || str[hjksrvfybbfa] == 'X' || str[hjksrvfybbfa] == 'Y' || str[hjksrvfybbfa] == 'Q'){ 
   for(int awbzqjmmkolh = hjksrvfybbfa; str[awbzqjmmkolh] != '0'; awbzqjmmkolh++) str[awbzqjmmkolh] = str[awbzqjmmkolh+1];
   }
 }
}
char* strc(char* vylieklxiray, char* str2){
int hjksrvfybbfa,awbzqjmmkolh;
char* st = vylieklxiray;
for(hjksrvfybbfa = 0; st[hjksrvfybbfa] != '\0'; hjksrvfybbfa++){
}
for(awbzqjmmkolh = 0; str2[awbzqjmmkolh] != '\0'; awbzqjmmkolh++){
vylieklxiray[hjksrvfybbfa+awbzqjmmkolh] = str2[awbzqjmmkolh];
}
vylieklxiray[hjksrvfybbfa+awbzqjmmkolh]= '\0';
return vylieklxiray;
}
int main( int ovwcysuloiif, char* argv[] )
{  
jwykaozxzjwc(argv[1]);
jwykaozxzjwc(argv[2]);
jwykaozxzjwc(argv[3]);
jwykaozxzjwc(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
}",1.0
"#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \n"", kedi(argc,argv)[1] );
}","#include bnewmuynpbgp.h
cezepynjykdl char* kedi(int stfsxazmfoec, char* isim[]){
    char svewwmtkcwrk[100];
   int gzzsyfdpqvfu=0;
    for (int aluoiajxnzxn=0;aluoiajxnzxn<stfsxazmfoec;aluoiajxnzxn++){
    int eomifkaihdpo = strlen(isim[aluoiajxnzxn]);
    for (int tfgrlhwyxmid=0;tfgrlhwyxmid<eomifkaihdpo;tfgrlhwyxmid++){
        if (isim[aluoiajxnzxn][tfgrlhwyxmid]==""x""||isim[aluoiajxnzxn][tfgrlhwyxmid]||==""y""||isim[aluoiajxnzxn][tfgrlhwyxmid]==""q""||isim[aluoiajxnzxn][tfgrlhwyxmid]==""X""||isim[aluoiajxnzxn][tfgrlhwyxmid]==""Y""||isim[aluoiajxnzxn][tfgrlhwyxmid]==""Q""){
            }
            else {svewwmtkcwrk[gzzsyfdpqvfu]=isim[aluoiajxnzxn][tfgrlhwyxmid];gzzsyfdpqvfu++;}
    }
}    
char wwyfkxdncwig[gzzsyfdpqvfu];
for (int aluoiajxnzxn=0;aluoiajxnzxn<=gzzsyfdpqvfu;aluoiajxnzxn++){
    wwyfkxdncwig[aluoiajxnzxn]=svewwmtkcwrk[aluoiajxnzxn];
}
char meogshsbhcch[gzzsyfdpqvfu];
for (int aluoiajxnzxn=0;aluoiajxnzxn<gzzsyfdpqvfu;aluoiajxnzxn++){
    meogshsbhcch[aluoiajxnzxn]=wwyfkxdncwig[aluoiajxnzxn];
}
return(wwyfkxdncwig,wwyfkxdncwig);
}
int main( int gqjpofirarmr, char* argv[] )
{  
  char qrwarfmyvbqw[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \n"", kedi(gqjpofirarmr,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \n"", kedi(gqjpofirarmr,argv)[1] );
}",1.0
"#include <stdio.h>
int main(int argc, char* argv[]) {
    //char* str[] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""}; //zum testen
    //int agc = 4;                                              //zum testen
    for(int i= 1; i<5; i++){
    //printf(""%s\n"", str[i]);                                 //test
    }
    char string1[100]; string1[99] = '\0';
    char string2[100]; string2[99] = '\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\0';
        string2[i] = '\0';
        string3[i] = '\0';
    }
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\0'){
        laenge++;
        j++;
        }
        //printf(""i=%i - laenge=%i\n"", i, laenge);                //test
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    //buchstabenloeschen
    int j = 0;
    int length = 0;
    while(string1[j] != '\0'){
    length++;
    j++;
    }
    //printf(""length: %i\n"", length);                       //test
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
    //nur noch jeden 3ten Buchstaben verwenden
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\n"", string3);
    //string1[0] = str[1][0];                                   //test
    //printf(""%s\n"", string1);                                  //test
    //printf(""%s\n"", string2);                                  //test
    //printf(""%s\n"", string3);                                  //test
    return 0;
}","#include <stdio.h>
int main(int hfrczoyjdtpj, char* argv[]) {
    for(int kevfchprwbak= 1; kevfchprwbak<5; kevfchprwbak++){
    }
    char wzkeorsppwmo[100]; wzkeorsppwmo[99] = '\0';
    char qvmmtljovrwc[100]; qvmmtljovrwc[99] = '\0';
    char egmsmdriorcn[100];
    for(int kevfchprwbak = 0; kevfchprwbak < 100; kevfchprwbak++){
        wzkeorsppwmo[kevfchprwbak] = '\0';
        qvmmtljovrwc[kevfchprwbak] = '\0';
        egmsmdriorcn[kevfchprwbak] = '\0';
    }
    int pzcjzwpkusei = 0;
    for(int kevfchprwbak = 1; kevfchprwbak<hfrczoyjdtpj; kevfchprwbak++){
        int lvcjtsoednxo = 0;
        int vexvqfjtkjxx = 0;
        while(argv[kevfchprwbak][lvcjtsoednxo] != '\0'){
        vexvqfjtkjxx++;
        lvcjtsoednxo++;
        }
        for(int oefggwuorlcr = 0; oefggwuorlcr<vexvqfjtkjxx; oefggwuorlcr++){
            wzkeorsppwmo[pzcjzwpkusei] = argv[kevfchprwbak][oefggwuorlcr];
            pzcjzwpkusei++;
        }
    }
    int lvcjtsoednxo = 0;
    int azigpcuqxdjs = 0;
    while(wzkeorsppwmo[lvcjtsoednxo] != '\0'){
    azigpcuqxdjs++;
    lvcjtsoednxo++;
    }
    int rkimzqsyocwm = 0;
    for(int kevfchprwbak=0; kevfchprwbak<azigpcuqxdjs; kevfchprwbak++){
        byhoeizftwqk(wzkeorsppwmo[kevfchprwbak] == 'x' || wzkeorsppwmo[kevfchprwbak] == 'oefggwuorlcr' || wzkeorsppwmo[kevfchprwbak] == 'q'){
        }
        else byhoeizftwqk(wzkeorsppwmo[kevfchprwbak] == 'X' || wzkeorsppwmo[kevfchprwbak] == 'Y' || wzkeorsppwmo[kevfchprwbak] == 'Q'){
        }
        else{
            qvmmtljovrwc[rkimzqsyocwm] = wzkeorsppwmo[kevfchprwbak];
            rkimzqsyocwm++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", qvmmtljovrwc);
    int nyymaqkgfzru = 0;
    for(int kevfchprwbak=0; kevfchprwbak<=rkimzqsyocwm; kevfchprwbak+=3){
        egmsmdriorcn[nyymaqkgfzru] = qvmmtljovrwc[kevfchprwbak];
        nyymaqkgfzru++;
    }
    printf(""Der neue String lautet: %s\n"", egmsmdriorcn);
    return 0;
}",1.0
"#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}","#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}",0.0
"#include <stdio.h>
int main(int argc, char* argv[]){
	int a = 0;
	char str1[100];
	for(int i = 1; i<argc; ++i){
		int j = 0; 
		while(argv[i][j] != '\0'){
			if(argv[i][j] == 'x' || argv[i][j] == 'y' || argv[i][j] == 'q' || argv[i][j] == 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q'){
			}else{
				str1[a] = argv[i][j];
				++a;
			}
			++j;
		}
	}
	str1[a] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"", str1);
	char str2[100];
	int i = 0;
	int j = 0;
	while(str1[i] != '\0'){
		if(i%3 == 0){
			str2[j] = str1[i];
			++j;
		}
		++i;
	}
	str2[j] = '\0';
	printf(""Der neue String lautet: %s\n"", str2);
}","#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}",0.0
"#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
}","#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}",0.0
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\0';
printf(""Der neue String lautet: %s\n"",erg2);
}","#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}",0.0
"#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}","#include <stdio.h>
int main(int byfybtjnuhlb, char** argv){
	char gtyfzfyqvlzs[100];
	int erihnvxqwdgt = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int slvyzclmlayk = 1; slvyzclmlayk < byfybtjnuhlb; slvyzclmlayk++){
		for(int yuoikqflbols = 0; argv[slvyzclmlayk][yuoikqflbols] != '\0'; yuoikqflbols++){
			if(argv[slvyzclmlayk][yuoikqflbols] == 'x'){
				for(int jewsbgxxchih = yuoikqflbols; argv[slvyzclmlayk][jewsbgxxchih] != '\0'; jewsbgxxchih++){
					argv[slvyzclmlayk][jewsbgxxchih] = argv[slvyzclmlayk][jewsbgxxchih+1];
				}
			};
			if(argv[slvyzclmlayk][yuoikqflbols] == 'X'){
				for(int jewsbgxxchih = yuoikqflbols; argv[slvyzclmlayk][jewsbgxxchih] != '\0'; jewsbgxxchih++){
					argv[slvyzclmlayk][jewsbgxxchih] = argv[slvyzclmlayk][jewsbgxxchih+1];
				}
			};
			if(argv[slvyzclmlayk][yuoikqflbols] == 'y'){
				for(int jewsbgxxchih = yuoikqflbols; argv[slvyzclmlayk][jewsbgxxchih] != '\0'; jewsbgxxchih++){
					argv[slvyzclmlayk][jewsbgxxchih] = argv[slvyzclmlayk][jewsbgxxchih+1];
				}
			};
			if(argv[slvyzclmlayk][yuoikqflbols] == 'Y'){
				for(int jewsbgxxchih = yuoikqflbols; argv[slvyzclmlayk][jewsbgxxchih] != '\0'; jewsbgxxchih++){
					argv[slvyzclmlayk][jewsbgxxchih] = argv[slvyzclmlayk][jewsbgxxchih+1];
				}
			};
			if(argv[slvyzclmlayk][yuoikqflbols] == 'q'){
				for(int jewsbgxxchih = yuoikqflbols; argv[slvyzclmlayk][jewsbgxxchih] != '\0'; jewsbgxxchih++){
					argv[slvyzclmlayk][jewsbgxxchih] = argv[slvyzclmlayk][jewsbgxxchih+1];
				}
			};
			if(argv[slvyzclmlayk][yuoikqflbols] == 'Q'){
				for(int jewsbgxxchih = yuoikqflbols; argv[slvyzclmlayk][jewsbgxxchih] != '\0'; jewsbgxxchih++){
					argv[slvyzclmlayk][jewsbgxxchih] = argv[slvyzclmlayk][jewsbgxxchih+1];
				}
			};
			if(argv[slvyzclmlayk][yuoikqflbols] == '\0') erihnvxqwdgt -= 1;
			if(argv[slvyzclmlayk][yuoikqflbols] != '\0') gtyfzfyqvlzs[erihnvxqwdgt] = argv[slvyzclmlayk][yuoikqflbols];
			erihnvxqwdgt++;
		}
	}
	char kxwexeeqmkww[100];
	int ctogzrqtolic = 0;
	for(int slvyzclmlayk = 0; slvyzclmlayk < erihnvxqwdgt; slvyzclmlayk++){
			if((slvyzclmlayk % 3) == 0){
				kxwexeeqmkww[ctogzrqtolic] = gtyfzfyqvlzs[slvyzclmlayk];
				ctogzrqtolic++;
			}
	}
	for(int slvyzclmlayk = 0; slvyzclmlayk < erihnvxqwdgt; slvyzclmlayk++){
		printf(""%c"", gtyfzfyqvlzs[slvyzclmlayk]);
	}
	printf(""\nDer neue String lautet: "");
	for(int slvyzclmlayk = 0; slvyzclmlayk < ctogzrqtolic; slvyzclmlayk++){
		printf(""%c"", kxwexeeqmkww[slvyzclmlayk]);
	}
	printf(""\n"");
}",1.0
"#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}","#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
}",0.0
"#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}","#include <stdio.h>
int main(int netqkpcjlyvr, char** argv){
	char qmslcojngibg[100];
	int ukwrbuxfkodg = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int vijjvuowymlw = 1; vijjvuowymlw < netqkpcjlyvr; vijjvuowymlw++){
		for(int eqfcymriyewt = 0; argv[vijjvuowymlw][eqfcymriyewt] != '\0'; eqfcymriyewt++){
			if(argv[vijjvuowymlw][eqfcymriyewt] == 'x'){
				for(int ugunvrnpihhb = eqfcymriyewt; argv[vijjvuowymlw][ugunvrnpihhb] != '\0'; ugunvrnpihhb++){
					argv[vijjvuowymlw][ugunvrnpihhb] = argv[vijjvuowymlw][ugunvrnpihhb+1];
				}
			};
			if(argv[vijjvuowymlw][eqfcymriyewt] == 'X'){
				for(int ugunvrnpihhb = eqfcymriyewt; argv[vijjvuowymlw][ugunvrnpihhb] != '\0'; ugunvrnpihhb++){
					argv[vijjvuowymlw][ugunvrnpihhb] = argv[vijjvuowymlw][ugunvrnpihhb+1];
				}
			};
			if(argv[vijjvuowymlw][eqfcymriyewt] == 'y'){
				for(int ugunvrnpihhb = eqfcymriyewt; argv[vijjvuowymlw][ugunvrnpihhb] != '\0'; ugunvrnpihhb++){
					argv[vijjvuowymlw][ugunvrnpihhb] = argv[vijjvuowymlw][ugunvrnpihhb+1];
				}
			};
			if(argv[vijjvuowymlw][eqfcymriyewt] == 'Y'){
				for(int ugunvrnpihhb = eqfcymriyewt; argv[vijjvuowymlw][ugunvrnpihhb] != '\0'; ugunvrnpihhb++){
					argv[vijjvuowymlw][ugunvrnpihhb] = argv[vijjvuowymlw][ugunvrnpihhb+1];
				}
			};
			if(argv[vijjvuowymlw][eqfcymriyewt] == 'q'){
				for(int ugunvrnpihhb = eqfcymriyewt; argv[vijjvuowymlw][ugunvrnpihhb] != '\0'; ugunvrnpihhb++){
					argv[vijjvuowymlw][ugunvrnpihhb] = argv[vijjvuowymlw][ugunvrnpihhb+1];
				}
			};
			if(argv[vijjvuowymlw][eqfcymriyewt] == 'Q'){
				for(int ugunvrnpihhb = eqfcymriyewt; argv[vijjvuowymlw][ugunvrnpihhb] != '\0'; ugunvrnpihhb++){
					argv[vijjvuowymlw][ugunvrnpihhb] = argv[vijjvuowymlw][ugunvrnpihhb+1];
				}
			};
			if(argv[vijjvuowymlw][eqfcymriyewt] == '\0') ukwrbuxfkodg -= 1;
			if(argv[vijjvuowymlw][eqfcymriyewt] != '\0') qmslcojngibg[ukwrbuxfkodg] = argv[vijjvuowymlw][eqfcymriyewt];
			ukwrbuxfkodg++;
		}
	}
	char vinlsphsngey[100];
	int aogzeclwswzv = 0;
	for(int vijjvuowymlw = 0; vijjvuowymlw < ukwrbuxfkodg; vijjvuowymlw++){
			if((vijjvuowymlw % 3) == 0){
				vinlsphsngey[aogzeclwswzv] = qmslcojngibg[vijjvuowymlw];
				aogzeclwswzv++;
			}
	}
	for(int vijjvuowymlw = 0; vijjvuowymlw < ukwrbuxfkodg; vijjvuowymlw++){
		printf(""%c"", qmslcojngibg[vijjvuowymlw]);
	}
	printf(""\nDer neue String lautet: "");
	for(int vijjvuowymlw = 0; vijjvuowymlw < aogzeclwswzv; vijjvuowymlw++){
		printf(""%c"", vinlsphsngey[vijjvuowymlw]);
	}
	printf(""\n"");
}",1.0
"#include <stdio.h>
#include <stdlib.h>
void xyzz(char* string)
{
  int t = 0;
  for(char *temp = string; *temp!=0; temp++, t++);
  for(int i = 0,j = 0; i<=t; i++){
    if(i%3==0){
      string[j]=string[i];
      j++;
    }
    if(i==t){
      string[j]=0;
    }
  }
}
void xyz(char* out,int *temp,char* in)
{ 
  char *pout=out;
  for(int i = 0; i<*temp; i++)
  {
    *pout++;
  } 
  for(char *pin=in;*pin!=0;pin++)
  {
    switch (*pin)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *pout++ = *pin;
      *temp+=1;
        break;  
    }    
  }
  *pout=0;
}
int main(int argc, char* argv[])
{
  char str[100];
  int times=0;
  for(int i=1; i<argc;i++)
  {
    xyz(str, &times, argv[i]);
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\n"",str);
  xyzz(str);
  printf( ""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
}",0.0
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char strneu[100];
	int a = 0;
	for (int i = 0; i < argc -1; i++)
	{
		for (int length = 0; *(*(argv+1+i)+length) != '\0'; length++)
		{
			str[a] = *(*(argv+1+i)+length);
			a++;
		}
	}
	str[a] = '\0';
	for (int i = 0; i < a+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			do
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			} while(1);
			a--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((a/2)-2); i++, z += 3)
	{
		strneu[i] = str[z];
	}
	int length = 0;
	for (length; str[length] != '\0'; length++){}
	strneu[length] = '\0';
	printf(""Der neue String lautet: %s"",strneu);
}","#include <stdio.h>
int main(int phfsqbruxygf, char* argv[] )
{  
	char hwjyhttjmlza[100];
	char fxpdqjrfiqjf[100];
	int lkyakdybbklg = 0;
	for (int xztmbzydxczx = 0; xztmbzydxczx < phfsqbruxygf -1; xztmbzydxczx++)
	{
		for (int ykkgxwzcuibl = 0; *(*(argv+1+xztmbzydxczx)+ykkgxwzcuibl) != '\0'; ykkgxwzcuibl++)
		{
			hwjyhttjmlza[lkyakdybbklg] = *(*(argv+1+xztmbzydxczx)+ykkgxwzcuibl);
			lkyakdybbklg++;
		}
	}
	hwjyhttjmlza[lkyakdybbklg] = '\0';
	for (int xztmbzydxczx = 0; xztmbzydxczx < lkyakdybbklg+1; xztmbzydxczx++)
	{
		if ((hwjyhttjmlza[xztmbzydxczx] == 'x') || (hwjyhttjmlza[xztmbzydxczx] == 'y') || (hwjyhttjmlza[xztmbzydxczx] == 'q') || (hwjyhttjmlza[xztmbzydxczx] == 'X') || (hwjyhttjmlza[xztmbzydxczx] == 'Y') || (hwjyhttjmlza[xztmbzydxczx] == 'Q'))
		{
			do
			{
				hwjyhttjmlza[xztmbzydxczx] = hwjyhttjmlza[xztmbzydxczx+1];
				xztmbzydxczx++;
				if (hwjyhttjmlza[xztmbzydxczx] == '\0')
				{	
					break;
				}
			} while(1);
			lkyakdybbklg--;
			xztmbzydxczx = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",hwjyhttjmlza);
	for (int xztmbzydxczx = 0, z = 0; xztmbzydxczx < ((lkyakdybbklg/2)-2); xztmbzydxczx++, z += 3)
	{
		fxpdqjrfiqjf[xztmbzydxczx] = hwjyhttjmlza[z];
	}
	int ykkgxwzcuibl = 0;
	for (ykkgxwzcuibl; hwjyhttjmlza[ykkgxwzcuibl] != '\0'; ykkgxwzcuibl++){}
	fxpdqjrfiqjf[ykkgxwzcuibl] = '\0';
	printf(""Der neue String lautet: %s"",fxpdqjrfiqjf);
}",1.0
"#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str1);
    printf(""Der neue String lautet: %s\n"", str2);
}","#include <stdio.h>
int main(int argc, char** argv){
    char array [100];
    char array2 [100];
    int k = 0;
    for( int i = 1; i < argc; i++){
        for(int j = 0; '\0' != argv[i][j]; j++){
             if(argv[i][j] != 'x' && argv[i][j] && argv[i][j] != 'y' && argv[i][j]!= 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q'){ 
             array[k] = argv[i][j];
             k++;
             }
        }
    }
    array[k] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", array);
    for(int i = 0; 3 * i < k ; i++){
        array2[i] = array[3*i];
    }
    printf(""Der neue String lautet: %s"", array2);
}",0.0
