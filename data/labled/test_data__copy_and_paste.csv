code1,code2,label
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int array[], int n){
        int IndexOfMax= 0;
        int pruefer= array[IndexOfMax];
        int all = 0;
        for (int i = 0; i < n; i++){
            if(array[i]== INT_MIN){
                all++;
            }
        }
        if (all == n){
           return UINT_MAX ; 
        }
        else{
        for (int i = 0; i<n; i++){
            if (pruefer <= array[i]){
                pruefer = array[i];
                IndexOfMax = i;
            }
        }
        return IndexOfMax;
        }
}
int main(){
    int array[5];    
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for(int i=0; i<5; i++){
        scanf(""%i"",&array[i]);
    }
    int IndexOfMax; 
    while(findIndexOfMax(array, 5)!= UINT_MAX){
        IndexOfMax = findIndexOfMax(array, 5);
        printf(""Naechstgroesstes: %i\n"",array[IndexOfMax]);
        array[IndexOfMax]= INT_MIN;
    }
}","#include <stdio.h>
int findIndexOfMax(int array[], int size){
    int max=array[0];
    int index;
    for (int i = 0; i < size; i++){
        if (array[i] >= max){
            max = array[i];
            index = i;
        }
    }
    if (max == INT_MIN){
        return UINT_MAX;
    }
    else return index;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for ( int i = 0; i < 5; i++){
        scanf(""%d"", &array[i]);
    }
    int index;
    while(1) {
        index = findIndexOfMax(array,5);
        if (index == UINT_MAX) break;
        printf(""Naechstgroesstes: %d\n"", array[index]);
        array[findIndexOfMax(array, 5)] = INT_MIN;
    }
}",0
"#include <stdio.h>
#include <stdlib.h>
int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];
  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 
    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}
void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}
void umdrehen( char* str )
{
    if (!*str) 
        return;
    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];
  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 
    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}
void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}
void umdrehen( char* str )
{
    if (!*str) 
        return;
    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",0
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int array[], int sizearray){
int max=array[0];
int index;
    for (int i=0; i<sizearray; i++){
        if (max<=array[i]){
            max=array[i];
            index=i;
        }
    } if (array[index] ==INT_MIN) {return UINT_MAX;}
    else return index ;
}
int main()
{
  int sizearray=5;
  int array[sizearray];
  int index;
  printf(""Bitte geben Sie %i ganze Zahlen ein: "",sizearray);
  for (int i=0; i<sizearray; i++)
    scanf(""%i"", &array[i]);
  for (int i=0;i<sizearray; i++)
  {
    index=findIndexOfMax(array,sizearray);
    printf(""Naechstgroesstes: %i\n"", array[index]);
    array[index]=INT_MIN;
  }
}","#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int array[], int sizearray){
int max=array[0];
int index;
    for (int i=0; i<sizearray; i++){
        if (max<=array[i]){
            max=array[i];
            index=i;
        }
    } if (array[index] ==INT_MIN) {return UINT_MAX;}
    else return index ;
}
int main()
{
  int sizearray=5;
  int array[sizearray];
  int index;
  printf(""Bitte geben Sie %i ganze Zahlen ein: "",sizearray);
  for (int i=0; i<sizearray; i++)
    scanf(""%i"", &array[i]);
  for (int i=0;i<sizearray; i++)
  {
    index=findIndexOfMax(array,sizearray);
    printf(""Naechstgroesstes: %i\n"", array[index]);
    array[index]=INT_MIN;
  }
}",1
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i=0; i<zahl && *(dest+i) != '\0'  ; i++){
  *(dest+i) = *(src +i);
  }
}
void umdrehen( char* str )
{
  int n=0;
  for(int i =0; *(str+i) != '\0' ;i++){
  n++;}
  n--;
  for(int i=0; i<=n; i++){
  char tmp = *(str +i); 
  *(str + i) = *(str + n );
  *(str + n) = tmp;
    n--;
  }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i=0; i<zahl && *(dest+i) != '\0'  ; i++){
  *(dest+i) = *(src +i);
  }
}
void umdrehen( char* str )
{
  int n=0;
  for(int i =0; *(str+i) != '\0' ;i++){
  n++;}
  n--;
  for(int i=0; i<=n; i++){
  char tmp = *(str +i); 
  *(str + i) = *(str + n );
  *(str + n) = tmp;
    n--;
  }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	}
}
void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}
void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}
int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>
int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        //printf(""Current Size %i \n"",LengthOfString);
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //String 1 
        int length, j;
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
}",0
"#include <stdio.h>
#include <stdlib.h>
void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}
char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   
int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}","#include <stdio.h>
int main(int argc, char *argv[])
{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }
    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }
    printf(""\n"");
     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}
void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}
char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   
int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	if(zahl == 0) return; 
	int länge;
	for(int i = 0; dest[i] != '\0'; i++) länge++;
	for(int i = 0; i <= zahl && i<länge; i++){
		if(src[i] == '\0') return;
		dest[i] = src[i];
	}
}
void umdrehen( char* str )
{
	int länge;
	for(int i = 0; str[i] != '\0'; i++) länge++;
	char copy[länge];
	for(int i = 0; i<=länge; i++){
		copy[i] = str[i];
	}
	for(int i = 0; i<länge; i++){
		str[i] = copy[länge-1-i];
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	if(zahl == 0) return; 
	int länge;
	for(int i = 0; dest[i] != '\0'; i++) länge++;
	for(int i = 0; i <= zahl && i<länge; i++){
		if(src[i] == '\0') return;
		dest[i] = src[i];
	}
}
void umdrehen( char* str )
{
	int länge;
	for(int i = 0; str[i] != '\0'; i++) länge++;
	char copy[länge];
	for(int i = 0; i<=länge; i++){
		copy[i] = str[i];
	}
	for(int i = 0; i<länge; i++){
		str[i] = copy[länge-1-i];
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}",0
"#include <stdio.h>
int main(int argc, char** argv){
    char array [100];
    char array2 [100];
    int k = 0;
    for( int i = 1; i < argc; i++){
        for(int j = 0; '\0' != argv[i][j]; j++){
             if(argv[i][j] != 'x' && argv[i][j] && argv[i][j] != 'y' && argv[i][j]!= 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q'){ 
             array[k] = argv[i][j];
             k++;
             }
        }
    }
    array[k] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", array);
    for(int i = 0; 3 * i < k ; i++){
        array2[i] = array[3*i];
    }
    printf(""Der neue String lautet: %s"", array2);
}","#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\0';
printf(""Der neue String lautet: %s\n"",erg2);
}",0
"#include <stdio.h>
#include <stdlib.h>
int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        //printf(""Current Size %i \n"",LengthOfString);
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //String 1 
        int length, j;
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
}","#include<stdio.h>
int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0
"#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \n"", kedi(argc,argv)[1] );
}","#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}",0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \nAnzahl Punkte: %i\n\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}",0
"#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\nAnzahl Punkte: %i\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",0
"#include <stdio.h>
int findIndexOfMax(int array[],int groesse){
    int index=0;
    int max=array[0];
    int test=0;
    for (int i=0;i<groesse;i++){
        if (array[i]==INT_MIN){
            test++;
        }
    }
    if(test!=groesse){
        for (int i=1;i<groesse;i++){
            if (array[i]>=max){
                max=array[i];
                index=i;
            }
        }
    return index;
    }
    else return UINT_MAX;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for (int i=0;i<=4;i++){
        scanf(""%i"",&array[i]);
    }
    for(int i=0;i<=4;i++){
        int index=findIndexOfMax(array,5);
        if(index!=UINT_MAX){
            printf(""Naechstgroesstes: %i\n"",array[index]);
            array[index]=INT_MIN;
        }
        else break;
    }
}","#include <stdio.h>
int findIndexOfMax(int a[], int groesse){
    int max = a[0];
    int vergleich[] = {INT_MIN, INT_MIN, INT_MIN, INT_MIN};
    int ind = 0;
    for (size_t i = 0; i < groesse; i++)
    {
        if (a[i] != vergleich[i]){
            for (int j = 0; j < groesse; j++){
        if(a[j] > max){
            max = a[j];
            ind = j;
        }
       }
    return ind;
        }
    }
return UINT_MAX;
}
int main(){
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for(int i = 0; i < 5; i++){
        scanf(""%i"", &(array[i]));
    }
    int sub[5] = {array[0], array[1], array[2], array[3], array[4]};
    for(int i = 0; i < 5; i++){
        int ind = findIndexOfMax(sub, 5);
        printf(""Naechstgroesstes: %i\n"" , sub[ind]);
        sub[ind] = INT_MIN;
    }
}",0
"#include <stdio.h>
int findIndexOfMax(int array[], int size) {
	int index = UINT_MAX;
	int value = INT_MIN;
	for (int i=0; i<size; i++) {
		if (array[i] > value) {
			index = i;
			value = array[i];
		} 
	}
	return index;
}
int main() {
	int array[5];
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	for (int i=0; i<5; i++) {
		scanf(""%d"", &array[i]);
	}
	while(1) {
		int index = findIndexOfMax(array, 5);
		if (index != UINT_MAX) {
			printf(""Naechstgroesstes: %d\n"", array[index]);
			array[index] = INT_MIN;
		} else {
			break;
		}
	}
	return 0;
}","#include <stdio.h>
int findIndexOfMax(int array[], int size) {
	int index = UINT_MAX;
	int value = INT_MIN;
	for (int i=0; i<size; i++) {
		if (array[i] > value) {
			index = i;
			value = array[i];
		} 
	}
	return index;
}
int main() {
	int array[5];
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	for (int i=0; i<5; i++) {
		scanf(""%d"", &array[i]);
	}
	while(1) {
		int index = findIndexOfMax(array, 5);
		if (index != UINT_MAX) {
			printf(""Naechstgroesstes: %d\n"", array[index]);
			array[index] = INT_MIN;
		} else {
			break;
		}
	}
	return 0;
}",1
"#include <stdio.h>
#include <stdlib.h>
int main(int argc, char* argv[]){
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
}","#include <stdio.h>
#include <stdlib.h>
int main(int argc, char* argv[]){
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
}",1
"#include <stdio.h>
int findIndexOfMax(int x[], int groesse){
int array[] = {INT_MIN,INT_MIN,INT_MIN,INT_MIN,INT_MIN};
int index = 0;
	for(int i = 0; i < groesse; i++){
	if(array[i] > x[i]){
	array[i] = x[i];
	index = i;
		} 
	} return index;
}
int main() {
printf(""Bitte geben Sie 5 ganze Zahlen ein:"");
	int array[5];
	int temp;
for(int i = 0; i < 5 ; i++ ){	
	scanf(""%i"" , &array[i]);
	}
for(int i = 0; i<5 ; i++){
	for(int j=0; j<5 ; j++){
		if(array[i] > array[j]){
			temp = array[i];
			array[i] = array[j];
			array[j] = temp;
			}
		}
	}
for(int i = 0; i<5 ; i++)	{
printf("" Naechstgroesstes: %i\n"" , array[i]);
		}
}","#include <stdio.h>
int findIndexOfMax(int x[], int groesse){
int array[] = {INT_MIN,INT_MIN,INT_MIN,INT_MIN,INT_MIN};
int index = 0;
	for(int i = 0; i < groesse; i++){
	if(array[i] > x[i]){
	array[i] = x[i];
	index = i;
		} 
	} return index;
}
int main() {
printf(""Bitte geben Sie 5 ganze Zahlen ein:"");
	int array[5];
	int temp;
for(int i = 0; i < 5 ; i++ ){	
	scanf(""%i"" , &array[i]);
	}
for(int i = 0; i<5 ; i++){
	for(int j=0; j<5 ; j++){
		if(array[i] > array[j]){
			temp = array[i];
			array[i] = array[j];
			array[j] = temp;
			}
		}
	}
for(int i = 0; i<5 ; i++)	{
printf("" Naechstgroesstes: %i\n"" , array[i]);
		}
}",1
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}","#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}
void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        //printf(""Current Size %i \n"",LengthOfString);
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //String 1 
        int length, j;
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
}",0
"#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\nAnzahl Punkte: %i\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\nAnzahl Punkte: %i\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\n"");
    }
}",1
"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	}
}
void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}
void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}
int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	}
}
void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}
void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}
int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}",1
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int a[], int *size){
	int b=a[0],j=*size;
	for(int i = 0;i<j;i++){
		if(b<=a[i]){
			b=a[i];
			*size=i;
		}
	}
	return *size;
}
int cmpfunc (const void * a, const void * b) {
   return ( *(int*)a - *(int*)b );
}
int main(){
	int array[5],index=5;
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	for(int i=0;i<5;i++){
		scanf(""%d"", &array[i]);
	}
	qsort(array, 5, sizeof(int), cmpfunc);
	for(int i=4;i>=0;i--){
		printf(""Naechstgroesstes: %i\n"", array[i]);
	}
	findIndexOfMax(array,&index);
	//printf(""Die größte Zahl des Arrays liegt am Index %i und lautet %i\n"", index, array[index]);
}","#include <stdio.h>
unsigned int findIndexOfMax(int a[],int i_array_size)
{
int max_number = INT_MIN;
int max_index;
	//  Condition counter
int count_2 = 0;
for(int k = 0; k <= i_array_size - 1; k++)
	{
	if(a[k] == INT_MIN) count_2 += 1;
	}
	// condition executive
if(count_2 == i_array_size) 
	{
	return UINT_MAX;
	}
	//  default executive
else	
	{
	for(int j = 0; j <= i_array_size - 1; j++)
		{
		if(a[j] >= max_number)
			{
			max_number = a[j];
			max_index = j;
			}
		else max_number = max_number;
		} 
	return max_index;	
	}
}
int main()
{
int array_size = 5;
printf(""Bitte geben Sie 5 ganze Zahlen ein:\n"");
int array[array_size];
unsigned int dead_switch;
unsigned int index;
	//  Read numbers from user
for(int i = 0; i <= array_size - 1; i++)
	{
	printf(""Naechstgroesstes:\t"");
	scanf(""%i"",&array[i]);
	}
	//  main loop
do
	{	 
	//  Set variables in array to INT_MIN one by one. Starting with the largest ending with the lowest
	for(int m = 0; m <= array_size - 1; m++)
		{
		//  function call and reassignment
		index = findIndexOfMax(array, array_size);   
		//  Display content and index of the recently changed cell
		if(index != UINT_MAX)
		printf(""\nDie größte Zahl des Arrays liegt am Index %u und lautet %i"", index, array[index]); 
		array[index] = INT_MIN;
		// shutdown condition
		dead_switch = index;
		if(dead_switch == UINT_MAX) m = array_size; 
		}
	}
while(dead_switch != UINT_MAX);
if(index == UINT_MAX) printf(""\nDer Rückgabewert der Funktion findIndexOfMax bei leerer Liste ist richtig.\n"");
else printf(""\nDer Rückgabewert der Funktion findIndexOfMax bei leerer Liste ist falsch. Er sollte UINT_MAX = %i sein.\nDeiner ist jedoch %i."", UINT_MAX, index);
} 
// 
// 
//
//",0
"#include <stdio.h>
int findIndexOfMax(int array[], int size){
    int max=array[0];
    int index;
    for (int i = 0; i < size; i++){
        if (array[i] >= max){
            max = array[i];
            index = i;
        }
    }
    if (max == INT_MIN){
        return UINT_MAX;
    }
    else return index;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for ( int i = 0; i < 5; i++){
        scanf(""%d"", &array[i]);
    }
    int index;
    while(1) {
        index = findIndexOfMax(array,5);
        if (index == UINT_MAX) break;
        printf(""Naechstgroesstes: %d\n"", array[index]);
        array[findIndexOfMax(array, 5)] = INT_MIN;
    }
}","#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int a[], int *size){
	int b=a[0],j=*size;
	for(int i = 0;i<j;i++){
		if(b<=a[i]){
			b=a[i];
			*size=i;
		}
	}
	return *size;
}
int cmpfunc (const void * a, const void * b) {
   return ( *(int*)a - *(int*)b );
}
int main(){
	int array[5],index=5;
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	for(int i=0;i<5;i++){
		scanf(""%d"", &array[i]);
	}
	qsort(array, 5, sizeof(int), cmpfunc);
	for(int i=4;i>=0;i--){
		printf(""Naechstgroesstes: %i\n"", array[i]);
	}
	findIndexOfMax(array,&index);
	//printf(""Die größte Zahl des Arrays liegt am Index %i und lautet %i\n"", index, array[index]);
}",0
"#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}
int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}
int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}
int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}
int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}
int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}
int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",1
"#include <stdio.h>
#include <stdlib.h>
int getStringLength(char x[]) {
    int i = 0;
    while(x[i] != NULL) {
        i++;
    }
    return i;
}
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0; i < zahl && i < getStringLength(src) && i < 10; ++i) {
        dest[i] = src[i];
    }
}
void umdrehen( char* str )
{
    int z = getStringLength(str);
    char x[z];
    for (int i = 0; i < z; ++i) {
        x[i] = str[i];
    }
    for (int i = z-1; i >= 0; --i) {
        str[(z-1)-i]=x[i];
    }
}
int main( int argc, char* argv[] )
{
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen(test);
    printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i=0; i<zahl && *(dest+i) != '\0'  ; i++){
  *(dest+i) = *(src +i);
  }
}
void umdrehen( char* str )
{
  int n=0;
  for(int i =0; *(str+i) != '\0' ;i++){
  n++;}
  n--;
  for(int i=0; i<=n; i++){
  char tmp = *(str +i); 
  *(str + i) = *(str + n );
  *(str + n) = tmp;
    n--;
  }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0
"#include <stdio.h>
int findIndexOfMax(int a[], int n){
   if(a[0]>a[1]&&a[0]>a[2]&&a[3]<a[0]&&a[4]<a[0]){
   return 0;}
   else if(a[1]>a[0]&&a[1]>a[2]&&a[3]<a[1]&&a[4]<a[1]){
   return 1;}
   else if(a[2]>a[1]&&a[2]>a[0]&&a[3]<a[2]&&a[4]<a[2]){
   return 2;}
   else if(a[3]>a[1]&&a[3]>a[2]&&a[0]<a[3]&&a[4]<a[3]){
   return 3;}
   else if(a[4]>a[1]&&a[4]>a[2]&&a[3]<a[4]&&a[0]<a[4]){
   return 4;}
   else{ return UINT_MAX;}
}
int main(){
   int a[5];
   int us[5];
   int c[5];
   printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
   for(int i=0;i<5;i++){
      scanf(""%i"",&a[i]);
      c[i] = a[i];
      }
   for(int i=0;i<5;i++){
      us[i] = findIndexOfMax(a,5);
      printf(""Naechstgroesstes: %i\n"",a[us[i]]);
            a[us[i]] = INT_MIN;
      }  
      }","#include <stdio.h>
int findIndexOfMax(int a[], int n){
   if(a[0]>a[1]&&a[0]>a[2]&&a[3]<a[0]&&a[4]<a[0]){
   return 0;}
   else if(a[1]>a[0]&&a[1]>a[2]&&a[3]<a[1]&&a[4]<a[1]){
   return 1;}
   else if(a[2]>a[1]&&a[2]>a[0]&&a[3]<a[2]&&a[4]<a[2]){
   return 2;}
   else if(a[3]>a[1]&&a[3]>a[2]&&a[0]<a[3]&&a[4]<a[3]){
   return 3;}
   else if(a[4]>a[1]&&a[4]>a[2]&&a[3]<a[4]&&a[0]<a[4]){
   return 4;}
   else{ return UINT_MAX;}
}
int main(){
   int a[5];
   int us[5];
   int c[5];
   printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
   for(int i=0;i<5;i++){
      scanf(""%i"",&a[i]);
      c[i] = a[i];
      }
   for(int i=0;i<5;i++){
      us[i] = findIndexOfMax(a,5);
      printf(""Naechstgroesstes: %i\n"",a[us[i]]);
            a[us[i]] = INT_MIN;
      }  
      }",1
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}",1
"#include <stdio.h>
int findIndexOfMax(int array[],int size){
	int max = INT_MIN;
	int index = INT_MIN;
	for (int i = 0;i < size;i++){
		if (array[i]>max){
			max = array[i];
			index = i;
		}
	}
	if (max == INT_MIN) {
		return UINT_MAX;
	} else {
		return index;
	}
}
int main() {
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	int array[5];
	for (int i=0;i<5;i++){
		scanf(""%i"",&(array[i]));
	}
	int index = INT_MIN;
	while((index = findIndexOfMax(array, 5)) != UINT_MAX) {
		printf(""Naechstgroesstes: %d\n"", array[index]);
		array[index] = INT_MIN;
	}
}","#include <stdio.h>
int findIndexOfMax(int array[],int size){
	int max = INT_MIN;
	int index = INT_MIN;
	for (int i = 0;i < size;i++){
		if (array[i]>max){
			max = array[i];
			index = i;
		}
	}
	if (max == INT_MIN) {
		return UINT_MAX;
	} else {
		return index;
	}
}
int main() {
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	int array[5];
	for (int i=0;i<5;i++){
		scanf(""%i"",&(array[i]));
	}
	int index = INT_MIN;
	while((index = findIndexOfMax(array, 5)) != UINT_MAX) {
		printf(""Naechstgroesstes: %d\n"", array[index]);
		array[index] = INT_MIN;
	}
}",1
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int array[], int n){
        int IndexOfMax= 0;
        int pruefer= array[IndexOfMax];
        int all = 0;
        for (int i = 0; i < n; i++){
            if(array[i]== INT_MIN){
                all++;
            }
        }
        if (all == n){
           return UINT_MAX ; 
        }
        else{
        for (int i = 0; i<n; i++){
            if (pruefer <= array[i]){
                pruefer = array[i];
                IndexOfMax = i;
            }
        }
        return IndexOfMax;
        }
}
int main(){
    int array[5];    
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for(int i=0; i<5; i++){
        scanf(""%i"",&array[i]);
    }
    int IndexOfMax; 
    while(findIndexOfMax(array, 5)!= UINT_MAX){
        IndexOfMax = findIndexOfMax(array, 5);
        printf(""Naechstgroesstes: %i\n"",array[IndexOfMax]);
        array[IndexOfMax]= INT_MIN;
    }
}","#include <stdio.h>
int findIndexOfMax(int array[],int groesse){
    int index=0;
    int max=array[0];
    int test=0;
    for (int i=0;i<groesse;i++){
        if (array[i]==INT_MIN){
            test++;
        }
    }
    if(test!=groesse){
        for (int i=1;i<groesse;i++){
            if (array[i]>=max){
                max=array[i];
                index=i;
            }
        }
    return index;
    }
    else return UINT_MAX;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for (int i=0;i<=4;i++){
        scanf(""%i"",&array[i]);
    }
    for(int i=0;i<=4;i++){
        int index=findIndexOfMax(array,5);
        if(index!=UINT_MAX){
            printf(""Naechstgroesstes: %i\n"",array[index]);
            array[index]=INT_MIN;
        }
        else break;
    }
}",0
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}","#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}",1
"#include <stdio.h>
int findIndexOfMax(int x[], int groesse){
int array[] = {INT_MIN,INT_MIN,INT_MIN,INT_MIN,INT_MIN};
int index = 0;
	for(int i = 0; i < groesse; i++){
	if(array[i] > x[i]){
	array[i] = x[i];
	index = i;
		} 
	} return index;
}
int main() {
printf(""Bitte geben Sie 5 ganze Zahlen ein:"");
	int array[5];
	int temp;
for(int i = 0; i < 5 ; i++ ){	
	scanf(""%i"" , &array[i]);
	}
for(int i = 0; i<5 ; i++){
	for(int j=0; j<5 ; j++){
		if(array[i] > array[j]){
			temp = array[i];
			array[i] = array[j];
			array[j] = temp;
			}
		}
	}
for(int i = 0; i<5 ; i++)	{
printf("" Naechstgroesstes: %i\n"" , array[i]);
		}
}","#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int a[], int *size){
	int b=a[0],j=*size;
	for(int i = 0;i<j;i++){
		if(b<=a[i]){
			b=a[i];
			*size=i;
		}
	}
	return *size;
}
int cmpfunc (const void * a, const void * b) {
   return ( *(int*)a - *(int*)b );
}
int main(){
	int array[5],index=5;
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	for(int i=0;i<5;i++){
		scanf(""%d"", &array[i]);
	}
	qsort(array, 5, sizeof(int), cmpfunc);
	for(int i=4;i>=0;i--){
		printf(""Naechstgroesstes: %i\n"", array[i]);
	}
	findIndexOfMax(array,&index);
	//printf(""Die größte Zahl des Arrays liegt am Index %i und lautet %i\n"", index, array[index]);
}",0
"#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",0
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \nAnzahl Punkte: %i\n\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}",0
"#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}",1
"#include <stdio.h>
char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}
void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}
int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}
void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}
int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}",1
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int a[], int *size){
	int b=a[0],j=*size;
	for(int i = 0;i<j;i++){
		if(b<=a[i]){
			b=a[i];
			*size=i;
		}
	}
	return *size;
}
int cmpfunc (const void * a, const void * b) {
   return ( *(int*)a - *(int*)b );
}
int main(){
	int array[5],index=5;
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	for(int i=0;i<5;i++){
		scanf(""%d"", &array[i]);
	}
	qsort(array, 5, sizeof(int), cmpfunc);
	for(int i=4;i>=0;i--){
		printf(""Naechstgroesstes: %i\n"", array[i]);
	}
	findIndexOfMax(array,&index);
	//printf(""Die größte Zahl des Arrays liegt am Index %i und lautet %i\n"", index, array[index]);
}","#include <stdio.h>
int findIndexOfMax(int array[],int arraygroesse){
int x = -2147483648;
unsigned int z = 0;
int zaehler = 0;
for(int i = 0; i < arraygroesse; i++){
if(x <= array[i]){
x = array[i];
z = i;}}
for(int i = 0; i < arraygroesse; i++){
if(array[i]==-2147483648)
zaehler++;}
if(zaehler == arraygroesse){
z=4294967295;}
return z;
}
int main (){
int arraysize = 5;
int array[arraysize];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
for( int i = 0; i<arraysize; i++){
scanf(""%i"", &array[i]);}
unsigned int Index = 0;
while(Index != 4294967295){
Index = findIndexOfMax(array, arraysize); 
if(Index!=4294967295){
printf(""Naechstgroesstes: %i\n"", array[Index]);
array[Index] = -2147483648;}}
}",0
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}
//**(argv + 1 + lange) != '\0'","#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}
//**(argv + 1 + lange) != '\0'",1
"#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\nAnzahl Punkte: %i\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",0
"#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
}","#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
}",1
