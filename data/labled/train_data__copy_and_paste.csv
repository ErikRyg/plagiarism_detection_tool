code1,code2,label
"#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}","#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}",1
"#include <stdio.h>
#include <stdlib.h>
void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}
char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   
int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}","#include <stdio.h>
char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}
void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}
int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}",0
"#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}
int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}
int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}
int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/
int main( int argc, char* argv[]){
	char str[100] = """";
	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);
}",0
"#include <stdio.h>
int main(int argc, char** argv){
    char array [100];
    char array2 [100];
    int k = 0;
    for( int i = 1; i < argc; i++){
        for(int j = 0; '\0' != argv[i][j]; j++){
             if(argv[i][j] != 'x' && argv[i][j] && argv[i][j] != 'y' && argv[i][j]!= 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q'){ 
             array[k] = argv[i][j];
             k++;
             }
        }
    }
    array[k] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", array);
    for(int i = 0; 3 * i < k ; i++){
        array2[i] = array[3*i];
    }
    printf(""Der neue String lautet: %s"", array2);
}","#include <stdio.h>
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; str1[i] != 0 ; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; str2[i] != 0 ; i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; str1[i] != 0 ; i++){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[i] != 0 ; i++ ){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	for(int i = 0; i < 100; i++)
	{string[i] = 0x00; string2[i] = 0x00;}
	//char x;
	for( int i = 1 ; i < argc ; i++ ){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\n"", string);
}",0
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}",0
"#include <stdio.h>
int print()
{
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	return 0;
}
int findIndexOfMax(int a[], int hoechste)
{
	int in = 0;
	int i;
	int m = a[0];
	for ( i = 0; i < hoechste; i++)
	{
		if( m < a[i] )
		{
			m = a[i];
			in = i;
		}
	}
	if(m == INT_MIN)
		{
		return UINT_MAX;
		}
	return in;
}
int main()
{
	print();
	int arr[5];
	int i;
	for ( i = 0 ; i < 5 ; i++ )
	{ 
		scanf(""%i"", &arr[i]);
	}
	while(1) {
		int in;
		in = findIndexOfMax( arr, 5 );
		if ( in == UINT_MAX ){
		break;
		}
		printf(""Naechstgroesstes: %i\n"", arr[in]);
		arr[in] = INT_MIN;
		}
}","#include <stdio.h>
int findIndexOfMax(int x[], int groesse){
int array[] = {INT_MIN,INT_MIN,INT_MIN,INT_MIN,INT_MIN};
int index = 0;
	for(int i = 0; i < groesse; i++){
	if(array[i] > x[i]){
	array[i] = x[i];
	index = i;
		} 
	} return index;
}
int main() {
printf(""Bitte geben Sie 5 ganze Zahlen ein:"");
	int array[5];
	int temp;
for(int i = 0; i < 5 ; i++ ){	
	scanf(""%i"" , &array[i]);
	}
for(int i = 0; i<5 ; i++){
	for(int j=0; j<5 ; j++){
		if(array[i] > array[j]){
			temp = array[i];
			array[i] = array[j];
			array[j] = temp;
			}
		}
	}
for(int i = 0; i<5 ; i++)	{
printf("" Naechstgroesstes: %i\n"" , array[i]);
		}
}",0
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",0
"#include <stdio.h>
int main(int argc, char* argv[]){
	int a = 0;
	char str1[100];
	for(int i = 1; i<argc; ++i){
		int j = 0; 
		while(argv[i][j] != '\0'){
			if(argv[i][j] == 'x' || argv[i][j] == 'y' || argv[i][j] == 'q' || argv[i][j] == 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q'){
			}else{
				str1[a] = argv[i][j];
				++a;
			}
			++j;
		}
	}
	str1[a] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"", str1);
	char str2[100];
	int i = 0;
	int j = 0;
	while(str1[i] != '\0'){
		if(i%3 == 0){
			str2[j] = str1[i];
			++j;
		}
		++i;
	}
	str2[j] = '\0';
	printf(""Der neue String lautet: %s\n"", str2);
}","#include <stdio.h>
int main(int argc, char* argv[]){
	int a = 0;
	char str1[100];
	for(int i = 1; i<argc; ++i){
		int j = 0; 
		while(argv[i][j] != '\0'){
			if(argv[i][j] == 'x' || argv[i][j] == 'y' || argv[i][j] == 'q' || argv[i][j] == 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q'){
			}else{
				str1[a] = argv[i][j];
				++a;
			}
			++j;
		}
	}
	str1[a] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"", str1);
	char str2[100];
	int i = 0;
	int j = 0;
	while(str1[i] != '\0'){
		if(i%3 == 0){
			str2[j] = str1[i];
			++j;
		}
		++i;
	}
	str2[j] = '\0';
	printf(""Der neue String lautet: %s\n"", str2);
}",1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\n"", temp);
	printf(""\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\n"", temp);
	printf(""\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}",1
"#include <stdio.h>
int findIndexOfMax(int a[],int g){
int x = INT_MIN;
int z ;
int y = 0;
for(int i = 0; i <= g; i++){
if(a[i] >= x) {
z = i;
x=a[i];
}
if(a[i] == INT_MIN) y+=1;
if(y==5){ return UINT_MAX;}
}
return z;
}
int main()
{ 
int ar[4];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "" );
scanf(""%i"",&ar[0]);
scanf(""%i"",&ar[1]);
scanf(""%i"",&ar[2]);
scanf(""%i"",&ar[3]);
scanf(""%i"",&ar[4]);
for (int i=0; i<5; i++){
printf(""Naechstgroesstes: %i\n"", ar[findIndexOfMax(ar,4)]);
ar[findIndexOfMax(ar,4)] = INT_MIN;
}
}","#include <stdio.h>
int findIndexOfMax(int array[],int groesse){
    int index=0;
    int max=array[0];
    int test=0;
    for (int i=0;i<groesse;i++){
        if (array[i]==INT_MIN){
            test++;
        }
    }
    if(test!=groesse){
        for (int i=1;i<groesse;i++){
            if (array[i]>=max){
                max=array[i];
                index=i;
            }
        }
    return index;
    }
    else return UINT_MAX;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for (int i=0;i<=4;i++){
        scanf(""%i"",&array[i]);
    }
    for(int i=0;i<=4;i++){
        int index=findIndexOfMax(array,5);
        if(index!=UINT_MAX){
            printf(""Naechstgroesstes: %i\n"",array[index]);
            array[index]=INT_MIN;
        }
        else break;
    }
}",0
"#include <stdio.h>
int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",Ausgabe);
    printf(""Der neue String lautet: %s\n"",Ausgabe2);
}","#include <stdio.h>
int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",Ausgabe);
    printf(""Der neue String lautet: %s\n"",Ausgabe2);
}",1
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",1
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\n"", temp);
	printf(""\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}",0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}",1
"#include <stdio.h>
unsigned int findIndexOfMax(int a[],int i_array_size)
{
int max_number = INT_MIN;
int max_index;
	//  Condition counter
int count_2 = 0;
for(int k = 0; k <= i_array_size - 1; k++)
	{
	if(a[k] == INT_MIN) count_2 += 1;
	}
	// condition executive
if(count_2 == i_array_size) 
	{
	return UINT_MAX;
	}
	//  default executive
else	
	{
	for(int j = 0; j <= i_array_size - 1; j++)
		{
		if(a[j] >= max_number)
			{
			max_number = a[j];
			max_index = j;
			}
		else max_number = max_number;
		} 
	return max_index;	
	}
}
int main()
{
int array_size = 5;
printf(""Bitte geben Sie 5 ganze Zahlen ein:\n"");
int array[array_size];
unsigned int dead_switch;
unsigned int index;
	//  Read numbers from user
for(int i = 0; i <= array_size - 1; i++)
	{
	printf(""Naechstgroesstes:\t"");
	scanf(""%i"",&array[i]);
	}
	//  main loop
do
	{	 
	//  Set variables in array to INT_MIN one by one. Starting with the largest ending with the lowest
	for(int m = 0; m <= array_size - 1; m++)
		{
		//  function call and reassignment
		index = findIndexOfMax(array, array_size);   
		//  Display content and index of the recently changed cell
		if(index != UINT_MAX)
		printf(""\nDie größte Zahl des Arrays liegt am Index %u und lautet %i"", index, array[index]); 
		array[index] = INT_MIN;
		// shutdown condition
		dead_switch = index;
		if(dead_switch == UINT_MAX) m = array_size; 
		}
	}
while(dead_switch != UINT_MAX);
if(index == UINT_MAX) printf(""\nDer Rückgabewert der Funktion findIndexOfMax bei leerer Liste ist richtig.\n"");
else printf(""\nDer Rückgabewert der Funktion findIndexOfMax bei leerer Liste ist falsch. Er sollte UINT_MAX = %i sein.\nDeiner ist jedoch %i."", UINT_MAX, index);
} 
// 
// 
//
//","#include <stdio.h>
unsigned int findIndexOfMax(int a[],int i_array_size)
{
int max_number = INT_MIN;
int max_index;
	//  Condition counter
int count_2 = 0;
for(int k = 0; k <= i_array_size - 1; k++)
	{
	if(a[k] == INT_MIN) count_2 += 1;
	}
	// condition executive
if(count_2 == i_array_size) 
	{
	return UINT_MAX;
	}
	//  default executive
else	
	{
	for(int j = 0; j <= i_array_size - 1; j++)
		{
		if(a[j] >= max_number)
			{
			max_number = a[j];
			max_index = j;
			}
		else max_number = max_number;
		} 
	return max_index;	
	}
}
int main()
{
int array_size = 5;
printf(""Bitte geben Sie 5 ganze Zahlen ein:\n"");
int array[array_size];
unsigned int dead_switch;
unsigned int index;
	//  Read numbers from user
for(int i = 0; i <= array_size - 1; i++)
	{
	printf(""Naechstgroesstes:\t"");
	scanf(""%i"",&array[i]);
	}
	//  main loop
do
	{	 
	//  Set variables in array to INT_MIN one by one. Starting with the largest ending with the lowest
	for(int m = 0; m <= array_size - 1; m++)
		{
		//  function call and reassignment
		index = findIndexOfMax(array, array_size);   
		//  Display content and index of the recently changed cell
		if(index != UINT_MAX)
		printf(""\nDie größte Zahl des Arrays liegt am Index %u und lautet %i"", index, array[index]); 
		array[index] = INT_MIN;
		// shutdown condition
		dead_switch = index;
		if(dead_switch == UINT_MAX) m = array_size; 
		}
	}
while(dead_switch != UINT_MAX);
if(index == UINT_MAX) printf(""\nDer Rückgabewert der Funktion findIndexOfMax bei leerer Liste ist richtig.\n"");
else printf(""\nDer Rückgabewert der Funktion findIndexOfMax bei leerer Liste ist falsch. Er sollte UINT_MAX = %i sein.\nDeiner ist jedoch %i."", UINT_MAX, index);
} 
// 
// 
//
//",1
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int a[], int *size){
	int b=a[0],j=*size;
	for(int i = 0;i<j;i++){
		if(b<=a[i]){
			b=a[i];
			*size=i;
		}
	}
	return *size;
}
int cmpfunc (const void * a, const void * b) {
   return ( *(int*)a - *(int*)b );
}
int main(){
	int array[5],index=5;
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	for(int i=0;i<5;i++){
		scanf(""%d"", &array[i]);
	}
	qsort(array, 5, sizeof(int), cmpfunc);
	for(int i=4;i>=0;i--){
		printf(""Naechstgroesstes: %i\n"", array[i]);
	}
	findIndexOfMax(array,&index);
	//printf(""Die größte Zahl des Arrays liegt am Index %i und lautet %i\n"", index, array[index]);
}","#include <stdio.h>
int findIndexOfMax(int array[],int groesse){
    int index=0;
    int max=array[0];
    int test=0;
    for (int i=0;i<groesse;i++){
        if (array[i]==INT_MIN){
            test++;
        }
    }
    if(test!=groesse){
        for (int i=1;i<groesse;i++){
            if (array[i]>=max){
                max=array[i];
                index=i;
            }
        }
    return index;
    }
    else return UINT_MAX;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for (int i=0;i<=4;i++){
        scanf(""%i"",&array[i]);
    }
    for(int i=0;i<=4;i++){
        int index=findIndexOfMax(array,5);
        if(index!=UINT_MAX){
            printf(""Naechstgroesstes: %i\n"",array[index]);
            array[index]=INT_MIN;
        }
        else break;
    }
}",0
"#include <stdio.h>
#include <stdlib.h>
int main(int argc, char* argv[]){
char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>
#include <stdlib.h>
int main(int argc, char* argv[]){
char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}",1
"#include <stdio.h>
#include <stdlib.h>
int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];
  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 
    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}
void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}
void umdrehen( char* str )
{
    if (!*str) 
        return;
    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
int main(int argc, char* argv[]){
char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}",0
"#include<stdio.h>
int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}","#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	}
}
void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}
void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}
int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}",0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\n"");
	student_ausgeben(students + i);
	}
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}
void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}
void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}",1
"#include <stdio.h>
int findIndexOfMax(int array[], int size){
    int max=array[0];
    int index;
    for (int i = 0; i < size; i++){
        if (array[i] >= max){
            max = array[i];
            index = i;
        }
    }
    if (max == INT_MIN){
        return UINT_MAX;
    }
    else return index;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for ( int i = 0; i < 5; i++){
        scanf(""%d"", &array[i]);
    }
    int index;
    while(1) {
        index = findIndexOfMax(array,5);
        if (index == UINT_MAX) break;
        printf(""Naechstgroesstes: %d\n"", array[index]);
        array[findIndexOfMax(array, 5)] = INT_MIN;
    }
}","#include <stdio.h>
int findIndexOfMax(int array[], int size){
    int max=array[0];
    int index;
    for (int i = 0; i < size; i++){
        if (array[i] >= max){
            max = array[i];
            index = i;
        }
    }
    if (max == INT_MIN){
        return UINT_MAX;
    }
    else return index;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for ( int i = 0; i < 5; i++){
        scanf(""%d"", &array[i]);
    }
    int index;
    while(1) {
        index = findIndexOfMax(array,5);
        if (index == UINT_MAX) break;
        printf(""Naechstgroesstes: %d\n"", array[index]);
        array[findIndexOfMax(array, 5)] = INT_MIN;
    }
}",1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}",1
"#include <stdio.h>
#include <stdlib.h>
int main(int argc, char* argv[]){
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
}","#include <stdio.h>
int main(int argc, char *argv[])
{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }
    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }
    printf(""\n"");
     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\n"");
	student_ausgeben(students + i);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\nAnzahl Punkte: %d\n"", p_stud->vorname, p_stud->nachname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}",0
"#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}","#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}",0
"#include <stdio.h>
#include <stdlib.h>
int getStringLength(char x[]) {
    int i = 0;
    while(x[i] != NULL) {
        i++;
    }
    return i;
}
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0; i < zahl && i < getStringLength(src) && i < 10; ++i) {
        dest[i] = src[i];
    }
}
void umdrehen( char* str )
{
    int z = getStringLength(str);
    char x[z];
    for (int i = 0; i < z; ++i) {
        x[i] = str[i];
    }
    for (int i = z-1; i >= 0; --i) {
        str[(z-1)-i]=x[i];
    }
}
int main( int argc, char* argv[] )
{
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen(test);
    printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
int getStringLength(char x[]) {
    int i = 0;
    while(x[i] != NULL) {
        i++;
    }
    return i;
}
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0; i < zahl && i < getStringLength(src) && i < 10; ++i) {
        dest[i] = src[i];
    }
}
void umdrehen( char* str )
{
    int z = getStringLength(str);
    char x[z];
    for (int i = 0; i < z; ++i) {
        x[i] = str[i];
    }
    for (int i = z-1; i >= 0; --i) {
        str[(z-1)-i]=x[i];
    }
}
int main( int argc, char* argv[] )
{
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen(test);
    printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int array[], int n){
        int IndexOfMax= 0;
        int pruefer= array[IndexOfMax];
        int all = 0;
        for (int i = 0; i < n; i++){
            if(array[i]== INT_MIN){
                all++;
            }
        }
        if (all == n){
           return UINT_MAX ; 
        }
        else{
        for (int i = 0; i<n; i++){
            if (pruefer <= array[i]){
                pruefer = array[i];
                IndexOfMax = i;
            }
        }
        return IndexOfMax;
        }
}
int main(){
    int array[5];    
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for(int i=0; i<5; i++){
        scanf(""%i"",&array[i]);
    }
    int IndexOfMax; 
    while(findIndexOfMax(array, 5)!= UINT_MAX){
        IndexOfMax = findIndexOfMax(array, 5);
        printf(""Naechstgroesstes: %i\n"",array[IndexOfMax]);
        array[IndexOfMax]= INT_MIN;
    }
}","#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int array[], int n){
        int IndexOfMax= 0;
        int pruefer= array[IndexOfMax];
        int all = 0;
        for (int i = 0; i < n; i++){
            if(array[i]== INT_MIN){
                all++;
            }
        }
        if (all == n){
           return UINT_MAX ; 
        }
        else{
        for (int i = 0; i<n; i++){
            if (pruefer <= array[i]){
                pruefer = array[i];
                IndexOfMax = i;
            }
        }
        return IndexOfMax;
        }
}
int main(){
    int array[5];    
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for(int i=0; i<5; i++){
        scanf(""%i"",&array[i]);
    }
    int IndexOfMax; 
    while(findIndexOfMax(array, 5)!= UINT_MAX){
        IndexOfMax = findIndexOfMax(array, 5);
        printf(""Naechstgroesstes: %i\n"",array[IndexOfMax]);
        array[IndexOfMax]= INT_MIN;
    }
}",1
"#include <stdio.h>
#include <stdlib.h>
int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];
  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 
    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}
void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}
void umdrehen( char* str )
{
    if (!*str) 
        return;
    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}
void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}
void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;
    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}
void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;
    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include <stdio.h>
#include <stdlib.h>
int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];
  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 
    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}
void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}
void umdrehen( char* str )
{
    if (!*str) 
        return;
    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0
"#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}","#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}",1
"#include <stdio.h>
int findIndexOfMax(int a[], int groesse){
    int max = a[0];
    int vergleich[] = {INT_MIN, INT_MIN, INT_MIN, INT_MIN};
    int ind = 0;
    for (size_t i = 0; i < groesse; i++)
    {
        if (a[i] != vergleich[i]){
            for (int j = 0; j < groesse; j++){
        if(a[j] > max){
            max = a[j];
            ind = j;
        }
       }
    return ind;
        }
    }
return UINT_MAX;
}
int main(){
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for(int i = 0; i < 5; i++){
        scanf(""%i"", &(array[i]));
    }
    int sub[5] = {array[0], array[1], array[2], array[3], array[4]};
    for(int i = 0; i < 5; i++){
        int ind = findIndexOfMax(sub, 5);
        printf(""Naechstgroesstes: %i\n"" , sub[ind]);
        sub[ind] = INT_MIN;
    }
}","#include <stdio.h>
int findIndexOfMax(int a[], int groesse){
    int max = a[0];
    int vergleich[] = {INT_MIN, INT_MIN, INT_MIN, INT_MIN};
    int ind = 0;
    for (size_t i = 0; i < groesse; i++)
    {
        if (a[i] != vergleich[i]){
            for (int j = 0; j < groesse; j++){
        if(a[j] > max){
            max = a[j];
            ind = j;
        }
       }
    return ind;
        }
    }
return UINT_MAX;
}
int main(){
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for(int i = 0; i < 5; i++){
        scanf(""%i"", &(array[i]));
    }
    int sub[5] = {array[0], array[1], array[2], array[3], array[4]};
    for(int i = 0; i < 5; i++){
        int ind = findIndexOfMax(sub, 5);
        printf(""Naechstgroesstes: %i\n"" , sub[ind]);
        sub[ind] = INT_MIN;
    }
}",1
"#include<stdio.h>
int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}","#include<stdio.h>
int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\n"");
	student_ausgeben(students + i);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\n"");
	student_ausgeben(students + i);
	}
}",1
"#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}","//gcc -x c HA10_T1.c -o HA10_T1 -Wall -Wextra -pedantic
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
typedef struct{
	char nachname[21];
	char vorname[21];
	int punkte[5];
}Student;
void readLine(char* strbuffer, unsigned int buffersize){//Quelle: PPR Vorlesungsfolien, ""folien_C_dynamischeSpeicherStructs.pdf"" Seite 5
	char format[30] = """";
	sprintf(format, ""%%%u[^\n]%%*c"", buffersize-1);
	scanf(format, strbuffer);
}
void student_einlesen(Student *pStud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", pStud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", pStud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i=0;i<5;i++){
		printf(""%d: "", i+1);
		scanf(""%d"", &(pStud->punkte)[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student *pStud){
	printf(""Student: "");
	printf(""%s "", pStud->vorname);
	printf(""%s\n"", pStud->nachname);
	int intPointsSum = 0;
	for (int i=0;i<5;i++){
		intPointsSum += pStud->punkte[i];
	}
	printf(""Anzahl Punkte: "");
	printf(""%d\n\n"", intPointsSum);
}
int main(){
	int intAmountOfStudents = 5;
	if(1){
		Student rgStudis[intAmountOfStudents];
		Student *rgPStudis[intAmountOfStudents];
		for (int i=0;i<intAmountOfStudents;i++){
			rgPStudis[i] = &rgStudis[i];
		}
		for (int i=0;i<intAmountOfStudents;i++){
			student_einlesen(rgPStudis[i]);
		}
		for (int i=0; i<intAmountOfStudents; i++){
			student_ausgeben(rgPStudis[i]);
		}
	}
	return 0;
}",0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
printf(""Gebe den Vornamen ein: "");
scanf(""%c"",p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%c"",p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:"");
for (int i =0;i<5;i++){
    printf(""%i:"",i+1);
    scanf(""%i"",p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
printf(""Student: %c %c\nAnzahl Punkte: %i"",p_stud->vorname,p_stud->nachname,p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]);
}
int main(){
Student studenten[5];
printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:
1: 2: 3: 4: 5:
erster_Student: Marco Wagner
Punkte -> 14; 18; 13; 9; 16"");
for(int k=0;k<5;k+1 ){
    student_einlesen(studenten+k);
    student_ausgeben(studenten+k);
}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
printf(""Gebe den Vornamen ein: "");
scanf(""%c"",p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%c"",p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:"");
for (int i =0;i<5;i++){
    printf(""%i:"",i+1);
    scanf(""%i"",p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
printf(""Student: %c %c\nAnzahl Punkte: %i"",p_stud->vorname,p_stud->nachname,p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]);
}
int main(){
Student studenten[5];
printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:
1: 2: 3: 4: 5:
erster_Student: Marco Wagner
Punkte -> 14; 18; 13; 9; 16"");
for(int k=0;k<5;k+1 ){
    student_einlesen(studenten+k);
    student_ausgeben(studenten+k);
}
}",1
"#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}","#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}",0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}","#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
  int size_source = 0;
  for(int i = 0; src[i] != '\0'; i++){
   size_source = size_source + 1;
   }
  int size_dest = 0;
  for(int i = 0; dest[i] != '\0'; i++){
   size_dest = size_dest + 1;
   } 
  int minimum = zahl;
  if(size_source <= minimum){
  minimum = size_source;
  } 
  if(size_dest <= minimum){
  minimum = size_dest;
  } 
  for(int i = 0; i<minimum; i++){
   dest[i] = src[i];
  }
}
void umdrehen( char* str )
{
  int size = 0;
  for(int i = 0; str[i] != '\0'; i++){
   size = size + 1;
   }
  for(int i = 0; i<size/2; i++){
   char c = str[i];
   str[i] = str[size - 1 - i];
   str[size - 1 -i] = c;
  } 
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
    for(int i= 0; dest[i] != 0; i++){
        if(i < zahl && src[i] != 0){
            dest[i] = src[i];
        }
    }
}
void umdrehen( char* str )
{
    char temp[100] = """";
    int count = 0;
    for(int i= 0; str[i] != 0; i++){
       temp[i] = str[i];
       count++;
    }
    for(int i= 0; temp[i] != 0; i++){
       str[i] = temp[count-i-1];
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}",1
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int array[], int n){
        int IndexOfMax= 0;
        int pruefer= array[IndexOfMax];
        int all = 0;
        for (int i = 0; i < n; i++){
            if(array[i]== INT_MIN){
                all++;
            }
        }
        if (all == n){
           return UINT_MAX ; 
        }
        else{
        for (int i = 0; i<n; i++){
            if (pruefer <= array[i]){
                pruefer = array[i];
                IndexOfMax = i;
            }
        }
        return IndexOfMax;
        }
}
int main(){
    int array[5];    
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for(int i=0; i<5; i++){
        scanf(""%i"",&array[i]);
    }
    int IndexOfMax; 
    while(findIndexOfMax(array, 5)!= UINT_MAX){
        IndexOfMax = findIndexOfMax(array, 5);
        printf(""Naechstgroesstes: %i\n"",array[IndexOfMax]);
        array[IndexOfMax]= INT_MIN;
    }
}","#include <stdio.h>
int findIndexOfMax(int array[], int size) {
	int index = UINT_MAX;
	int value = INT_MIN;
	for (int i=0; i<size; i++) {
		if (array[i] > value) {
			index = i;
			value = array[i];
		} 
	}
	return index;
}
int main() {
	int array[5];
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	for (int i=0; i<5; i++) {
		scanf(""%d"", &array[i]);
	}
	while(1) {
		int index = findIndexOfMax(array, 5);
		if (index != UINT_MAX) {
			printf(""Naechstgroesstes: %d\n"", array[index]);
			array[index] = INT_MIN;
		} else {
			break;
		}
	}
	return 0;
}",0
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}",0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",1
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int array[], int n){
        int IndexOfMax= 0;
        int pruefer= array[IndexOfMax];
        int all = 0;
        for (int i = 0; i < n; i++){
            if(array[i]== INT_MIN){
                all++;
            }
        }
        if (all == n){
           return UINT_MAX ; 
        }
        else{
        for (int i = 0; i<n; i++){
            if (pruefer <= array[i]){
                pruefer = array[i];
                IndexOfMax = i;
            }
        }
        return IndexOfMax;
        }
}
int main(){
    int array[5];    
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for(int i=0; i<5; i++){
        scanf(""%i"",&array[i]);
    }
    int IndexOfMax; 
    while(findIndexOfMax(array, 5)!= UINT_MAX){
        IndexOfMax = findIndexOfMax(array, 5);
        printf(""Naechstgroesstes: %i\n"",array[IndexOfMax]);
        array[IndexOfMax]= INT_MIN;
    }
}","//Hausaufgabe 7
//Aufgabe 9
#include <stdio.h>
int findIndexOfMax(int array[], int length){
  int a = INT_MIN;
  int b;
  for(int i=0; i<length; i++){
    if (array[i] >= a){
      a = array[i];
      b = i;
    }
  }
  if(array[b] == INT_MIN){
    return UINT_MAX;
  }else{
    return b;
  }
}
int main(){
  int array[5];
  printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
  for(int i=0; i<5; i++){
    scanf(""%i"", &array[i]);
  }
  for(int i=0; i<5; i++){
    int index = findIndexOfMax(array, 5);
    if(index == UINT_MAX){
      break;
    }else{
      printf(""Naechstgroesstes: %i\n"", array[index]);
      array[index] = INT_MIN;
    }
  }
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
    for (int i = 0;(i<zahl && dest[i] != '\0'  ) && src[i] != '\0' ; i++){
        //printf(""%c"", dest[i]);
        dest[i] = src[i];
        //if (dest[i] == '\0' || src[i] == '\0' ){
           // break;
        //} else {
        //    dest[i] = src[i];
        //}
    }
}
void umdrehen( char* str )
{   //printf(""%s\n"", str);
    int i = 0; 
    while(str[i] != '\0'){
        i++;
    }
    i +=1;
    //printf(""%i \n"", i);
    for(int k = 0; k<(i-k-2); k++){
        //printf(""%c \n"", str[i-k-2]);
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
    for (int i = 0;(i<zahl && dest[i] != '\0'  ) && src[i] != '\0' ; i++){
        //printf(""%c"", dest[i]);
        dest[i] = src[i];
        //if (dest[i] == '\0' || src[i] == '\0' ){
           // break;
        //} else {
        //    dest[i] = src[i];
        //}
    }
}
void umdrehen( char* str )
{   //printf(""%s\n"", str);
    int i = 0; 
    while(str[i] != '\0'){
        i++;
    }
    i +=1;
    //printf(""%i \n"", i);
    for(int k = 0; k<(i-k-2); k++){
        //printf(""%c \n"", str[i-k-2]);
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}
void zeichen3 (char* string)
{
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	char tmp[z]; 
	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
}
int main(int argc, char* argv[])
{
	int z = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			string[s] = argv[k][i];
			s++;
		}
	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);
	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}
void zeichen3 (char* string)
{
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	char tmp[z]; 
	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
}
int main(int argc, char* argv[])
{
	int z = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			string[s] = argv[k][i];
			s++;
		}
	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);
	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}",1
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}
void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
int main(int argc, char *argv[])
{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }
    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }
    printf(""\n"");
     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}
void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;
    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	}
}
void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}
void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}
int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}",0
"#include <stdio.h>
int print()
{
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	return 0;
}
int findIndexOfMax(int a[], int hoechste)
{
	int in = 0;
	int i;
	int m = a[0];
	for ( i = 0; i < hoechste; i++)
	{
		if( m < a[i] )
		{
			m = a[i];
			in = i;
		}
	}
	if(m == INT_MIN)
		{
		return UINT_MAX;
		}
	return in;
}
int main()
{
	print();
	int arr[5];
	int i;
	for ( i = 0 ; i < 5 ; i++ )
	{ 
		scanf(""%i"", &arr[i]);
	}
	while(1) {
		int in;
		in = findIndexOfMax( arr, 5 );
		if ( in == UINT_MAX ){
		break;
		}
		printf(""Naechstgroesstes: %i\n"", arr[in]);
		arr[in] = INT_MIN;
		}
}","#include <stdio.h>
int print()
{
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	return 0;
}
int findIndexOfMax(int a[], int hoechste)
{
	int in = 0;
	int i;
	int m = a[0];
	for ( i = 0; i < hoechste; i++)
	{
		if( m < a[i] )
		{
			m = a[i];
			in = i;
		}
	}
	if(m == INT_MIN)
		{
		return UINT_MAX;
		}
	return in;
}
int main()
{
	print();
	int arr[5];
	int i;
	for ( i = 0 ; i < 5 ; i++ )
	{ 
		scanf(""%i"", &arr[i]);
	}
	while(1) {
		int in;
		in = findIndexOfMax( arr, 5 );
		if ( in == UINT_MAX ){
		break;
		}
		printf(""Naechstgroesstes: %i\n"", arr[in]);
		arr[in] = INT_MIN;
		}
}",1
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",1
"#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}","#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\nAnzahl Punkte: %i\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}",0
"#include <stdio.h>
int findIndexOfMax(int a[],int g){
int x = INT_MIN;
int z ;
int y = 0;
for(int i = 0; i <= g; i++){
if(a[i] >= x) {
z = i;
x=a[i];
}
if(a[i] == INT_MIN) y+=1;
if(y==5){ return UINT_MAX;}
}
return z;
}
int main()
{ 
int ar[4];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "" );
scanf(""%i"",&ar[0]);
scanf(""%i"",&ar[1]);
scanf(""%i"",&ar[2]);
scanf(""%i"",&ar[3]);
scanf(""%i"",&ar[4]);
for (int i=0; i<5; i++){
printf(""Naechstgroesstes: %i\n"", ar[findIndexOfMax(ar,4)]);
ar[findIndexOfMax(ar,4)] = INT_MIN;
}
}","#include <stdio.h>
int findIndexOfMax (int array[], int groese)
{
     unsigned int indexOfMax = 0;
    for (int i = 0; i < groese; i++)
    {
       if (array[i] > array[indexOfMax] )
       {
           indexOfMax = i;
       }
    }
    if (array[indexOfMax] == INT_MIN)
    {
        indexOfMax = UINT_MAX;
    }
    return indexOfMax;
}
int main ()
{
    unsigned int index;
    int array_Groese = 5;
    int array[array_Groese];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for (int i = 0; i < array_Groese; i++)
    {
        scanf(""%d"",&array[i]);
    }
    index = findIndexOfMax(array,array_Groese);
    while ( index != UINT_MAX )
    {
        printf(""Naechstgroesstes: %d\n"",array[index]);
        array[index] = INT_MIN;
        index = findIndexOfMax(array,array_Groese);
    }
    return 0;
}",0
"#include <stdio.h>
#include <malloc.h>
typedef struct student{","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}",0
"#include <stdio.h>
int findIndexOfMax(int a[],int g){
int x = INT_MIN;
int z ;
int y = 0;
for(int i = 0; i <= g; i++){
if(a[i] >= x) {
z = i;
x=a[i];
}
if(a[i] == INT_MIN) y+=1;
if(y==5){ return UINT_MAX;}
}
return z;
}
int main()
{ 
int ar[4];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "" );
scanf(""%i"",&ar[0]);
scanf(""%i"",&ar[1]);
scanf(""%i"",&ar[2]);
scanf(""%i"",&ar[3]);
scanf(""%i"",&ar[4]);
for (int i=0; i<5; i++){
printf(""Naechstgroesstes: %i\n"", ar[findIndexOfMax(ar,4)]);
ar[findIndexOfMax(ar,4)] = INT_MIN;
}
}","#include <stdio.h>
int findIndexOfMax(int a[],int g){
int x = INT_MIN;
int z ;
int y = 0;
for(int i = 0; i <= g; i++){
if(a[i] >= x) {
z = i;
x=a[i];
}
if(a[i] == INT_MIN) y+=1;
if(y==5){ return UINT_MAX;}
}
return z;
}
int main()
{ 
int ar[4];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "" );
scanf(""%i"",&ar[0]);
scanf(""%i"",&ar[1]);
scanf(""%i"",&ar[2]);
scanf(""%i"",&ar[3]);
scanf(""%i"",&ar[4]);
for (int i=0; i<5; i++){
printf(""Naechstgroesstes: %i\n"", ar[findIndexOfMax(ar,4)]);
ar[findIndexOfMax(ar,4)] = INT_MIN;
}
}",1
"//Hausaufgabe 7
//Aufgabe 9
#include <stdio.h>
int findIndexOfMax(int array[], int length){
  int a = INT_MIN;
  int b;
  for(int i=0; i<length; i++){
    if (array[i] >= a){
      a = array[i];
      b = i;
    }
  }
  if(array[b] == INT_MIN){
    return UINT_MAX;
  }else{
    return b;
  }
}
int main(){
  int array[5];
  printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
  for(int i=0; i<5; i++){
    scanf(""%i"", &array[i]);
  }
  for(int i=0; i<5; i++){
    int index = findIndexOfMax(array, 5);
    if(index == UINT_MAX){
      break;
    }else{
      printf(""Naechstgroesstes: %i\n"", array[index]);
      array[index] = INT_MIN;
    }
  }
}","#include <stdio.h>
int findIndexOfMax(int array[],int groesse){
    int index=0;
    int max=array[0];
    int test=0;
    for (int i=0;i<groesse;i++){
        if (array[i]==INT_MIN){
            test++;
        }
    }
    if(test!=groesse){
        for (int i=1;i<groesse;i++){
            if (array[i]>=max){
                max=array[i];
                index=i;
            }
        }
    return index;
    }
    else return UINT_MAX;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for (int i=0;i<=4;i++){
        scanf(""%i"",&array[i]);
    }
    for(int i=0;i<=4;i++){
        int index=findIndexOfMax(array,5);
        if(index!=UINT_MAX){
            printf(""Naechstgroesstes: %i\n"",array[index]);
            array[index]=INT_MIN;
        }
        else break;
    }
}",0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}",1
"#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}",0
"#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}",1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}",1
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int array[], int sizearray){
int max=array[0];
int index;
    for (int i=0; i<sizearray; i++){
        if (max<=array[i]){
            max=array[i];
            index=i;
        }
    } if (array[index] ==INT_MIN) {return UINT_MAX;}
    else return index ;
}
int main()
{
  int sizearray=5;
  int array[sizearray];
  int index;
  printf(""Bitte geben Sie %i ganze Zahlen ein: "",sizearray);
  for (int i=0; i<sizearray; i++)
    scanf(""%i"", &array[i]);
  for (int i=0;i<sizearray; i++)
  {
    index=findIndexOfMax(array,sizearray);
    printf(""Naechstgroesstes: %i\n"", array[index]);
    array[index]=INT_MIN;
  }
}","#include <stdio.h>
int print()
{
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	return 0;
}
int findIndexOfMax(int a[], int hoechste)
{
	int in = 0;
	int i;
	int m = a[0];
	for ( i = 0; i < hoechste; i++)
	{
		if( m < a[i] )
		{
			m = a[i];
			in = i;
		}
	}
	if(m == INT_MIN)
		{
		return UINT_MAX;
		}
	return in;
}
int main()
{
	print();
	int arr[5];
	int i;
	for ( i = 0 ; i < 5 ; i++ )
	{ 
		scanf(""%i"", &arr[i]);
	}
	while(1) {
		int in;
		in = findIndexOfMax( arr, 5 );
		if ( in == UINT_MAX ){
		break;
		}
		printf(""Naechstgroesstes: %i\n"", arr[in]);
		arr[in] = INT_MIN;
		}
}",0
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char strneu[100];
	int a = 0;
	for (int i = 0; i < argc -1; i++)
	{
		for (int length = 0; *(*(argv+1+i)+length) != '\0'; length++)
		{
			str[a] = *(*(argv+1+i)+length);
			a++;
		}
	}
	str[a] = '\0';
	for (int i = 0; i < a+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			do
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			} while(1);
			a--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((a/2)-2); i++, z += 3)
	{
		strneu[i] = str[z];
	}
	int length = 0;
	for (length; str[length] != '\0'; length++){}
	strneu[length] = '\0';
	printf(""Der neue String lautet: %s"",strneu);
}","#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char strneu[100];
	int a = 0;
	for (int i = 0; i < argc -1; i++)
	{
		for (int length = 0; *(*(argv+1+i)+length) != '\0'; length++)
		{
			str[a] = *(*(argv+1+i)+length);
			a++;
		}
	}
	str[a] = '\0';
	for (int i = 0; i < a+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			do
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			} while(1);
			a--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((a/2)-2); i++, z += 3)
	{
		strneu[i] = str[z];
	}
	int length = 0;
	for (length; str[length] != '\0'; length++){}
	strneu[length] = '\0';
	printf(""Der neue String lautet: %s"",strneu);
}",1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}",1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\nAnzahl Punkte: %d\n"", p_stud->vorname, p_stud->nachname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}",0
"#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}","#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}",0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}",0
"#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \n"", kedi(argc,argv)[1] );
}","#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \n"", kedi(argc,argv)[1] );
}",1
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}
void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 
    while(*ptemp != '\0')
        ptemp++;
    ptemp--;
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}
void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 
    while(*ptemp != '\0')
        ptemp++;
    ptemp--;
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",0
"#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\nAnzahl Punkte: %i\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}","#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\nAnzahl Punkte: %i\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}",1
"#include <stdio.h>
#include <stdlib.h>
int getStringLength(char x[]) {
    int i = 0;
    while(x[i] != NULL) {
        i++;
    }
    return i;
}
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0; i < zahl && i < getStringLength(src) && i < 10; ++i) {
        dest[i] = src[i];
    }
}
void umdrehen( char* str )
{
    int z = getStringLength(str);
    char x[z];
    for (int i = 0; i < z; ++i) {
        x[i] = str[i];
    }
    for (int i = z-1; i >= 0; --i) {
        str[(z-1)-i]=x[i];
    }
}
int main( int argc, char* argv[] )
{
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen(test);
    printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
  for (int i = 0; (i<zahl)&&(dest[i]!=0)&&(src[i]!=0); i++)
  {
    dest[i]=src[i];
  }
}
void umdrehen( char* str )
{
  int l;
  char puffer;
  for (l = 0; str[l]!=0; l++){}
  for (int i=0; i<l/2; i++){
    puffer=str[i];
    str[i]=str[l-i-1];
    str[l-i-1]=puffer;
  }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0
"#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \nAnzahl Punkte: %i\n\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}",0
"#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\nAnzahl Punkte: %i\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",0
"#include <stdio.h>
#include <stdlib.h>
void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}
char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   
int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}","#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	}
}
void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}
void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}
int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}",0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \nAnzahl Punkte: %i\n\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \nAnzahl Punkte: %i\n\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}",1
"#include <stdio.h>
int findIndexOfMax(int array[],int arraygroesse){
int x = -2147483648;
unsigned int z = 0;
int zaehler = 0;
for(int i = 0; i < arraygroesse; i++){
if(x <= array[i]){
x = array[i];
z = i;}}
for(int i = 0; i < arraygroesse; i++){
if(array[i]==-2147483648)
zaehler++;}
if(zaehler == arraygroesse){
z=4294967295;}
return z;
}
int main (){
int arraysize = 5;
int array[arraysize];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
for( int i = 0; i<arraysize; i++){
scanf(""%i"", &array[i]);}
unsigned int Index = 0;
while(Index != 4294967295){
Index = findIndexOfMax(array, arraysize); 
if(Index!=4294967295){
printf(""Naechstgroesstes: %i\n"", array[Index]);
array[Index] = -2147483648;}}
}","#include <stdio.h>
int findIndexOfMax(int a[], int n){
   if(a[0]>a[1]&&a[0]>a[2]&&a[3]<a[0]&&a[4]<a[0]){
   return 0;}
   else if(a[1]>a[0]&&a[1]>a[2]&&a[3]<a[1]&&a[4]<a[1]){
   return 1;}
   else if(a[2]>a[1]&&a[2]>a[0]&&a[3]<a[2]&&a[4]<a[2]){
   return 2;}
   else if(a[3]>a[1]&&a[3]>a[2]&&a[0]<a[3]&&a[4]<a[3]){
   return 3;}
   else if(a[4]>a[1]&&a[4]>a[2]&&a[3]<a[4]&&a[0]<a[4]){
   return 4;}
   else{ return UINT_MAX;}
}
int main(){
   int a[5];
   int us[5];
   int c[5];
   printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
   for(int i=0;i<5;i++){
      scanf(""%i"",&a[i]);
      c[i] = a[i];
      }
   for(int i=0;i<5;i++){
      us[i] = findIndexOfMax(a,5);
      printf(""Naechstgroesstes: %i\n"",a[us[i]]);
            a[us[i]] = INT_MIN;
      }  
      }",0
"//gcc -x c HA10_T1.c -o HA10_T1 -Wall -Wextra -pedantic
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
typedef struct{
	char nachname[21];
	char vorname[21];
	int punkte[5];
}Student;
void readLine(char* strbuffer, unsigned int buffersize){//Quelle: PPR Vorlesungsfolien, ""folien_C_dynamischeSpeicherStructs.pdf"" Seite 5
	char format[30] = """";
	sprintf(format, ""%%%u[^\n]%%*c"", buffersize-1);
	scanf(format, strbuffer);
}
void student_einlesen(Student *pStud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", pStud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", pStud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i=0;i<5;i++){
		printf(""%d: "", i+1);
		scanf(""%d"", &(pStud->punkte)[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student *pStud){
	printf(""Student: "");
	printf(""%s "", pStud->vorname);
	printf(""%s\n"", pStud->nachname);
	int intPointsSum = 0;
	for (int i=0;i<5;i++){
		intPointsSum += pStud->punkte[i];
	}
	printf(""Anzahl Punkte: "");
	printf(""%d\n\n"", intPointsSum);
}
int main(){
	int intAmountOfStudents = 5;
	if(1){
		Student rgStudis[intAmountOfStudents];
		Student *rgPStudis[intAmountOfStudents];
		for (int i=0;i<intAmountOfStudents;i++){
			rgPStudis[i] = &rgStudis[i];
		}
		for (int i=0;i<intAmountOfStudents;i++){
			student_einlesen(rgPStudis[i]);
		}
		for (int i=0; i<intAmountOfStudents; i++){
			student_ausgeben(rgPStudis[i]);
		}
	}
	return 0;
}","#include <stdio.h>
#include <malloc.h>
typedef struct student{",0
"#include <stdio.h>
int findIndexOfMax(int x[], int groesse){
int array[] = {INT_MIN,INT_MIN,INT_MIN,INT_MIN,INT_MIN};
int index = 0;
	for(int i = 0; i < groesse; i++){
	if(array[i] > x[i]){
	array[i] = x[i];
	index = i;
		} 
	} return index;
}
int main() {
printf(""Bitte geben Sie 5 ganze Zahlen ein:"");
	int array[5];
	int temp;
for(int i = 0; i < 5 ; i++ ){	
	scanf(""%i"" , &array[i]);
	}
for(int i = 0; i<5 ; i++){
	for(int j=0; j<5 ; j++){
		if(array[i] > array[j]){
			temp = array[i];
			array[i] = array[j];
			array[j] = temp;
			}
		}
	}
for(int i = 0; i<5 ; i++)	{
printf("" Naechstgroesstes: %i\n"" , array[i]);
		}
}","#include <stdio.h>
int findIndexOfMax(int a[], int n){
   if(a[0]>a[1]&&a[0]>a[2]&&a[3]<a[0]&&a[4]<a[0]){
   return 0;}
   else if(a[1]>a[0]&&a[1]>a[2]&&a[3]<a[1]&&a[4]<a[1]){
   return 1;}
   else if(a[2]>a[1]&&a[2]>a[0]&&a[3]<a[2]&&a[4]<a[2]){
   return 2;}
   else if(a[3]>a[1]&&a[3]>a[2]&&a[0]<a[3]&&a[4]<a[3]){
   return 3;}
   else if(a[4]>a[1]&&a[4]>a[2]&&a[3]<a[4]&&a[0]<a[4]){
   return 4;}
   else{ return UINT_MAX;}
}
int main(){
   int a[5];
   int us[5];
   int c[5];
   printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
   for(int i=0;i<5;i++){
      scanf(""%i"",&a[i]);
      c[i] = a[i];
      }
   for(int i=0;i<5;i++){
      us[i] = findIndexOfMax(a,5);
      printf(""Naechstgroesstes: %i\n"",a[us[i]]);
            a[us[i]] = INT_MIN;
      }  
      }",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i=0; i<zahl && *(dest+i) != '\0'  ; i++){
  *(dest+i) = *(src +i);
  }
}
void umdrehen( char* str )
{
  int n=0;
  for(int i =0; *(str+i) != '\0' ;i++){
  n++;}
  n--;
  for(int i=0; i<=n; i++){
  char tmp = *(str +i); 
  *(str + i) = *(str + n );
  *(str + n) = tmp;
    n--;
  }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	if(zahl == 0) return; 
	int länge;
	for(int i = 0; dest[i] != '\0'; i++) länge++;
	for(int i = 0; i <= zahl && i<länge; i++){
		if(src[i] == '\0') return;
		dest[i] = src[i];
	}
}
void umdrehen( char* str )
{
	int länge;
	for(int i = 0; str[i] != '\0'; i++) länge++;
	char copy[länge];
	for(int i = 0; i<=länge; i++){
		copy[i] = str[i];
	}
	for(int i = 0; i<länge; i++){
		str[i] = copy[länge-1-i];
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}
void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",0
"#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}","#include <stdio.h>
typedef struct{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    int summe = 0;
    for (int i = 0; i < 5; ++i) {
        summe += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n"", summe);
}
int main(void){
    Student erster_student;
    Student zweiter_student;
    Student dritter_student;
    Student vierter_student;
    Student fuenfter_student;
    Student studierende[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studierende[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studierende[i]);
        printf(""\n"");
    }
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; i < zahl; i++)
	{
		if(*dest != 0 && *src != 0)
		{
			*dest = *src;
			dest++;
			src++;
		}
		else
		{
			i = zahl;
		}
	}
}
void umdrehen( char* str )
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	for(;*lenpt != 0;  lenpt++)
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	for(int i = lencnt; i >= 0; i--)
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	orgpt = str;
	lenpt = auxString;
	for(int i = lencnt; i > 0; i--)
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; i < zahl; i++)
	{
		if(*dest != 0 && *src != 0)
		{
			*dest = *src;
			dest++;
			src++;
		}
		else
		{
			i = zahl;
		}
	}
}
void umdrehen( char* str )
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	for(;*lenpt != 0;  lenpt++)
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	for(int i = lencnt; i >= 0; i--)
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	orgpt = str;
	lenpt = auxString;
	for(int i = lencnt; i > 0; i--)
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src){  
    for (int i = 0; i <=zahl && dest[i] != '\0'; i++){
        dest[i] = src[i];
    }
}
void umdrehen( char* str ){
    int z = 0;
    for(int i = 1; str[i] != '\0'; i++){
        z = i;
    }
    char tmp[z];
    for(int i = 0; str[i] != '\0'; i++){
        tmp[i] = str[z-i];
    }
    for(int i = 0; str[i] != '\0'; i++){
        str[i]=tmp[i];
    }
}
int main( int argc, char* argv[] ){  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src){  
    for (int i = 0; i <=zahl && dest[i] != '\0'; i++){
        dest[i] = src[i];
    }
}
void umdrehen( char* str ){
    int z = 0;
    for(int i = 1; str[i] != '\0'; i++){
        z = i;
    }
    char tmp[z];
    for(int i = 0; str[i] != '\0'; i++){
        tmp[i] = str[z-i];
    }
    for(int i = 0; str[i] != '\0'; i++){
        str[i]=tmp[i];
    }
}
int main( int argc, char* argv[] ){  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}
void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}
int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}
void zeichen3 (char* string)
{
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	char tmp[z]; 
	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
}
int main(int argc, char* argv[])
{
	int z = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			string[s] = argv[k][i];
			s++;
		}
	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);
	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}",0
"#include <stdio.h>
int findIndexOfMax(int array[], int size){
    int max=array[0];
    int index;
    for (int i = 0; i < size; i++){
        if (array[i] >= max){
            max = array[i];
            index = i;
        }
    }
    if (max == INT_MIN){
        return UINT_MAX;
    }
    else return index;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for ( int i = 0; i < 5; i++){
        scanf(""%d"", &array[i]);
    }
    int index;
    while(1) {
        index = findIndexOfMax(array,5);
        if (index == UINT_MAX) break;
        printf(""Naechstgroesstes: %d\n"", array[index]);
        array[findIndexOfMax(array, 5)] = INT_MIN;
    }
}","#include <stdio.h>
unsigned int findIndexOfMax(int a[],int i_array_size)
{
int max_number = INT_MIN;
int max_index;
	//  Condition counter
int count_2 = 0;
for(int k = 0; k <= i_array_size - 1; k++)
	{
	if(a[k] == INT_MIN) count_2 += 1;
	}
	// condition executive
if(count_2 == i_array_size) 
	{
	return UINT_MAX;
	}
	//  default executive
else	
	{
	for(int j = 0; j <= i_array_size - 1; j++)
		{
		if(a[j] >= max_number)
			{
			max_number = a[j];
			max_index = j;
			}
		else max_number = max_number;
		} 
	return max_index;	
	}
}
int main()
{
int array_size = 5;
printf(""Bitte geben Sie 5 ganze Zahlen ein:\n"");
int array[array_size];
unsigned int dead_switch;
unsigned int index;
	//  Read numbers from user
for(int i = 0; i <= array_size - 1; i++)
	{
	printf(""Naechstgroesstes:\t"");
	scanf(""%i"",&array[i]);
	}
	//  main loop
do
	{	 
	//  Set variables in array to INT_MIN one by one. Starting with the largest ending with the lowest
	for(int m = 0; m <= array_size - 1; m++)
		{
		//  function call and reassignment
		index = findIndexOfMax(array, array_size);   
		//  Display content and index of the recently changed cell
		if(index != UINT_MAX)
		printf(""\nDie größte Zahl des Arrays liegt am Index %u und lautet %i"", index, array[index]); 
		array[index] = INT_MIN;
		// shutdown condition
		dead_switch = index;
		if(dead_switch == UINT_MAX) m = array_size; 
		}
	}
while(dead_switch != UINT_MAX);
if(index == UINT_MAX) printf(""\nDer Rückgabewert der Funktion findIndexOfMax bei leerer Liste ist richtig.\n"");
else printf(""\nDer Rückgabewert der Funktion findIndexOfMax bei leerer Liste ist falsch. Er sollte UINT_MAX = %i sein.\nDeiner ist jedoch %i."", UINT_MAX, index);
} 
// 
// 
//
//",0
"#include <stdio.h>
#include <malloc.h>
typedef struct student{","#include <stdio.h>
#include <malloc.h>
typedef struct student{",1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\nAnzahl Punkte: %i\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \nAnzahl Punkte: %i\n\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}",0
"#include <stdio.h>
#include <stdlib.h>
//void ersetzen(char* dest, int zahl, char* src)
void ersetzen(char* dest, int zahl, char* src){  
	for (int i = 0; i <=zahl && dest[i] != '\0'; i++){
		dest[i] = src[i];
	}
}
//void umdrehen( char* str )
void umdrehen( char* str ){
	int c = 0;
	for(int i = 1; str[i] != '\0'; i++){
		c = i;
	}
	char tmp[c];
	for(int i = 0; str[i] != '\0'; i++){
		tmp[i] = str[c-i];
	}
	for(int i = 0; str[i] != '\0'; i++){
		str[i]=tmp[i];
	}
}
//int main( int argc, char* argv[] )
int main( int argc, char* argv[] ){  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
//void ersetzen(char* dest, int zahl, char* src)
void ersetzen(char* dest, int zahl, char* src){  
	for (int i = 0; i <=zahl && dest[i] != '\0'; i++){
		dest[i] = src[i];
	}
}
//void umdrehen( char* str )
void umdrehen( char* str ){
	int c = 0;
	for(int i = 1; str[i] != '\0'; i++){
		c = i;
	}
	char tmp[c];
	for(int i = 0; str[i] != '\0'; i++){
		tmp[i] = str[c-i];
	}
	for(int i = 0; str[i] != '\0'; i++){
		str[i]=tmp[i];
	}
}
//int main( int argc, char* argv[] )
int main( int argc, char* argv[] ){  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int array[], int n){
        int IndexOfMax= 0;
        int pruefer= array[IndexOfMax];
        int all = 0;
        for (int i = 0; i < n; i++){
            if(array[i]== INT_MIN){
                all++;
            }
        }
        if (all == n){
           return UINT_MAX ; 
        }
        else{
        for (int i = 0; i<n; i++){
            if (pruefer <= array[i]){
                pruefer = array[i];
                IndexOfMax = i;
            }
        }
        return IndexOfMax;
        }
}
int main(){
    int array[5];    
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for(int i=0; i<5; i++){
        scanf(""%i"",&array[i]);
    }
    int IndexOfMax; 
    while(findIndexOfMax(array, 5)!= UINT_MAX){
        IndexOfMax = findIndexOfMax(array, 5);
        printf(""Naechstgroesstes: %i\n"",array[IndexOfMax]);
        array[IndexOfMax]= INT_MIN;
    }
}","#include <stdio.h>
int findIndexOfMax(int x[], int groesse){
int array[] = {INT_MIN,INT_MIN,INT_MIN,INT_MIN,INT_MIN};
int index = 0;
	for(int i = 0; i < groesse; i++){
	if(array[i] > x[i]){
	array[i] = x[i];
	index = i;
		} 
	} return index;
}
int main() {
printf(""Bitte geben Sie 5 ganze Zahlen ein:"");
	int array[5];
	int temp;
for(int i = 0; i < 5 ; i++ ){	
	scanf(""%i"" , &array[i]);
	}
for(int i = 0; i<5 ; i++){
	for(int j=0; j<5 ; j++){
		if(array[i] > array[j]){
			temp = array[i];
			array[i] = array[j];
			array[j] = temp;
			}
		}
	}
for(int i = 0; i<5 ; i++)	{
printf("" Naechstgroesstes: %i\n"" , array[i]);
		}
}",0
"#include <stdio.h>
int findIndexOfMax(int a[], int listsize)
{
	for(int i = 0; i < listsize; ++i)
		{
		if (i == listsize - 1)
		{
			if(a[i] == INT_MIN)
				return UINT_MAX;
			else
				return i;
		}
		for(int j = i + 1; j < listsize; ++j)
			{
			if(a[i] == INT_MIN)
			break;
			if((a[j] == INT_MIN) && (j != listsize -1))
			++j;
			if(a[i] < a[j])
			break;
			else
			{
				if (j == listsize - 1)
				{
					if(a[i] == INT_MIN)
						return UINT_MAX;
					else
						return i;
				}
			}
			}
		}
}
int main()
{
int listsize = 5;
int nummer[listsize];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
for (int i = 0; i < listsize; ++i)
{
scanf(""%i"", &nummer[i]);
}
for (int i = 0; i < listsize; ++i)
{
int index = findIndexOfMax(nummer, listsize);
printf(""Naechstgroesstes: %i \n"", nummer[index]);
if (index == UINT_MAX)
break;
nummer[index] = INT_MIN;
} 
}","#include <stdio.h>
int findIndexOfMax(int a[], int listsize)
{
	for(int i = 0; i < listsize; ++i)
		{
		if (i == listsize - 1)
		{
			if(a[i] == INT_MIN)
				return UINT_MAX;
			else
				return i;
		}
		for(int j = i + 1; j < listsize; ++j)
			{
			if(a[i] == INT_MIN)
			break;
			if((a[j] == INT_MIN) && (j != listsize -1))
			++j;
			if(a[i] < a[j])
			break;
			else
			{
				if (j == listsize - 1)
				{
					if(a[i] == INT_MIN)
						return UINT_MAX;
					else
						return i;
				}
			}
			}
		}
}
int main()
{
int listsize = 5;
int nummer[listsize];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
for (int i = 0; i < listsize; ++i)
{
scanf(""%i"", &nummer[i]);
}
for (int i = 0; i < listsize; ++i)
{
int index = findIndexOfMax(nummer, listsize);
printf(""Naechstgroesstes: %i \n"", nummer[index]);
if (index == UINT_MAX)
break;
nummer[index] = INT_MIN;
} 
}",1
"#include <stdio.h>
int findIndexOfMax(int array[], int size) {
	int index = UINT_MAX;
	int value = INT_MIN;
	for (int i=0; i<size; i++) {
		if (array[i] > value) {
			index = i;
			value = array[i];
		} 
	}
	return index;
}
int main() {
	int array[5];
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	for (int i=0; i<5; i++) {
		scanf(""%d"", &array[i]);
	}
	while(1) {
		int index = findIndexOfMax(array, 5);
		if (index != UINT_MAX) {
			printf(""Naechstgroesstes: %d\n"", array[index]);
			array[index] = INT_MIN;
		} else {
			break;
		}
	}
	return 0;
}","#include <stdio.h>
int findIndexOfMax(int x[], int groesse){
int array[] = {INT_MIN,INT_MIN,INT_MIN,INT_MIN,INT_MIN};
int index = 0;
	for(int i = 0; i < groesse; i++){
	if(array[i] > x[i]){
	array[i] = x[i];
	index = i;
		} 
	} return index;
}
int main() {
printf(""Bitte geben Sie 5 ganze Zahlen ein:"");
	int array[5];
	int temp;
for(int i = 0; i < 5 ; i++ ){	
	scanf(""%i"" , &array[i]);
	}
for(int i = 0; i<5 ; i++){
	for(int j=0; j<5 ; j++){
		if(array[i] > array[j]){
			temp = array[i];
			array[i] = array[j];
			array[j] = temp;
			}
		}
	}
for(int i = 0; i<5 ; i++)	{
printf("" Naechstgroesstes: %i\n"" , array[i]);
		}
}",0
"#include <stdio.h>
int main() {
   char satz[100], satz2[100];
   int l, k;
   fgets(satz, sizeof(satz), stdin);
   for (int i = 0, j; satz[i] != '\0'; ++i) {
      while (!(satz[i] >= 'a' && satz[i] <= 'p') && !(satz[i] >= 'r' && satz[i] <= 'w') && !(satz[i] == 'z') && !(satz[i] >= 'A' && satz[i] <= 'P') && !(satz[i] >= 'R' && satz[i] <= 'W') && !(satz[i] == 'Z') && !(satz[i] == '!') && !(satz[i] == '?') && !(satz[i] == '\0')){
         for (j = i; satz[j] != '\0'; ++j) {
            satz[j] = satz[j + 1];
         }
         satz[j] = '\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(satz);
     for (int l = 0, k; satz[l] != '\0'; ++l) {
        satz2[k] == satz[l];
        k++;
        l=l+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}","#include <stdio.h>
int main() {
   char satz[100], satz2[100];
   int l, k;
   fgets(satz, sizeof(satz), stdin);
   for (int i = 0, j; satz[i] != '\0'; ++i) {
      while (!(satz[i] >= 'a' && satz[i] <= 'p') && !(satz[i] >= 'r' && satz[i] <= 'w') && !(satz[i] == 'z') && !(satz[i] >= 'A' && satz[i] <= 'P') && !(satz[i] >= 'R' && satz[i] <= 'W') && !(satz[i] == 'Z') && !(satz[i] == '!') && !(satz[i] == '?') && !(satz[i] == '\0')){
         for (j = i; satz[j] != '\0'; ++j) {
            satz[j] = satz[j + 1];
         }
         satz[j] = '\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(satz);
     for (int l = 0, k; satz[l] != '\0'; ++l) {
        satz2[k] == satz[l];
        k++;
        l=l+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}",1
"#include <stdio.h>
int main(int  argc, char *argv[]) // start at argv[1]
{
char array[100];
int slot_count = 0;
char b[100];
int slot_count_b = 0;
for(int i = 1; i < argc; i++)
	{
	int j = -1;
	do
		{
		j++;
		if(argv[i][j] == 'x') continue;
		else if(argv[i][j] == 'y') continue;
		else if(argv[i][j] == 'q') continue;
		else if(argv[i][j] == 'X') continue;
		else if(argv[i][j] == 'Y') continue;
		else if(argv[i][j] == 'Q') continue;
		else if(argv[i][j] == '\0')
			{
			array[slot_count] = '\0';
			b[slot_count_b] = '\0';
			}
		else
			{
			array[slot_count] = argv[i][j];
			if( (slot_count == 0 || (slot_count) % 3 == 0) )
				{
				b[slot_count_b] = array[slot_count];
				slot_count_b++;
				}		
			slot_count++;
			}
		}		
	while(argv[i][j] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int m = 0; m < slot_count; m++) printf(""%c"", array[m]); 
printf(""\nDer neue String lautet: "");
for(int n = 0; n < slot_count_b; n++) printf(""%c"", b[n]); 
}","#include <stdio.h>
int main(int  argc, char *argv[]) // start at argv[1]
{
char array[100];
int slot_count = 0;
char b[100];
int slot_count_b = 0;
for(int i = 1; i < argc; i++)
	{
	int j = -1;
	do
		{
		j++;
		if(argv[i][j] == 'x') continue;
		else if(argv[i][j] == 'y') continue;
		else if(argv[i][j] == 'q') continue;
		else if(argv[i][j] == 'X') continue;
		else if(argv[i][j] == 'Y') continue;
		else if(argv[i][j] == 'Q') continue;
		else if(argv[i][j] == '\0')
			{
			array[slot_count] = '\0';
			b[slot_count_b] = '\0';
			}
		else
			{
			array[slot_count] = argv[i][j];
			if( (slot_count == 0 || (slot_count) % 3 == 0) )
				{
				b[slot_count_b] = array[slot_count];
				slot_count_b++;
				}		
			slot_count++;
			}
		}		
	while(argv[i][j] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int m = 0; m < slot_count; m++) printf(""%c"", array[m]); 
printf(""\nDer neue String lautet: "");
for(int n = 0; n < slot_count_b; n++) printf(""%c"", b[n]); 
}",1
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>
int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}",1
"#include <stdio.h>
#include <stdlib.h>
void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}
char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   
int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}
void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0
"#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\nAnzahl Punkte: %i\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}",0
"#include <stdio.h>
#include <stdlib.h>
int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];
  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 
    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}
void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}
void umdrehen( char* str )
{
    if (!*str) 
        return;
    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}
int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}
int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}
int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
printf(""Gebe den Vornamen ein: "");
scanf(""%c"",p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%c"",p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:"");
for (int i =0;i<5;i++){
    printf(""%i:"",i+1);
    scanf(""%i"",p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
printf(""Student: %c %c\nAnzahl Punkte: %i"",p_stud->vorname,p_stud->nachname,p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]);
}
int main(){
Student studenten[5];
printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:
1: 2: 3: 4: 5:
erster_Student: Marco Wagner
Punkte -> 14; 18; 13; 9; 16"");
for(int k=0;k<5;k+1 ){
    student_einlesen(studenten+k);
    student_ausgeben(studenten+k);
}
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];
}
void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
}
int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        //printf(""Current Size %i \n"",LengthOfString);
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //String 1 
        int length, j;
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}
void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
int main(int argc, char* argv[52])
{
   //aneinanderhängen
   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';
   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }
   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:
   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0
"#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}","#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}",1
"#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\nAnzahl Punkte: %i\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}",0
"#include <stdio.h>
int findIndexOfMax(int a[], int groesse){
    int max = a[0];
    int vergleich[] = {INT_MIN, INT_MIN, INT_MIN, INT_MIN};
    int ind = 0;
    for (size_t i = 0; i < groesse; i++)
    {
        if (a[i] != vergleich[i]){
            for (int j = 0; j < groesse; j++){
        if(a[j] > max){
            max = a[j];
            ind = j;
        }
       }
    return ind;
        }
    }
return UINT_MAX;
}
int main(){
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for(int i = 0; i < 5; i++){
        scanf(""%i"", &(array[i]));
    }
    int sub[5] = {array[0], array[1], array[2], array[3], array[4]};
    for(int i = 0; i < 5; i++){
        int ind = findIndexOfMax(sub, 5);
        printf(""Naechstgroesstes: %i\n"" , sub[ind]);
        sub[ind] = INT_MIN;
    }
}","#include <stdio.h>
int findIndexOfMax(int array[],int groesse){
    int index=0;
    int max=array[0];
    int test=0;
    for (int i=0;i<groesse;i++){
        if (array[i]==INT_MIN){
            test++;
        }
    }
    if(test!=groesse){
        for (int i=1;i<groesse;i++){
            if (array[i]>=max){
                max=array[i];
                index=i;
            }
        }
    return index;
    }
    else return UINT_MAX;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for (int i=0;i<=4;i++){
        scanf(""%i"",&array[i]);
    }
    for(int i=0;i<=4;i++){
        int index=findIndexOfMax(array,5);
        if(index!=UINT_MAX){
            printf(""Naechstgroesstes: %i\n"",array[index]);
            array[index]=INT_MIN;
        }
        else break;
    }
}",0
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}",1
"#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str1);
    printf(""Der neue String lautet: %s\n"", str2);
}","#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str1);
    printf(""Der neue String lautet: %s\n"", str2);
}",1
"#include <stdio.h>
void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}
void zeichen3 (char* string)
{
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	char tmp[z]; 
	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
}
int main(int argc, char* argv[])
{
	int z = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			string[s] = argv[k][i];
			s++;
		}
	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);
	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>
int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        //printf(""Current Size %i \n"",LengthOfString);
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //String 1 
        int length, j;
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
}",0
"#include <stdio.h>
typedef struct{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    int summe = 0;
    for (int i = 0; i < 5; ++i) {
        summe += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n"", summe);
}
int main(void){
    Student erster_student;
    Student zweiter_student;
    Student dritter_student;
    Student vierter_student;
    Student fuenfter_student;
    Student studierende[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studierende[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studierende[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
typedef struct{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    int summe = 0;
    for (int i = 0; i < 5; ++i) {
        summe += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n"", summe);
}
int main(void){
    Student erster_student;
    Student zweiter_student;
    Student dritter_student;
    Student vierter_student;
    Student fuenfter_student;
    Student studierende[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studierende[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studierende[i]);
        printf(""\n"");
    }
}",1
"#include <stdio.h>
#include <stdlib.h>
void xyzz(char* string)
{
  int t = 0;
  for(char *temp = string; *temp!=0; temp++, t++);
  for(int i = 0,j = 0; i<=t; i++){
    if(i%3==0){
      string[j]=string[i];
      j++;
    }
    if(i==t){
      string[j]=0;
    }
  }
}
void xyz(char* out,int *temp,char* in)
{ 
  char *pout=out;
  for(int i = 0; i<*temp; i++)
  {
    *pout++;
  } 
  for(char *pin=in;*pin!=0;pin++)
  {
    switch (*pin)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *pout++ = *pin;
      *temp+=1;
        break;  
    }    
  }
  *pout=0;
}
int main(int argc, char* argv[])
{
  char str[100];
  int times=0;
  for(int i=1; i<argc;i++)
  {
    xyz(str, &times, argv[i]);
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\n"",str);
  xyzz(str);
  printf( ""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>
void xyzz(char* string)
{
  int t = 0;
  for(char *temp = string; *temp!=0; temp++, t++);
  for(int i = 0,j = 0; i<=t; i++){
    if(i%3==0){
      string[j]=string[i];
      j++;
    }
    if(i==t){
      string[j]=0;
    }
  }
}
void xyz(char* out,int *temp,char* in)
{ 
  char *pout=out;
  for(int i = 0; i<*temp; i++)
  {
    *pout++;
  } 
  for(char *pin=in;*pin!=0;pin++)
  {
    switch (*pin)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *pout++ = *pin;
      *temp+=1;
        break;  
    }    
  }
  *pout=0;
}
int main(int argc, char* argv[])
{
  char str[100];
  int times=0;
  for(int i=1; i<argc;i++)
  {
    xyz(str, &times, argv[i]);
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\n"",str);
  xyzz(str);
  printf( ""Der neue String lautet: %s\n"",str);
}",1
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
	if(zahl == 0) return; 
	int länge;
	for(int i = 0; dest[i] != '\0'; i++) länge++;
	for(int i = 0; i <= zahl && i<länge; i++){
		if(src[i] == '\0') return;
		dest[i] = src[i];
	}
}
void umdrehen( char* str )
{
	int länge;
	for(int i = 0; str[i] != '\0'; i++) länge++;
	char copy[länge];
	for(int i = 0; i<=länge; i++){
		copy[i] = str[i];
	}
	for(int i = 0; i<länge; i++){
		str[i] = copy[länge-1-i];
	}
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
    for (int i=0; i < zahl; i++)
    {
        if (dest[i] == '\0' || src[i] == '\0') break;
        dest[i] =src[i];
    }
}
void umdrehen( char* str )
{
    char tmp=0;
    int strlen= 0;
    for( ; str[strlen] !='\0'; strlen++ );
    for( int i= 0; i< strlen /2; i++)
    {
        tmp= str[i];
        str[i] = str[strlen-i-1];
        str[strlen-i-1] - tmp;
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}
void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}
void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
int findIndexOfMax(int a[], int listsize)
{
	for(int i = 0; i < listsize; ++i)
		{
		if (i == listsize - 1)
		{
			if(a[i] == INT_MIN)
				return UINT_MAX;
			else
				return i;
		}
		for(int j = i + 1; j < listsize; ++j)
			{
			if(a[i] == INT_MIN)
			break;
			if((a[j] == INT_MIN) && (j != listsize -1))
			++j;
			if(a[i] < a[j])
			break;
			else
			{
				if (j == listsize - 1)
				{
					if(a[i] == INT_MIN)
						return UINT_MAX;
					else
						return i;
				}
			}
			}
		}
}
int main()
{
int listsize = 5;
int nummer[listsize];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
for (int i = 0; i < listsize; ++i)
{
scanf(""%i"", &nummer[i]);
}
for (int i = 0; i < listsize; ++i)
{
int index = findIndexOfMax(nummer, listsize);
printf(""Naechstgroesstes: %i \n"", nummer[index]);
if (index == UINT_MAX)
break;
nummer[index] = INT_MIN;
} 
}","#include <stdio.h>
int findIndexOfMax(int a[],int g){
int x = INT_MIN;
int z ;
int y = 0;
for(int i = 0; i <= g; i++){
if(a[i] >= x) {
z = i;
x=a[i];
}
if(a[i] == INT_MIN) y+=1;
if(y==5){ return UINT_MAX;}
}
return z;
}
int main()
{ 
int ar[4];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "" );
scanf(""%i"",&ar[0]);
scanf(""%i"",&ar[1]);
scanf(""%i"",&ar[2]);
scanf(""%i"",&ar[3]);
scanf(""%i"",&ar[4]);
for (int i=0; i<5; i++){
printf(""Naechstgroesstes: %i\n"", ar[findIndexOfMax(ar,4)]);
ar[findIndexOfMax(ar,4)] = INT_MIN;
}
}",0
"#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int a[], int *size){
	int b=a[0],j=*size;
	for(int i = 0;i<j;i++){
		if(b<=a[i]){
			b=a[i];
			*size=i;
		}
	}
	return *size;
}
int cmpfunc (const void * a, const void * b) {
   return ( *(int*)a - *(int*)b );
}
int main(){
	int array[5],index=5;
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	for(int i=0;i<5;i++){
		scanf(""%d"", &array[i]);
	}
	qsort(array, 5, sizeof(int), cmpfunc);
	for(int i=4;i>=0;i--){
		printf(""Naechstgroesstes: %i\n"", array[i]);
	}
	findIndexOfMax(array,&index);
	//printf(""Die größte Zahl des Arrays liegt am Index %i und lautet %i\n"", index, array[index]);
}","#include <stdio.h>
#include <stdlib.h>
int findIndexOfMax(int a[], int *size){
	int b=a[0],j=*size;
	for(int i = 0;i<j;i++){
		if(b<=a[i]){
			b=a[i];
			*size=i;
		}
	}
	return *size;
}
int cmpfunc (const void * a, const void * b) {
   return ( *(int*)a - *(int*)b );
}
int main(){
	int array[5],index=5;
	printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
	for(int i=0;i<5;i++){
		scanf(""%d"", &array[i]);
	}
	qsort(array, 5, sizeof(int), cmpfunc);
	for(int i=4;i>=0;i--){
		printf(""Naechstgroesstes: %i\n"", array[i]);
	}
	findIndexOfMax(array,&index);
	//printf(""Die größte Zahl des Arrays liegt am Index %i und lautet %i\n"", index, array[index]);
}",1
"#include <stdio.h>
char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}
void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}
int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}
void zeichen3 (char* string)
{
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	char tmp[z]; 
	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
}
int main(int argc, char* argv[])
{
	int z = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			string[s] = argv[k][i];
			s++;
		}
	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);
	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}",0
"#include <stdio.h>
int findIndexOfMax (int array[], int groese)
{
     unsigned int indexOfMax = 0;
    for (int i = 0; i < groese; i++)
    {
       if (array[i] > array[indexOfMax] )
       {
           indexOfMax = i;
       }
    }
    if (array[indexOfMax] == INT_MIN)
    {
        indexOfMax = UINT_MAX;
    }
    return indexOfMax;
}
int main ()
{
    unsigned int index;
    int array_Groese = 5;
    int array[array_Groese];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for (int i = 0; i < array_Groese; i++)
    {
        scanf(""%d"",&array[i]);
    }
    index = findIndexOfMax(array,array_Groese);
    while ( index != UINT_MAX )
    {
        printf(""Naechstgroesstes: %d\n"",array[index]);
        array[index] = INT_MIN;
        index = findIndexOfMax(array,array_Groese);
    }
    return 0;
}","#include <stdio.h>
int findIndexOfMax (int array[], int groese)
{
     unsigned int indexOfMax = 0;
    for (int i = 0; i < groese; i++)
    {
       if (array[i] > array[indexOfMax] )
       {
           indexOfMax = i;
       }
    }
    if (array[indexOfMax] == INT_MIN)
    {
        indexOfMax = UINT_MAX;
    }
    return indexOfMax;
}
int main ()
{
    unsigned int index;
    int array_Groese = 5;
    int array[array_Groese];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for (int i = 0; i < array_Groese; i++)
    {
        scanf(""%d"",&array[i]);
    }
    index = findIndexOfMax(array,array_Groese);
    while ( index != UINT_MAX )
    {
        printf(""Naechstgroesstes: %d\n"",array[index]);
        array[index] = INT_MIN;
        index = findIndexOfMax(array,array_Groese);
    }
    return 0;
}",1
"#include <stdio.h>
int findIndexOfMax(int a[], int listsize)
{
	for(int i = 0; i < listsize; ++i)
		{
		if (i == listsize - 1)
		{
			if(a[i] == INT_MIN)
				return UINT_MAX;
			else
				return i;
		}
		for(int j = i + 1; j < listsize; ++j)
			{
			if(a[i] == INT_MIN)
			break;
			if((a[j] == INT_MIN) && (j != listsize -1))
			++j;
			if(a[i] < a[j])
			break;
			else
			{
				if (j == listsize - 1)
				{
					if(a[i] == INT_MIN)
						return UINT_MAX;
					else
						return i;
				}
			}
			}
		}
}
int main()
{
int listsize = 5;
int nummer[listsize];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
for (int i = 0; i < listsize; ++i)
{
scanf(""%i"", &nummer[i]);
}
for (int i = 0; i < listsize; ++i)
{
int index = findIndexOfMax(nummer, listsize);
printf(""Naechstgroesstes: %i \n"", nummer[index]);
if (index == UINT_MAX)
break;
nummer[index] = INT_MIN;
} 
}","#include <stdio.h>
int findIndexOfMax(int array[],int groesse){
    int index=0;
    int max=array[0];
    int test=0;
    for (int i=0;i<groesse;i++){
        if (array[i]==INT_MIN){
            test++;
        }
    }
    if(test!=groesse){
        for (int i=1;i<groesse;i++){
            if (array[i]>=max){
                max=array[i];
                index=i;
            }
        }
    return index;
    }
    else return UINT_MAX;
}
int main() {
    int array[5];
    printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
    for (int i=0;i<=4;i++){
        scanf(""%i"",&array[i]);
    }
    for(int i=0;i<=4;i++){
        int index=findIndexOfMax(array,5);
        if(index!=UINT_MAX){
            printf(""Naechstgroesstes: %i\n"",array[index]);
            array[index]=INT_MIN;
        }
        else break;
    }
}",0
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
#include <malloc.h>
typedef struct student{",0
"#include <stdio.h>
typedef char Str20[21];
typedef struct student
{
	Str20 vorname;
	Str20 nachname;
	int punkte[5];
}Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->vorname, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->nachname, 20);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int j = 0; j < 5; j++)
	{
		printf(""%i: "", j + 1);
		scanf(""%i"", &p_stud->punkte[j]);
		getchar();
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud)
{
	printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
	int summe = 0;
	for(int l = 0; l < 5; l++)
	{
		summe += p_stud->punkte[l];
	}
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
void main()
{
	Student studierende[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studierende[i]);
	}
	for(int k = 0; k < 5; k++)
	{
		student_ausgeben(&studierende[k]);
	}
}","#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}",0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\nAnzahl Punkte: %d\n"", p_stud->vorname, p_stud->nachname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];
}
void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
}
int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];
}
void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
}
int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
#include <stdlib.h>
int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        //printf(""Current Size %i \n"",LengthOfString);
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //String 1 
        int length, j;
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
}","#include <stdio.h>
#include <stdlib.h>
int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        //printf(""Current Size %i \n"",LengthOfString);
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    for (int kk = 1; kk < argc; kk++){
        char * CurrentCommandString = argv[kk];  
        //String 1 
        int length, j;
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
}",1
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
  for (int i = 0; (i<zahl)&&(dest[i]!=0)&&(src[i]!=0); i++)
  {
    dest[i]=src[i];
  }
}
void umdrehen( char* str )
{
  int l;
  char puffer;
  for (l = 0; str[l]!=0; l++){}
  for (int i=0; i<l/2; i++){
    puffer=str[i];
    str[i]=str[l-i-1];
    str[l-i-1]=puffer;
  }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
  for (int i = 0; (i<zahl)&&(dest[i]!=0)&&(src[i]!=0); i++)
  {
    dest[i]=src[i];
  }
}
void umdrehen( char* str )
{
  int l;
  char puffer;
  for (l = 0; str[l]!=0; l++){}
  for (int i=0; i<l/2; i++){
    puffer=str[i];
    str[i]=str[l-i-1];
    str[l-i-1]=puffer;
  }
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",1
"#include <stdio.h>
int findIndexOfMax(int array[],int arraygroesse){
int x = -2147483648;
unsigned int z = 0;
int zaehler = 0;
for(int i = 0; i < arraygroesse; i++){
if(x <= array[i]){
x = array[i];
z = i;}}
for(int i = 0; i < arraygroesse; i++){
if(array[i]==-2147483648)
zaehler++;}
if(zaehler == arraygroesse){
z=4294967295;}
return z;
}
int main (){
int arraysize = 5;
int array[arraysize];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
for( int i = 0; i<arraysize; i++){
scanf(""%i"", &array[i]);}
unsigned int Index = 0;
while(Index != 4294967295){
Index = findIndexOfMax(array, arraysize); 
if(Index!=4294967295){
printf(""Naechstgroesstes: %i\n"", array[Index]);
array[Index] = -2147483648;}}
}","#include <stdio.h>
int findIndexOfMax(int array[],int arraygroesse){
int x = -2147483648;
unsigned int z = 0;
int zaehler = 0;
for(int i = 0; i < arraygroesse; i++){
if(x <= array[i]){
x = array[i];
z = i;}}
for(int i = 0; i < arraygroesse; i++){
if(array[i]==-2147483648)
zaehler++;}
if(zaehler == arraygroesse){
z=4294967295;}
return z;
}
int main (){
int arraysize = 5;
int array[arraysize];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
for( int i = 0; i<arraysize; i++){
scanf(""%i"", &array[i]);}
unsigned int Index = 0;
while(Index != 4294967295){
Index = findIndexOfMax(array, arraysize); 
if(Index!=4294967295){
printf(""Naechstgroesstes: %i\n"", array[Index]);
array[Index] = -2147483648;}}
}",1
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}
int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}
int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}
int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0
"#include <stdio.h>
#include <stdlib.h>
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}
void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;
    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}",0
"#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}",1
"#include <stdio.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->punkte[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    for(int i=0; i<5; i++)
    sum += p_stud->punkte[i];
    printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
    student_einlesen(&st[i]);
      for(int i=0; i<5; i++)
    student_ausgeben(&st[i]);
    return 0;
}","#include <stdio.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->punkte[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    for(int i=0; i<5; i++)
    sum += p_stud->punkte[i];
    printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
    student_einlesen(&st[i]);
      for(int i=0; i<5; i++)
    student_ausgeben(&st[i]);
    return 0;
}",1
"#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}","#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}",1
"#include <stdio.h>
int main(int argc, char* argv[]) {
    //char* str[] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""}; //zum testen
    //int agc = 4;                                              //zum testen
    for(int i= 1; i<5; i++){
    //printf(""%s\n"", str[i]);                                 //test
    }
    char string1[100]; string1[99] = '\0';
    char string2[100]; string2[99] = '\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\0';
        string2[i] = '\0';
        string3[i] = '\0';
    }
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\0'){
        laenge++;
        j++;
        }
        //printf(""i=%i - laenge=%i\n"", i, laenge);                //test
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    //buchstabenloeschen
    int j = 0;
    int length = 0;
    while(string1[j] != '\0'){
    length++;
    j++;
    }
    //printf(""length: %i\n"", length);                       //test
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
    //nur noch jeden 3ten Buchstaben verwenden
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\n"", string3);
    //string1[0] = str[1][0];                                   //test
    //printf(""%s\n"", string1);                                  //test
    //printf(""%s\n"", string2);                                  //test
    //printf(""%s\n"", string3);                                  //test
    return 0;
}","#include <stdio.h>
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; str1[i] != 0 ; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; str2[i] != 0 ; i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; str1[i] != 0 ; i++){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[i] != 0 ; i++ ){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	for(int i = 0; i < 100; i++)
	{string[i] = 0x00; string2[i] = 0x00;}
	//char x;
	for( int i = 1 ; i < argc ; i++ ){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\n"", string);
}",0
"//Hausaufgabe 7
//Aufgabe 9
#include <stdio.h>
int findIndexOfMax(int array[], int length){
  int a = INT_MIN;
  int b;
  for(int i=0; i<length; i++){
    if (array[i] >= a){
      a = array[i];
      b = i;
    }
  }
  if(array[b] == INT_MIN){
    return UINT_MAX;
  }else{
    return b;
  }
}
int main(){
  int array[5];
  printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
  for(int i=0; i<5; i++){
    scanf(""%i"", &array[i]);
  }
  for(int i=0; i<5; i++){
    int index = findIndexOfMax(array, 5);
    if(index == UINT_MAX){
      break;
    }else{
      printf(""Naechstgroesstes: %i\n"", array[index]);
      array[index] = INT_MIN;
    }
  }
}","#include <stdio.h>
int findIndexOfMax(int a[], int listsize)
{
	for(int i = 0; i < listsize; ++i)
		{
		if (i == listsize - 1)
		{
			if(a[i] == INT_MIN)
				return UINT_MAX;
			else
				return i;
		}
		for(int j = i + 1; j < listsize; ++j)
			{
			if(a[i] == INT_MIN)
			break;
			if((a[j] == INT_MIN) && (j != listsize -1))
			++j;
			if(a[i] < a[j])
			break;
			else
			{
				if (j == listsize - 1)
				{
					if(a[i] == INT_MIN)
						return UINT_MAX;
					else
						return i;
				}
			}
			}
		}
}
int main()
{
int listsize = 5;
int nummer[listsize];
printf(""Bitte geben Sie 5 ganze Zahlen ein: "");
for (int i = 0; i < listsize; ++i)
{
scanf(""%i"", &nummer[i]);
}
for (int i = 0; i < listsize; ++i)
{
int index = findIndexOfMax(nummer, listsize);
printf(""Naechstgroesstes: %i \n"", nummer[index]);
if (index == UINT_MAX)
break;
nummer[index] = INT_MIN;
} 
}",0
