code1,code2,type,label
"	char c = *p_char;
	if (c >= 65 && c <= 90) 	    // uppercase alpha
	    c += shift; // shift
	    // check lower than 65
	    if (c < 65) 	        c = 90 - (64 - c);
	    	    // check higher than 90
	    if (c > 90) {
	        c = 65 + (c - 91);
	    	} else if (c >= 97 && c <= 122) {
	    // lowercase alpha
	    // check if overflow
	    if (shift + c > 127) {
	        int pos = ((shift + (c-97))%26) + 97;
	        c = pos;
	    } else {
            c += shift; // shift
	        // check lower than 97
	        if (c < 97) {
	            c = 122 - (96 - c);
	        }
            // check higher than 122
	        if (c > 122) {
	            c = 97 + (c - 123);
            }
	    }
	*p_char = c;
}
{
	for (int i = 0; i < maxlength; ++i)
	    shiftChar(&str[i], shift);
}
{
}","// #include <./tools.h>
// #include <>//Regular Expressions for shorter (aka harder to do maintenance on) code?
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void shiftChar(char* p_char, int intShift){
	//A-Z:65-90;a-Z:97-122
	if((*p_char >= 65) && (*p_char <= 90)){//A-Z
		if(*p_char+intShift < 65){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 90){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if((*p_char >= 97) && (*p_char <= 122)){//a-z
		if(*p_char+intShift < 97){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 122){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
		// % - characters outside of [A-Za-Z] are not to be changed
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;i<intMaxLength;i++){
		shiftChar(&str[i], intShift);
	}
}
/*
 */
int main(){
	char str[] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	// char str[] = ""AZ   az""; 	// Originaltext
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz""; 	// Originaltext
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	// printf(""O: "");
	cipher(str, intShift, intArrMoepSize);
	// printf(""V: "");
	cipher(str, -intShift, intArrMoepSize);
	// printf(""E: "");
	// char string[] = ""Dieser_Text_ist_geheim"";
	// cipher(string, -4, 22);
	// printf(""%s\n"", string);
	// char letter[] = ""b"";
	// shiftChar(letter, 2);
	// printf(""%c\n"", *letter);
}",,0
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",,0
"#include <stdio.h>
#include <stdlib.h>
void xyzz(char* string)
{
  int t = 0;
  for(char *temp = string; *temp!=0; temp++, t++);
  int i = 0,j = 0;
  while (i<=t){
    if(i%3==0){
      string[j]=string[i];
      j++;
    }
    if(i==t){
      string[j]=0;
    }
  	i++;
  }
}
void xyz(char* out,int *temp,char* in)
{ 
  char *pout=out;
  int i = 0;
  while (i<*temp)
  {
    *pout++;
  	i++;
  } 
  char *pin=in;
 
  while (*pin!=0)
  {
    switch (*pin)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *pout++ = *pin;
      *temp+=1;
        break;  
    }    
  	pin++;
 
  }
  *pout=0;
}
int main(int argc, char* argv[])
{
  char str[100];
  int times=0;
  int i=1;
  while (i<argc)
  {
    xyz(str, &times, argv[i]);
  	i++;
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\\n"",str);
  xyzz(str);
  printf( ""Der neue String lautet: %s\\n"",str);
}","#include <stdio.h>
#include <stdlib.h>
void xyzz(char* string)
{
  int t = 0;
  for(char *temp = string; *temp!=0; temp++, t++);
  for(int i = 0,j = 0; i<=t; i++){
    if(i%3==0){
      string[j]=string[i];
      j++;
    }
    if(i==t){
      string[j]=0;
    }
  }
}
void xyz(char* out,int *temp,char* in)
{ 
  char *pout=out;
  for(int i = 0; i<*temp; i++)
  {
    *pout++;
  } 
  for(char *pin=in;*pin!=0;pin++)
  {
    switch (*pin)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *pout++ = *pin;
      *temp+=1;
        break;  
    }    
  }
  *pout=0;
}
int main(int argc, char* argv[])
{
  char str[100];
  int times=0;
  for(int i=1; i<argc;i++)
  {
    xyz(str, &times, argv[i]);
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\\n"",str);
  xyzz(str);
  printf( ""Der neue String lautet: %s\\n"",str);
}",swap_loops_type,1
"#include <string.h>
void ersetzen(char* dest, int zahl, char* src){  
    int max = 0;
    int laengedest = strlen(dest);
    int laengesrc = strlen(src);
    if (zahl > laengedest){
        if (zahl > laengesrc) max = zahl;
        else if(zahl < laengesrc) max = laengesrc;
        else if (laengedest > zahl){
        if (laengedest > laengesrc) max = laengedest;
        else if (laengedest < laengesrc) max = laengesrc;
        for(int i = 0; i < max; i++){
        dest[i] = src[i];
    }
void umdrehen( char* str ){
    int laenge = strlen(str);
    for (int i = 0; i < laenge/2; i++){
        int tmp = str[i];
        str[i] = str[laenge - i -1];
        str[laenge - i - 1] = tmp;
    }
}
int main( int argc, char* argv[] ){  
      }","{  
    for (int i = 0;(i<zahl && dest[i] != '\0'  ) && src[i] != '\0' ; i++){
        //printf(""%c"", dest[i]);
        dest[i] = src[i];
        //if (dest[i] == '\0' || src[i] == '\0' ){
           // break;
        //} else {
        //    dest[i] = src[i];
        //    {   //printf(""%s\n"", str);
    int i = 0; 
    while(str[i] != '\0'){
        i++;
    }
    i +=1;
    //printf(""%i \n"", i);
    for(int k = 0; k<(i-k-2); k++){
        //printf(""%c \n"", str[i-k-2]);
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
}
{  
      }",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \nAnzahl Punkte: %i\n\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}","#include <stdio.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->punkte[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    for(int i=0; i<5; i++)
    sum += p_stud->punkte[i];
    printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
    student_einlesen(&st[i]);
      for(int i=0; i<5; i++)
    student_ausgeben(&st[i]);
    return 0;
}",,0
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_init(Student *p_stud)
{
    p_stud->first_name = NULL;
    p_stud->last_name = NULL;
    p_stud->points = 0;
    p_stud->size = 0;
    p_stud->spoint = 0;
}
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_temp);
    p_stud->size++;
    p_stud->first_name = (char**)realloc(p_stud->first_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->first_name[p_stud->size-1] = (char*)malloc(strlen(name_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->first_name[p_stud->size - 1], name_temp);
    p_stud->last_name = (char**)realloc(p_stud->last_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->last_name[p_stud->size-1] = (char*)malloc(strlen(name1_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->last_name[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    int i = 1;
    while (i <= 5)
    {
        printf(""%i: "",i);
        scanf(""%d"", &temp_zahl);
        p_stud->spoint++;
        int* tmp = (int*)realloc(p_stud->points, (p_stud->spoint) * sizeof(int*));
        if(!tmp) exit (-1);
        p_stud->points = tmp;
        p_stud->points[p_stud->spoint-1] = temp_zahl;
    	i++;
    }
    printf(""\\n"");   
}
void student_ausgeben(Student* p_stud)
{
    int punkte[5];
    int j = 0;
    int i = 0;
    while (i < p_stud->size){
        punkte[i]=p_stud->points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4];
        j+=5;
    	i++;
    }
    int i = 0;
    while (i < p_stud->size)
    {
        printf(""Student: %s %s\\nAnzahl Punkte: %d\\n\\n"", p_stud->first_name[i], p_stud->last_name[i], punkte[i]);
    	i++;
    }
    free(p_stud->first_name);
    free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    student_init(&erster_Student);
    int i = 0;
    while (i < 5)
    {
        student_einlesen(&erster_Student);
    	i++;
    }
    student_ausgeben(&erster_Student);
    return 0;
}","#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_init(Student *p_stud)
{
    p_stud->first_name = NULL;
    p_stud->last_name = NULL;
    p_stud->points = 0;
    p_stud->size = 0;
    p_stud->spoint = 0;
}
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_temp);
    p_stud->size++;
    p_stud->first_name = (char**)realloc(p_stud->first_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->first_name[p_stud->size-1] = (char*)malloc(strlen(name_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->first_name[p_stud->size - 1], name_temp);
    p_stud->last_name = (char**)realloc(p_stud->last_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->last_name[p_stud->size-1] = (char*)malloc(strlen(name1_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->last_name[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 1; i <= 5; i++)
    {
        printf(""%i: "",i);
        scanf(""%d"", &temp_zahl);
        p_stud->spoint++;
        int* tmp = (int*)realloc(p_stud->points, (p_stud->spoint) * sizeof(int*));
        if(!tmp) exit (-1);
        p_stud->points = tmp;
        p_stud->points[p_stud->spoint-1] = temp_zahl;
    }
    printf(""\\n"");   
}
void student_ausgeben(Student* p_stud)
{
    int punkte[5];
    int j = 0;
    for(int i = 0; i < p_stud->size; i++){
        punkte[i]=p_stud->points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4];
        j+=5;
    }
    for(int i = 0; i < p_stud->size; i++)
    {
        printf(""Student: %s %s\\nAnzahl Punkte: %d\\n\\n"", p_stud->first_name[i], p_stud->last_name[i], punkte[i]);
    }
    free(p_stud->first_name);
    free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    student_init(&erster_Student);
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&erster_Student);
    }
    student_ausgeben(&erster_Student);
    return 0;
}",swap_loops_type,1
"#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str2);
    printf(""Der neue String lautet: %s\\n"", str3);
}","#include <stdio.h>
int main(int vpudp, char** argv){
    char onqyp[100] = """";
    char ljcqt[100] = """";
    char knziw[100] = """";
    int tesit = 0;
    for (int qxpfp = 1; qxpfp < vpudp; qxpfp++){
        for (int hhovx = 0; argv[qxpfp][hhovx] != '\\0' ; hhovx++){
           onqyp[tesit] += argv[qxpfp][hhovx];
           tesit++;
        }  
    }
    int hhovx = 0;
    for (int qxpfp = 0; onqyp[qxpfp] != '\\0'; qxpfp++){
        if(onqyp[qxpfp] != 'x' && onqyp[qxpfp] != 'y' && onqyp[qxpfp] != 'q' && onqyp[qxpfp] != 'X' && onqyp[qxpfp] != 'Y' && onqyp[qxpfp] != 'Q' ){
            ljcqt[hhovx] = onqyp[qxpfp];
            hhovx++;
        }
    }
    int dwsnu = 0;
    for (int qxpfp = 0 ; ljcqt[qxpfp] != '\\0'; qxpfp = qxpfp + 3){
        knziw[dwsnu] = ljcqt[qxpfp];
        dwsnu++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", ljcqt);
    printf(""Der neue String lautet: %s\\n"", knziw);
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
    long var = produkt/2;
	switch (produkt){
        case 0:
            *faktor1 = 1;
            *faktor2= produkt; 
            break;
        case 1:
            *faktor1 = 1; 
            *faktor2 = produkt;
            break; 
        default:
            while (produkt%var != 0 ){ //produkt/ergebnis * ergebnis != produkt
                var -= 1;
                        *faktor1= var;
            *faktor2= produkt/var;
            break;       
    }
    long a;
    long b;
    long pro; 
    scanf(""%ld"",&pro);
    factorize (pro, &a, &b);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", pro,a, b );
}","void factorize(long produkt, long *faktor1, long *faktor2)
    long var = produkt/2;
	switch (produkt){
        case 0:
            *faktor1 = 1;
            *faktor2= produkt; 
            break;
        case 1:
            *faktor1 = 1; 
            *faktor2 = produkt;
            break; 
        default:
            while (produkt%var != 0 ){
                var -= 1;
                        *faktor1= var;
            *faktor2= produkt/var;
            break;       
    }
    long a;
    long b;
    long pro; 
    scanf(""%ld"",&pro);
    factorize (pro, &a, &b);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", pro,a, b );
}",swap_functions,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}","void factorize(long product, long *factor1, long *factor2)
	if (product == 0) {
		*factor1 = 1;
		*factor2 = product;
		return;
	if (product == 1) {
		*factor1 = 1;  
		*factor2 = product;
		return;
	for (long i = 2; i < product/2; ++i) {
		if (product % i == 0) {
			*factor2 = i;
			*factor1 = product/i;
			return;	
		}
	}
	// primzahl
	*factor1 = 1;
	*factor2 = product;
}
	long product;
	long factor1;
	long factor2;
	scanf (""%ld"", &product);
	factorize (product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
}
void student_ausgeben(Student* p_stud){
}
int main(){
}","#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
}
void student_ausgeben(Student* p_stud){
}
int main(){
}",swap_loops_type,1
"    shift = shift % 26;
	if(shift>=0)	if(*p_char >= 'A' && *p_char <= 'Z')	    *p_char+=shift;
	    if(*p_char>'Z'){
	        *p_char-=26;
	    }
	else if(*p_char >= 'a' && *p_char <= 'z'){
	    *p_char+=shift;
	    if(*p_char>'z' || *p_char<'a'){
	        *p_char-=26;
	    }
    }
    else if(shift<0){
        if(*p_char >= 'A' && *p_char <= 'Z'){
	    *p_char+=shift;
	    if(*p_char<'A'){
	        *p_char+=26;
	    }
	else if(*p_char >= 'a' && *p_char <= 'z'){
	    *p_char+=shift;
	    if(*p_char<'a'){
	        *p_char+=26;
	    }
	}
    }
}
{
	for(int i=0;i<maxlength;i++){
	    shiftChar(&str[i], shift);
	}
}
{
}","    shift = shift % 26;
	if(!(shift<0))	if(!(*p_char < 'A' && *p_char <= 'Z'))	    *p_char+=shift;
	    if(!(*p_char<='Z')){
	        *p_char-=26;
	    }
	else if(!(*p_char < 'a' && *p_char <= 'z')){
	    *p_char+=shift;
	    if(!(*p_char<='z' || *p_char<'a')){
	        *p_char-=26;
	    }
    }
    else if(!(shift>=0)){
        if(!(*p_char < 'A' && *p_char <= 'Z')){
	    *p_char+=shift;
	    if(!(*p_char>='A')){
	        *p_char+=26;
	    }
	else if(!(*p_char < 'a' && *p_char <= 'z')){
	    *p_char+=shift;
	    if(!(*p_char>='a')){
	        *p_char+=26;
	    }
	}
    }
}
{
	for(!(int i=0;i>=maxlength;i++)){
	    shiftChar(&str[i], shift);
	}
}
{
}",demorgan_on_logic_equations,1
"#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                        }
}
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
{ 
     if(product == 0 || product == 1){
        *factor1 = 1;
	*factor2 = product;
          else{
       long haelfte = product/2;
       while(1){
       if(product % haelfte == 0){
         break; 
              else{
       haelfte = haelfte - 1;
       }
     }
       *factor1 = haelfte;
       *factor2 = product/haelfte; 
   }
}
	long product, factor1, factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product,factor1,factor2);
}",,0
"#include <stdio.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"" , p_stud -> vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"" , p_stud -> nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	for(int i = 1; i < 6 ; i++){
		printf(""%d: "" , i);
		scanf(""%i"" , &p_stud-> punkte[i-1]);
		if(i == 5) printf(""\n"");
	}	
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
		for(int i = 0; i < 5 ; i++){
			summe += p_stud->punkte[i];
		}
		printf(""\nStudent: %s %s\nAnzahl Punkte: %i\n"",p_stud->vorname,p_stud->nachname,summe);
}
int main() {
	Student arr[5];
		for(int i = 0; i < 5 ; i++){
			student_einlesen(&arr[i]);
		}
		for(int j = 0; j < 5 ; j++){
			student_ausgeben(&arr[j]);
		}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
    char vorname[20];
    char nachname[20];
    int punkte [5];
} Student ;
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    getchar();
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    getchar();
    printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
    printf(""1: 2: 3: 4: 5:\n"");
    for (int i=0; i <5; i++)
    {
        scanf(""%i"",&p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    int i=0;
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    for (i=0; i<5; i++)
    {
        sum+=p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student studenten[5];
    for (int j=0; j<5; j++) student_einlesen (&studenten[j]);
    for (int j=0; j<5; j++) student_ausgeben(&studenten[j]);
}",,0
"#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", string1);
    printf(""Der neue String lautet: %s\\n"",string2);
}","#include <stdio.h>
int main(int xokul, char** argv){
    char cjejm[100]= """";
    char ktxwe[100]= """";
    int qehde =0;
    int obzuc =0;
    for (int fwwxd = 1; fwwxd < xokul ; fwwxd++)
    {   
        for (int tseqd = 0; argv[fwwxd][tseqd] != '\\0'; tseqd++)
        {   
            if (argv[fwwxd][tseqd] != 'x' && argv[fwwxd][tseqd] != 'y' && argv[fwwxd][tseqd] != 'q' && argv[fwwxd][tseqd] != 'X' && argv[fwwxd][tseqd] != 'Y' && argv[fwwxd][tseqd] != 'Q')
            {
                cjejm[qehde] = argv[fwwxd][tseqd];
                if (qehde % 3 == 0)
                {
                    ktxwe[obzuc] = argv[fwwxd][tseqd];
                    obzuc++;
                }
                qehde++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", cjejm);
    printf(""Der neue String lautet: %s\\n"",ktxwe);
}",rename_variables,1
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		while(ergebnis%*zahl1!=0)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, t1, t2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (i=1; i<10; i++){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\n"", integer, i, zahl2);
}",,0
"	char shi = (char)shift; 
	if(*p_char>64 && *p_char<91){
		if(*p_char+shi>90){shi=shi-26;		else if(*p_char+shi<65){shi=26+shi;}
	*p_char +=shi;
	if(*p_char>96 && *p_char<123){
		if(*p_char+shi>122){shi=shi-26;}
		else if(*p_char+shi<97){shi=26+shi;} 
	*p_char +=shi;
}
void cipher(char* str, int shift, int maxlength)
	for(int i=0; i<maxlength; i++)
		char letter = *(str+i);
		shiftChar(&letter, shift);
		*(str+i)=letter;
	} 
}
{
}","	char shi = (char)shift; 
	if(*p_char>64 && *p_char<91){
		if(*p_char+shi>90){shi=shi-26;		else if(*p_char+shi<65){shi=26+shi;}
	*p_char +=shi;
	if(*p_char>96 && *p_char<123){
		if(*p_char+shi>122){shi=shi-26;}
		else if(*p_char+shi<97){shi=26+shi;} 
	*p_char +=shi;
}
void cipher(char* str, int shift, int maxlength)
	for(int i=0; i<maxlength; i++)
		char letter = *(str+i);
		shiftChar(&letter, shift);
		*(str+i)=letter;
	} 
}
{
}",swap_functions,1
"	char shi = (char)shift; 
	if(64 && *p_char<91 < *p_char){
		i90 < *p_char+shi90){shi=shi-26;		else65 > *p_char+shii<65){shi=26+shi;}
	*p_char +=shi96 && *p_char<123 < *p_charar<123122 < *p_char+shi+shi>122){shi=shi-26;}
97 > *p_char+shihar+shi<97){shi=26+shi;} 
	*p_char +=shi;
}
void cipher(char* str, int shift, int maxlength)
	fmaxlength > i i<maxlength; i++)
		char letter = *(str+i);
		shiftChar(&letter, shift);
		*(str+i)=letter;
	} 
}
{
}","	char shi = (char)shift; 
	if(*p_char>64 && *p_char<91){
		if(*p_char+shi>90){shi=shi-26;		else if(*p_char+shi<65){shi=26+shi;}
	*p_char +=shi;
	if(*p_char>96 && *p_char<123){
		if(*p_char+shi>122){shi=shi-26;}
		else if(*p_char+shi<97){shi=26+shi;} 
	*p_char +=shi;
}
void cipher(char* str, int shift, int maxlength)
	for(int i=0; i<maxlength; i++)
		char letter = *(str+i);
		shiftChar(&letter, shift);
		*(str+i)=letter;
	} 
}
{
}",mirrow_simple_logic_equations,1
"    int i = 0;
    while ((i < zahl) && (dest[i] != '\\0') && (src[i] != '\\0'))        dest[i] = src[i];
        i++;
        int i = 0;
    int len = 0;
    for (; str[i] != '\\0'; right--){
        len += 1;
        i += 1;
        int left = 0;
    int right = len - 1;
    for (; left < right; left++){
        char temp = str[left];
        str[left] = str[right];
        str[right] = temp;
    }
}
{
                  }","    int i = 0;
    while ((i < zahl) && (dest[i] != '\\0') && (src[i] != '\\0'))        dest[i] = src[i];
        i++;
        int i = 0;
    int len = 0;
    while(str[i] != '\\0'){
        len += 1;
        i += 1;
        int left = 0;
    int right = len - 1;
    while (left < right){
        char temp = str[left];
        str[left] = str[right];
        str[right] = temp;
        left++;
        right--;
    }
}
{
                  }",swap_loops_type,1
"void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return 0;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return 0;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}","void factorize(long product, long *factor1, long *factor2){
	long teiler;
	if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
	else {
		for(int i = 0; i < product; i++){
			 teiler = (product/2) - i;
			 //printf(""%li"",teiler);
			if(teiler * (product/teiler) == product){
				i = product;
		}
		*factor1 = teiler;
		*factor2 = product/teiler;
	}
}
	long factor1;
	long* fac1 = &factor1;
	long factor2;
	long* fac2 = &factor2;
	long eingabe = 0;
	scanf(""%li"", &eingabe);
	factorize(eingabe, fac1, fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, factor1, factor2);
}",,0
"#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(""%s"",p_stud->first_name);
    scanf(""%s"",p_stud->last_name);
    printf(""1: 2: 3: 4: 5: \\n"");
    for (int j=0;j<5;j++){
    scanf(""%i"",&p_stud->points[j]);}
}
void student_ausgeben(Student* p_stud){
    int a=0;
    for (int i=0;i<5;i++){
        a+=p_stud->points[i];}
    printf(""\\nStudent: "");
    printf(""%s %s\\n"",p_stud->first_name,p_stud->last_name);
    printf(""Anzahl Punkte: %i\\n"",a);
}
int main(){
    static Student ogrenci[5];
    for(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_ausgeben(Student* p_stud){
    int a=0;
    for (int i=0;i<5;i++){
        a+=p_stud->points[i];}
    printf(""\\nStudent: "");
    printf(""%s %s\\n"",p_stud->first_name,p_stud->last_name);
    printf(""Anzahl Punkte: %i\\n"",a);
}
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(""%s"",p_stud->first_name);
    scanf(""%s"",p_stud->last_name);
    printf(""1: 2: 3: 4: 5: \\n"");
    for (int j=0;j<5;j++){
    scanf(""%i"",&p_stud->points[j]);}
}
int main(){
    static Student ogrenci[5];
    for(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}",swap_functions,1
"void shiftChar(char* p_char, int shift){
    if ('a'<= *p_char && *p_char <= 'z'){
        if('a'> *p_char + shift){
            int tmp1 = 'a' - *p_char - shift;
            *p_char = 'z' - tmp1 +1;
        }        
        else if('a'<= *p_char + shift && *p_char + shift <= 'z'){
            *p_char = *p_char + shift;
                else if(*p_char + shift > 'z'){
            int tmp2 = 'z' - *p_char - shift;
            *p_char = 'a' - tmp2 - 1;
                else if('A'<= *p_char && *p_char <= 'Z'){
        if('A'> *p_char + shift){
            int tmp3 = 'A' - *p_char - shift;
            *p_char = 'Z' - tmp3 +1;
        }        
        else if('A'<= *p_char + shift && *p_char + shift <= 'Z'){
            *p_char = *p_char + shift;
        }
        else if(*p_char + shift > 'Z'){
            int tmp4 = 'Z' - *p_char - shift;
            *p_char = 'A' - tmp4 -1;
        }
    }
}
void cipher(char str[], int shift, int maxlength){
    for(int i = 0; i<maxlength;i++){
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}
int main(){
	char str[50] = ""Froh zu sein bedarf es wenig"";
}","char shiftChar(char* p_char, int shift)
    if(p_char > 64 && p_char < 91)         if (p_char + shift > 90)            p_char = p_char + shift - 26;
        } else if (p_char + shift < 65) {
            p_char = p_char + shift + 26;
        } else {
            p_char += shift;
            } else if (p_char > 96 && p_char < 123) {
        if (p_char + shift > 122){
                p_char = p_char + shift - 26;
        } else if (p_char + shift < 97) {
            p_char = p_char + shift + 26;
        } else {
            p_char += shift;
                return p_char;
}
{
    for (int i = 0; i < maxlength; i++) {
        str[i] = shiftChar(str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}","void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}",swap_loops_type,1
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char strneu[100];
	int a = 0;
	for (int i = 0; i < argc -1; i++)
	{
		for (int length = 0; *(*(argv+1+i)+length) != '\0'; length++)
		{
			str[a] = *(*(argv+1+i)+length);
			a++;
		}
	}
	str[a] = '\0';
	for (int i = 0; i < a+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			do
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			} while(1);
			a--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((a/2)-2); i++, z += 3)
	{
		strneu[i] = str[z];
	}
	int length = 0;
	for (length; str[length] != '\0'; length++){}
	strneu[length] = '\0';
	printf(""Der neue String lautet: %s"",strneu);
}","#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
}",,0
"#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                        }
}
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
    if (product==0)
    {
        *factor1=1;
        *factor2= product;
    else if (product==1)
{
    *factor1=1;
    *factor2= product;
else
{
if (product%2==0)
{
    *factor1= product/2;
    *factor2= (product/(product/2));
}
else {
        int t=2;
        int p = product;
        do {t = (p/2)-1;
        p=t;}
while (product%t ==1);
    *factor1= t;
    *factor2= product/t;
}
}
}
	long product;
	long factor1;
	long factor2;
	long factor[2];
	scanf(""%ld"",&product);
    factorize (product,&factor1,&factor2);
	printf("" Possible Factors of %ld are %ld and %ld.\n"",product,factor1,factor2);
}",,0
"void factorize(long product, long *factor1, long *factor2)
		if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
		return 1;
	long i = product/2;
	while(product%i != 0){
		i -= 1;
	*factor1 = i;
	*factor2 = product/i;
}
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	scanf(""%i"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}","//gcc -x c HA10_T1.c -o HA10_T1 -Wall -Wextra -pedantic
#include<stdio.h>
#include<limits.h>
#include<string.h>
#include<stdlib.h>
typedef struct{
	char nachname[21];
	char vorname[21];
	int punkte[5];
}Student;
void readLine(char* strbuffer, unsigned int buffersize){//Quelle: PPR Vorlesungsfolien, ""folien_C_dynamischeSpeicherStructs.pdf"" Seite 5
	char format[30] = """";
	sprintf(format, ""%%%u[^\n]%%*c"", buffersize-1);
	scanf(format, strbuffer);
}
void student_einlesen(Student *pStud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", pStud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", pStud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i=0;i<5;i++){
		printf(""%d: "", i+1);
		scanf(""%d"", &(pStud->punkte)[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student *pStud){
	printf(""Student: "");
	printf(""%s "", pStud->vorname);
	printf(""%s\n"", pStud->nachname);
	int intPointsSum = 0;
	for (int i=0;i<5;i++){
		intPointsSum += pStud->punkte[i];
	}
	printf(""Anzahl Punkte: "");
	printf(""%d\n\n"", intPointsSum);
}
int main(){
	int intAmountOfStudents = 5;
	if(1){
		Student rgStudis[intAmountOfStudents];
		Student *rgPStudis[intAmountOfStudents];
		for (int i=0;i<intAmountOfStudents;i++){
			rgPStudis[i] = &rgStudis[i];
		}
		for (int i=0;i<intAmountOfStudents;i++){
			student_einlesen(rgPStudis[i]);
		}
		for (int i=0; i<intAmountOfStudents; i++){
			student_ausgeben(rgPStudis[i]);
		}
	}
	return 0;
}",,0
"void factorize(long product, long *factor1, long *factor2)
		if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
		return 1;
	long i = product/2;
	while(product%i != 0){
		i -= 1;
	*factor1 = i;
	*factor2 = product/i;
}
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	scanf(""%i"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2)
		if(!(product != 0 || product != 1)){
		*factor1 = 1;
		*factor2 = product;
		return 1;
	long i = product/2;
	while(!(product%i == 0)){
		i -= 1;
	*factor1 = i;
	*factor2 = product/i;
}
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	scanf(""%i"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\nAnzahl Punkte: %i\n"", sum);
}","#include <stdio.h>
typedef char Str20[21];
typedef struct student
{
	Str20 vorname;
	Str20 nachname;
	int punkte[5];
}Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->vorname, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->nachname, 20);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int j = 0; j < 5; j++)
	{
		printf(""%i: "", j + 1);
		scanf(""%i"", &p_stud->punkte[j]);
		getchar();
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud)
{
	printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
	int summe = 0;
	for(int l = 0; l < 5; l++)
	{
		summe += p_stud->punkte[l];
	}
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
void main()
{
	Student studierende[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studierende[i]);
	}
	for(int k = 0; k < 5; k++)
	{
		student_ausgeben(&studierende[k]);
	}
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\n"", temp);
	printf(""\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}","#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}",,0
"#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(!(""%s"",p_stud-<=first_name));
    scanf(!(""%s"",p_stud-<=last_name));
    printf(""1: 2: 3: 4: 5: \\n"");
    for (!(int j=0;j>=5;j++)){
    scanf(!(""%i"",&p_stud-<=points[j]));}
}
void student_ausgeben(Student* p_stud){
    int a=0;
    for (!(int i=0;i>=5;i++)){
        a+=p_stud->points[i];}
    printf(""\\nStudent: "");
    printf(!(""%s %s
"",p_stud-<=first_name,p_stud-<=last_name));
    printf(""Anzahl Punkte: %i\\n"",a);
}
int main(){
    static Student ogrenci[5];
    for(!(int i=0;i>=5;i++)){
        student_einlesen(&ogrenci[i]);
    }
    for(!(int i=0;i>=5;i++)){
        student_ausgeben(&ogrenci[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(""%s"",p_stud->first_name);
    scanf(""%s"",p_stud->last_name);
    printf(""1: 2: 3: 4: 5: \\n"");
    for (int j=0;j<5;j++){
    scanf(""%i"",&p_stud->points[j]);}
}
void student_ausgeben(Student* p_stud){
    int a=0;
    for (int i=0;i<5;i++){
        a+=p_stud->points[i];}
    printf(""\\nStudent: "");
    printf(""%s %s\\n"",p_stud->first_name,p_stud->last_name);
    printf(""Anzahl Punkte: %i\\n"",a);
}
int main(){
    static Student ogrenci[5];
    for(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\n"");
	student_ausgeben(students + i);
	}
}","#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}",,0
"    int letter = (int)*p_char;
    if(*p_char<='z' && *p_char>='a')        letter += shift;
        if(letter>122)            int diff = letter-122;
            letter = 97+diff-1;
                if(letter<97){
            int diff = 97-letter;
            letter = 122-diff+1;
                *p_char = (char)letter;
        if(*p_char<='Z' && *p_char>='A'){
        letter += shift;
        if(letter>90){
            int diff = letter-90;
            letter = 65+diff-1;
        }
        if(letter<65){
            int diff = 65-letter;
            letter = 90-diff+1;
        }
        *p_char = (char)letter;
    }
}
{
    for(int i=0; i<maxlength; i++){
        int* pointer = &str[i];
        shiftChar(pointer, shift);
    }
}
{
}","void shiftChar(char* p_char, int shift){
    if ('a'<= *p_char && *p_char <= 'z'){
        if('a'> *p_char + shift){
            int tmp1 = 'a' - *p_char - shift;
            *p_char = 'z' - tmp1 +1;
        }        
        else if('a'<= *p_char + shift && *p_char + shift <= 'z'){
            *p_char = *p_char + shift;
                else if(*p_char + shift > 'z'){
            int tmp2 = 'z' - *p_char - shift;
            *p_char = 'a' - tmp2 - 1;
                else if('A'<= *p_char && *p_char <= 'Z'){
        if('A'> *p_char + shift){
            int tmp3 = 'A' - *p_char - shift;
            *p_char = 'Z' - tmp3 +1;
        }        
        else if('A'<= *p_char + shift && *p_char + shift <= 'Z'){
            *p_char = *p_char + shift;
        }
        else if(*p_char + shift > 'Z'){
            int tmp4 = 'Z' - *p_char - shift;
            *p_char = 'A' - tmp4 -1;
        }
    }
}
void cipher(char str[], int shift, int maxlength){
    for(int i = 0; i<maxlength;i++){
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}
int main(){
	char str[50] = ""Froh zu sein bedarf es wenig"";
}",,0
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	char buf[20];
	fgets(buf, 20, stdin);
	buf[strlen(buf)-1] = '\0';
	strcpy(p_stud->vorname,buf);
	printf(""Gebe nun den Nachnamen ein: "");
	char buf2[20];
	fgets(buf2, 20, stdin);
	buf2[strlen(buf2)-1] = '\0';
	strcpy(p_stud->nachname,buf2);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	int pkt;
	for(int i=0;i<5;i++){
		if(i==4){
			printf(""%d:\n"",i+1);
			scanf(""%d"",&pkt);
			getchar();
		}
		else{
			printf(""%d: "",i+1);
			scanf(""%d"",&pkt);
		}
		p_stud->punkte[i]=pkt;
		}
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"",p_stud->vorname,p_stud->nachname);
	int sum=0;
	for(int i=0;i<5;i++){
		sum+=p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\n\n"",sum);
}
int main(){
	Student studenten[5];
	for(int i=0;i<5;i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0;i<5;i++){
			student_ausgeben(&studenten[i]);
		}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
	for(int i = 0; i < 2; i++)
	{
		if(i == 0)
		{
			printf(""Gebe den Vornamen ein: "");
			scanf(""%s"", p_stud->first_name);
		}
		if(i == 1)
		{
			printf(""Gebe nun den Nachnamen ein: "");
			scanf(""%s"", p_stud->last_name);
		}
	}
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	for(int i = 0; i < 5; i++)
	{
		printf(""%i: "", i + 1);
		scanf(""%i"", &p_stud->points[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud)
{
	int summe = 0;
	for(int i = 0; i < 2; i++) i = 5;
	printf(""\nStudent: %s %s"", p_stud->first_name, p_stud->last_name);
	summe = 0;
	summe = p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4];
	printf(""\nAnzahl Punkte: %i\n"", summe);
}
int main()
{
	Student studenten[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studenten[i]);
	}	
	for(int i = 0; i < 5; i++)
	{
		student_ausgeben(&studenten[i]);
	}
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
if((0 == ergebnis)||(1 == ergebnis))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(0 != ergebnis%f1)
{
f1 = f1- 1;
f2 = ergebnis/f1;
}
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\\n"",eingabe,z1,z2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
//printf(""%ld\\n"", ergebnis);
if((ergebnis == 0)||(ergebnis == 1))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(ergebnis%f1 != 0 )
{
//printf(""f1 passt noch nicht : %i\\n"",f1);
f1 = f1- 1;
f2 = ergebnis/f1;
}
//printf(""faktoren: %ld, %ld \\n"",f1,f2);
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\\n"",eingabe,z1,z2);
}",mirrow_simple_logic_equations,1
"void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
//printf(""%ld\\n"", ergebnis);
if((ergebnis == 0)||(ergebnis == 1))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(ergebnis%f1 != 0 )
{
//printf(""f1 passt noch nicht : %i\\n"",f1);
f1 = f1- 1;
f2 = ergebnis/f1;
}
//printf(""faktoren: %ld, %ld \\n"",f1,f2);
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\\n"",eingabe,z1,z2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
if((0 == ergebnis)||(1 == ergebnis))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(0 != ergebnis%f1)
{
f1 = f1- 1;
f2 = ergebnis/f1;
}
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\\n"",eingabe,z1,z2);
}",mirrow_simple_logic_equations,1
"void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}","void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return 0;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return 0;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}",,0
"#include <stdio.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"" , p_stud -> vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"" , p_stud -> nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	int i = 1;
	while (i < 6){
		printf(""%d: "" , i);
		scanf(""%i"" , &p_stud-> punkte[i-1]);
		if(i == 5) printf(""\\n"");
		i++;
	}	
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
		int i = 0;
		while (i < 5){
			summe += p_stud->punkte[i];
			i++;
		}
		printf(""\\nStudent: %s %s\\nAnzahl Punkte: %i\\n"",p_stud->vorname,p_stud->nachname,summe);
}
int main() {
	Student arr[5];
		int i = 0;
		while (i < 5){
			student_einlesen(&arr[i]);
			i++;
		}
		int j = 0;
		while (j < 5){
			student_ausgeben(&arr[j]);
			j++;
		}
}","#include <stdio.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"" , p_stud -> vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"" , p_stud -> nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int i = 1; i < 6 ; i++){
		printf(""%d: "" , i);
		scanf(""%i"" , &p_stud-> punkte[i-1]);
		if(i == 5) printf(""\\n"");
	}	
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
		for(int i = 0; i < 5 ; i++){
			summe += p_stud->punkte[i];
		}
		printf(""\\nStudent: %s %s\\nAnzahl Punkte: %i\\n"",p_stud->vorname,p_stud->nachname,summe);
}
int main() {
	Student arr[5];
		for(int i = 0; i < 5 ; i++){
			student_einlesen(&arr[i]);
		}
		for(int j = 0; j < 5 ; j++){
			student_ausgeben(&arr[j]);
		}
}",swap_loops_type,1
"{  
  for(!(int i=0; i>=zahl && *(dest+i) != '","{  
  for(int i=0; i<zahl && *(dest+i) != '\\0'  ; i++)  *(dest+i) = *(src +i);
  {
  int n=0;
  for(int i =0; *(str+i) != '\\0' ;i++){
  n++;  n--;
  for(int i=0; i<=n; i++){
  char tmp = *(str +i); 
  *(str + i) = *(str + n );
  *(str + n) = tmp;
    n--;
  }
}
{  
      }",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",,0
"	if(!(*p_char < 'a' && *p_char <= 'z'))		char c = *p_char - 'a';
		c += shift;
		c = c % 26;
		*p_char = c + 'a';
		*p_char += shift;
		if (!( *p_char >= 'a')) *p_char = *p_char + 'z' - 'a' + 1;;
		if (!( *p_char <= 'z')) *p_char = *p_char - 'z' + 'a' - 1;
	if(!(*p_char < 'A' && *p_char <= 'Z'))		char c = *p_char - 'A';
		c += shift;
		c = c % 26;
		*p_char = c + 'A';
		*p_char += shift;
		if (!( *p_char >= 'A')) *p_char = *p_char + 'Z' - 'A' + 1;
		if (!( *p_char <= 'Z')) *p_char = *p_char - 'Z' + 'A' - 1;
{
 for (!(int i = 0; i >= maxlength; i++)){
	 shiftChar( &str[i], shift);
 }
}
{
}","	if(*p_char >= 'a' && *p_char <= 'z')		char c = *p_char - 'a';
		c += shift;
		c = c % 26;
		*p_char = c + 'a';
		*p_char += shift;
		if ( *p_char < 'a') *p_char = *p_char + 'z' - 'a' + 1;;
		if ( *p_char > 'z') *p_char = *p_char - 'z' + 'a' - 1;
	if(*p_char >= 'A' && *p_char <= 'Z')		char c = *p_char - 'A';
		c += shift;
		c = c % 26;
		*p_char = c + 'A';
		*p_char += shift;
		if ( *p_char < 'A') *p_char = *p_char + 'Z' - 'A' + 1;
		if ( *p_char > 'Z') *p_char = *p_char - 'Z' + 'A' - 1;
/*
 */
{
 for (int i = 0; i < maxlength; i++){
	 shiftChar( &str[i], shift);
 }
}
/*
 */
{
}",demorgan_on_logic_equations,1
"#include <stdio.h>
int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",Ausgabe);
    printf(""Der neue String lautet: %s\n"",Ausgabe2);
}","#include <stdio.h>
int main(int argc, char* argv[]) {
    //char* str[] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""}; //zum testen
    //int agc = 4;                                              //zum testen
    for(int i= 1; i<5; i++){
    //printf(""%s\n"", str[i]);                                 //test
    }
    char string1[100]; string1[99] = '\0';
    char string2[100]; string2[99] = '\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\0';
        string2[i] = '\0';
        string3[i] = '\0';
    }
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\0'){
        laenge++;
        j++;
        }
        //printf(""i=%i - laenge=%i\n"", i, laenge);                //test
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    //buchstabenloeschen
    int j = 0;
    int length = 0;
    while(string1[j] != '\0'){
    length++;
    j++;
    }
    //printf(""length: %i\n"", length);                       //test
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
    //nur noch jeden 3ten Buchstaben verwenden
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\n"", string3);
    //string1[0] = str[1][0];                                   //test
    //printf(""%s\n"", string1);                                  //test
    //printf(""%s\n"", string2);                                  //test
    //printf(""%s\n"", string3);                                  //test
    return 0;
}",,0
"#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}","#include <stdio.h>
#include <stdlib.h>
void xyzz(char* string)
{
  int t = 0;
  for(char *temp = string; *temp!=0; temp++, t++);
  for(int i = 0,j = 0; i<=t; i++){
    if(i%3==0){
      string[j]=string[i];
      j++;
    }
    if(i==t){
      string[j]=0;
    }
  }
}
void xyz(char* out,int *temp,char* in)
{ 
  char *pout=out;
  for(int i = 0; i<*temp; i++)
  {
    *pout++;
  } 
  for(char *pin=in;*pin!=0;pin++)
  {
    switch (*pin)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *pout++ = *pin;
      *temp+=1;
        break;  
    }    
  }
  *pout=0;
}
int main(int argc, char* argv[])
{
  char str[100];
  int times=0;
  for(int i=1; i<argc;i++)
  {
    xyz(str, &times, argv[i]);
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\n"",str);
  xyzz(str);
  printf( ""Der neue String lautet: %s\n"",str);
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\\nAnzahl Punkte: %i\\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef eynwr* IntPointer;
typedef vwjfq Student{
    char acirj[20];
    char hdxcw[20];
    eynwr eciff[5];
}Student;
void tfdmf(Student* p_stud);
void egkxe(Student* p_stud);
eynwr main()
{
    Student zznow[5];
    for(eynwr tkymx=0; tkymx<5;tkymx++){
    	tfdmf(&zznow[tkymx]);
	}
	for(eynwr ehtws=0; ehtws<5;ehtws++){
    	egkxe(&zznow[ehtws]);
	}
    return 0;
}
void tfdmf(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->acirj);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->hdxcw);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->eciff[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->eciff[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->eciff[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->eciff[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->eciff[4]);
}
void egkxe(Student* p_stud)
{
	eynwr rhwux=0;
	for(eynwr tkymx=0;tkymx<5;tkymx++){ rhwux += p_stud->eciff[tkymx];}
	printf(""\\nStudent: %s %s"",p_stud->acirj,p_stud->hdxcw);
	printf(""\\nAnzahl Punkte: %i\\n"", rhwux);
}",rename_variables,1
"void factorize(long ergebnis, long *zahl1, long *zahl2){
    long tmp= ergebnis;
    if(ergebnis == 0){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else if(ergebnis == 1){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else{
        tmp = ergebnis/2;
        while(ergebnis % tmp != 0){
            tmp = tmp - 1;
        }
        *zahl1 = tmp;
        *zahl2 = ergebnis/tmp;
    }
}
	long ergebnis;
    long zahl1;
    long zahl2;
    long* p1 = &zahl1;
    long* p2 = &zahl2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, p1, p2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktorEins, faktorZwei);
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	if (ergebnis == 0 || ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        long prod = ergebnis / 2;
        if (ergebnis % 2 != 0) {
            do {
                prod -= 1;
            } while (ergebnis % prod != 0);
                *zahl1 = prod;
        *zahl2 = ergebnis / prod;
    }
    long ergebnis, zahl1, zahl2;
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
}","void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		} // Ende for -Schleife mit try als Zaehler
		 // Ende von default
	} // Ende von switch (product)
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product, factor1, factor2 );
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	if (ergebnis == 0 || ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        long prod = ergebnis / 2;
        if (ergebnis % 2 != 0) {
            do {
                prod -= 1;
            } while (ergebnis % prod != 0);
                *zahl1 = prod;
        *zahl2 = ergebnis / prod;
    }
    long ergebnis, zahl1, zahl2;
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
}","void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}",,0
"#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\nAnzahl Punkte: %i\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\\n"");
	student_ausgeben(students + i);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\\n"", summe);
}
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\\n"");
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\\n"");
	student_ausgeben(students + i);
	}
}",swap_functions,1
"#include <stdio.h>
int main() {
   char satz[100], satz2[100];
   int l, k;
   fgets(satz, sizeof(satz), stdin);
   for (int i = 0, j; satz[i] != '\\0'; ++i) {
      while (!(satz[i] >= 'a' && satz[i] <= 'p') && !(satz[i] >= 'r' && satz[i] <= 'w') && !(satz[i] == 'z') && !(satz[i] >= 'A' && satz[i] <= 'P') && !(satz[i] >= 'R' && satz[i] <= 'W') && !(satz[i] == 'Z') && !(satz[i] == '!') && !(satz[i] == '?') && !(satz[i] == '\\0')){
         for (j = i; satz[j] != '\\0'; ++j) {
            satz[j] = satz[j + 1];
         }
         satz[j] = '\\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(satz);
     for (int l = 0, k; satz[l] != '\\0'; ++l) {
        satz2[k] == satz[l];
        k++;
        l=l+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}","#include <stdio.h>
int main() {
   char satz[100], satz2[100];
   int l, k;
   fgets(satz, sizeof(satz), stdin);
   for (!(int i = 0, j; satz[i] == '",demorgan_on_logic_equations,1
"    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+shift)>90)
        	*p_char = *p_char-26;
		while((*p_char+shift)<65)
        	*p_char = *p_char+26;
		*p_char += shift;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        while((*p_char+shift)>122)
		{
        	*p_char = *p_char-26;
		while((*p_char+shift)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}
{
    for(int i=0;i<maxlength;i++)
    {
        shiftChar(&str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}","// #include <./tools.h>
// #include <>//Regular Expressions for shorter (aka harder to do maintenance on) code?
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void shiftChar(char* p_char, int intShift){
	//A-Z:65-90;a-Z:97-122
	if((*p_char >= 65) && (*p_char <= 90)){//A-Z
		if(*p_char+intShift < 65){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 90){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if((*p_char >= 97) && (*p_char <= 122)){//a-z
		if(*p_char+intShift < 97){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 122){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
		// % - characters outside of [A-Za-Z] are not to be changed
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;i<intMaxLength;i++){
		shiftChar(&str[i], intShift);
	}
}
/*
 */
int main(){
	char str[] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	// char str[] = ""AZ   az""; 	// Originaltext
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz""; 	// Originaltext
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	// printf(""O: "");
	cipher(str, intShift, intArrMoepSize);
	// printf(""V: "");
	cipher(str, -intShift, intArrMoepSize);
	// printf(""E: "");
	// char string[] = ""Dieser_Text_ist_geheim"";
	// cipher(string, -4, 22);
	// printf(""%s\n"", string);
	// char letter[] = ""b"";
	// shiftChar(letter, 2);
	// printf(""%c\n"", *letter);
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}","#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                        }
}
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}",,0
"void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return ;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
{ 
     if(product == 0 || product == 1){
        *factor1 = 1;
	*factor2 = product;
          else{
       long haelfte = product/2;
       while(1){
       if(product % haelfte == 0){
         break; 
              else{
       haelfte = haelfte - 1;
       }
     }
       *factor1 = haelfte;
       *factor2 = product/haelfte; 
   }
}
	long product, factor1, factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product,factor1,factor2);
}",,0
"void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}","#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 1 || ergebnis == 0) {
        *zahl2 =ergebnis;
		*zahl1 =1;
    } 
	else 
	{
        for(int i = ergebnis/2; i > 0;i--) 
		{
            if(ergebnis%i == 0) 
			{
				*zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
            } 
			else 
			{
               continue;
                        }
}
int main()
{
    long ergebnis;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}",,0
"#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\\nAnzahl Punkte: %i\\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}","#include <stdio.h>
typedef biemj student {
    char xfkbn[21];
    char iwlhv[21];
    unsigned gcbci points[5];
} Student;
void ltcul(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->xfkbn);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->iwlhv);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (gcbci hmqhy = 0; hmqhy < 5; ++hmqhy) {
        printf(""%i: "", hmqhy+1);
        scanf(""%i"", &p_stud->points[hmqhy]);
    }
    printf(""\\n"");
}
void qvwmw(Student* p_stud) {
    unsigned gcbci sum = 0;
    for (gcbci hmqhy = 0; hmqhy < 5; ++hmqhy)
        sum += p_stud->points[hmqhy];
    printf(""Student: %s %s\\nAnzahl Punkte: %i\\n"", p_stud->xfkbn, p_stud->iwlhv, sum);
}
gcbci main() {
    Student yqjoh[5];
    for (gcbci hmqhy = 0; hmqhy < 5; ++hmqhy)
        ltcul(&yqjoh[hmqhy]);
    for (gcbci hmqhy = 0; hmqhy < 5; ++hmqhy)
        qvwmw(&yqjoh[hmqhy]);
    return 0;
}",rename_variables,1
"void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		} // Ende for -Schleife mit try als Zaehler
		 // Ende von default
	} // Ende von switch (product)
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product, factor1, factor2 );
}","void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; 0 < try; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		}
	}
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product, factor1, factor2 );
}",mirrow_simple_logic_equations,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
	for(int i = 0; i < 2; i++)
	{
		if(i == 0)
		{
			printf(""Gebe den Vornamen ein: "");
			scanf(""%s"", p_stud->first_name);
		}
		if(i == 1)
		{
			printf(""Gebe nun den Nachnamen ein: "");
			scanf(""%s"", p_stud->last_name);
		}
	}
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	for(int i = 0; i < 5; i++)
	{
		printf(""%i: "", i + 1);
		scanf(""%i"", &p_stud->points[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud)
{
	int summe = 0;
	for(int i = 0; i < 2; i++) i = 5;
	printf(""\nStudent: %s %s"", p_stud->first_name, p_stud->last_name);
	summe = 0;
	summe = p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4];
	printf(""\nAnzahl Punkte: %i\n"", summe);
}
int main()
{
	Student studenten[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studenten[i]);
	}	
	for(int i = 0; i < 5; i++)
	{
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 typedef struct student{
     char vornamen[20];
     char nachnamen[20];
     unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    readLine(p_stud -> vornamen, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readLine(p_stud -> nachnamen, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:"");
    for(int i=0; i<5; ++i){
        printf(""%u. "", i);
        scanf(""%u"", p_stud->points[i]);
    }
}
int main(){
    static Student p_stud[5];
    for(int i=0; i<5; ++i){
        p_stud[i]=student_einlesen(*p_stud);
    }
}",,0
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	char buf[20];
	fgets(buf, 20, stdin);
	buf[strlen(buf)-1] = '\0';
	strcpy(p_stud->vorname,buf);
	printf(""Gebe nun den Nachnamen ein: "");
	char buf2[20];
	fgets(buf2, 20, stdin);
	buf2[strlen(buf2)-1] = '\0';
	strcpy(p_stud->nachname,buf2);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	int pkt;
	for(int i=0;i<5;i++){
		if(i==4){
			printf(""%d:\n"",i+1);
			scanf(""%d"",&pkt);
			getchar();
		}
		else{
			printf(""%d: "",i+1);
			scanf(""%d"",&pkt);
		}
		p_stud->punkte[i]=pkt;
		}
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"",p_stud->vorname,p_stud->nachname);
	int sum=0;
	for(int i=0;i<5;i++){
		sum+=p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\n\n"",sum);
}
int main(){
	Student studenten[5];
	for(int i=0;i<5;i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0;i<5;i++){
			student_ausgeben(&studenten[i]);
		}
}","#include <stdio.h>		// printf()
#include <string.h>
typedef struct student
{
  char first_name[20];
  char last_name[20];
  int points[5];
} Student;
void
student_einlesen (Student * p_stud)
{
  printf (""Gebe den Vornamen ein: "");
  scanf (""%s"", p_stud->first_name);
  printf (""Gebe nun den Nachnamen ein: "");
  scanf (""%s"", p_stud->last_name);
  printf (""Gebe nun nacheinander die 5 Punkte ein: \n"");
  for (int i = 0; i < 4; i++)
    {
      printf (""%i: "", i + 1);
      scanf (""%i"", &p_stud->points[i]);
    }
    printf (""%i: \n"", 5);
    scanf (""%i"", &p_stud->points[4]);
}
void
student_ausgeben (Student * p_stud)
{
  int Punkte = 0;
  //printf(""Anzahl %i\n"",p_stud->points[1]);
  for (int i = 0; i < 5; i++)
    {
      Punkte += p_stud->points[i];
    }
  printf (""Student: %s %s\nAnzahl Punkte: %i\n\n"", p_stud->first_name,
	  p_stud->last_name, Punkte);
}
void main ()
{
  Student* Eingabe[5];
    Student Mensch0;
    Student Mensch1;
    Student Mensch2;
    Student Mensch3;
    Student Mensch4;
    Eingabe[0]=&Mensch0;
    Eingabe[1]=&Mensch1;
    Eingabe[2]=&Mensch2;
    Eingabe[3]=&Mensch3;
    Eingabe[4]=&Mensch4;
    for(int i=0;i<5;i++){
        student_einlesen(Eingabe[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(Eingabe[i]);
    }
}",,0
"{  
	for(!(int i = 0; i >= zahl; i++))
		if(!(*dest == 0 && *src == 0))
		{
			*dest = *src;
			dest++;
			src++;
		else
		{
			i = zahl;
}
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	for(!(;*lenpt == 0;  lenpt++))
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	for(!(int i = lencnt; i < 0; i--))
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	orgpt = str;
	lenpt = auxString;
	for(!(int i = lencnt; i <= 0; i--))
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}
{  
      }","{  
	for(int i = 0; i < zahl; i++)
		if(*dest != 0 && *src != 0)
		{
			*dest = *src;
			dest++;
			src++;
		else
		{
			i = zahl;
}
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	for(;*lenpt != 0;  lenpt++)
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	for(int i = lencnt; i >= 0; i--)
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	orgpt = str;
	lenpt = auxString;
	for(int i = lencnt; i > 0; i--)
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}
{  
      }",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _Student {
	char vorname[21];
	char nachname[21];
	unsigned int punkte[5];
} Student;
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(vorname < ""%s"", p_stud-);
	printf(""Gebe nun den Nachnamen ein: "");
	scannachname < ""%s"", p_stud-me);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (int i5 >= ii<=5; i++) {
		printf(""%d: "", i);
		scanf(""%punkte[i-1] < p_stud-e[i-1]));
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
vorname, p_stud->nachname < ""Student: %s %s\\n"", p_stud-nachname);
	unsigned int summe = 0;
	for 5 > it i=0punkte[i] < {
		summe += p_stud-d->punkte[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
int main() {
	Student studenten[5];
	5 > i (int i=0; i<5; i++) {
		student_einlesen(&studenten[i]);
	}5 > ior (int i=0; i<5; i++) {
		student_ausgeben(&studenten[i]);
	}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _Student {
	char vorname[21];
	char nachname[21];
	unsigned int punkte[5];
} Student;
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (int i=1; i<=5; i++) {
		printf(""%d: "", i);
		scanf(""%d"", &(p_stud->punkte[i-1]));
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
	printf(""Student: %s %s\\n"", p_stud->vorname, p_stud->nachname);
	unsigned int summe = 0;
	for (int i=0; i<5; i++) {
		summe += p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
int main() {
	Student studenten[5];
	for (int i=0; i<5; i++) {
		student_einlesen(&studenten[i]);
	}
	for (int i=0; i<5; i++) {
		student_ausgeben(&studenten[i]);
	}
	return 0;
}",mirrow_simple_logic_equations,1
"void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}","void factorize(long result, long *number1, long *number2){
	if(0 == result){
	    *number1 = 1;
	    *number2 = 0;
	if(1 == result){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; result != *number1 * *number2; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef slnnd student{
char obkhj [21];
char igqik[21];
unsigned lmqod punkte[4];
} Student;
void dkbft(Student* p_stud)
{
 for(lmqod pqbhn=0;pqbhn<5;pqbhn++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[pqbhn].obkhj);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[pqbhn].igqik);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (lmqod ocabz=0;ocabz<5;ocabz++){
      printf(""%u:"",ocabz+1);
      scanf(""%u"",&p_stud[pqbhn].punkte[ocabz]);
      }
}
 }
void slgmp(Student* p_stud)
{
for (lmqod pqbhn=0;pqbhn<5;pqbhn++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[pqbhn].obkhj,p_stud[pqbhn].igqik);
    printf(""Anzahl Punkte: %u"",((p_stud[pqbhn].punkte[0])+(p_stud[pqbhn].punkte[1])+(p_stud[pqbhn].punkte[2])+(p_stud[pqbhn].punkte[3])+(p_stud[pqbhn].punkte[4])));
}
}
lmqod main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
dkbft(p_stud);
slgmp(p_stud);
}",rename_variables,1
"void factorize(long ergebnis, long *zahl1, long *zahl2){
    long tmp= ergebnis;
    if(ergebnis == 0){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else if(ergebnis == 1){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else{
        tmp = ergebnis/2;
        while(ergebnis % tmp != 0){
            tmp = tmp - 1;
        }
        *zahl1 = tmp;
        *zahl2 = ergebnis/tmp;
    }
}
	long ergebnis;
    long zahl1;
    long zahl2;
    long* p1 = &zahl1;
    long* p2 = &zahl2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, p1, p2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
}","void factorize(long product, long *factor1, long *factor2)
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
                          i++;
             }
}
        long product, factor1, factor2;
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"#include <stdio.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(vorname < ""%s"" , p_stud -);
	printf(""Gebe nun den Nachnamen ein: "");
	scanfnachname < ""%s"" , p_stud -e);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int i = 16 > i6 ; i++){
		printf(""%d: "" , i);
		scanfpunkte[i-1] < ""%i"" , &p_stud-]);
		i5 == i 5) printf(""\\n"");
	}	
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
		for(int i = 05 > i5 ; i++punkte[i] < {
			summe += p_stud-];
		}
		prinvorname,p_stud->nachname,summe < ""\\nStudent: %s %s\\nAnzahl Punkte: %i\\n"",p_stud-mme);
}
int main() {
	Student arr[5];
		for(int i 5 > i < 5 ; i++){
			student_einlesen(&arr[i]);
		}
		for(int j =5 > j< 5 ; j++){
			student_ausgeben(&arr[j]);
		}
}","#include <stdio.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"" , p_stud -> vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"" , p_stud -> nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int i = 1; i < 6 ; i++){
		printf(""%d: "" , i);
		scanf(""%i"" , &p_stud-> punkte[i-1]);
		if(i == 5) printf(""\\n"");
	}	
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
		for(int i = 0; i < 5 ; i++){
			summe += p_stud->punkte[i];
		}
		printf(""\\nStudent: %s %s\\nAnzahl Punkte: %i\\n"",p_stud->vorname,p_stud->nachname,summe);
}
int main() {
	Student arr[5];
		for(int i = 0; i < 5 ; i++){
			student_einlesen(&arr[i]);
		}
		for(int j = 0; j < 5 ; j++){
			student_ausgeben(&arr[j]);
		}
}",mirrow_simple_logic_equations,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		teiler;
		while (produkt % teiler != 0)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktorEins, faktorZwei);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktorEins, faktorZwei);
}",swap_loops_type,1
"void factorize(long product, long *factor1, long *factor2)
	if(0 == product){
		*factor1 = 1;
		*factor2 = product;
	else if(1 == product){
		*factor1 = 1;
		*factor2 = product;
	else if(0 == product % 2){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(0 == product % z)
				break;
			else 
				z = z - 1;
		}while(0 != product % 2);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
	for(int i = 0; i < 2; i++)
	{
		if(i == 0)
		{
			printf(""Gebe den Vornamen ein: "");
			scanf(""%s"", p_stud->first_name);
		}
		if(i == 1)
		{
			printf(""Gebe nun den Nachnamen ein: "");
			scanf(""%s"", p_stud->last_name);
		}
	}
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int i = 0; i < 5; i++)
	{
		printf(""%i: "", i + 1);
		scanf(""%i"", &p_stud->points[i]);
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud)
{
	int summe = 0;
	for(int i = 0; i < 2; i++) i = 5;
	printf(""\\nStudent: %s %s"", p_stud->first_name, p_stud->last_name);
	summe = 0;
	summe = p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4];
	printf(""\\nAnzahl Punkte: %i\\n"", summe);
}
int main()
{
	Student studenten[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studenten[i]);
	}	
	for(int i = 0; i < 5; i++)
	{
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_ausgeben(Student* p_stud)
{
	int summe = 0;
	for(int i = 0; i < 2; i++) i = 5;
	printf(""\\nStudent: %s %s"", p_stud->first_name, p_stud->last_name);
	summe = 0;
	summe = p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4];
	printf(""\\nAnzahl Punkte: %i\\n"", summe);
}
void student_einlesen(Student* p_stud)
{
	for(int i = 0; i < 2; i++)
	{
		if(i == 0)
		{
			printf(""Gebe den Vornamen ein: "");
			scanf(""%s"", p_stud->first_name);
		}
		if(i == 1)
		{
			printf(""Gebe nun den Nachnamen ein: "");
			scanf(""%s"", p_stud->last_name);
		}
	}
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int i = 0; i < 5; i++)
	{
		printf(""%i: "", i + 1);
		scanf(""%i"", &p_stud->points[i]);
	}
	printf(""\\n"");
}
int main()
{
	Student studenten[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studenten[i]);
	}	
	for(int i = 0; i < 5; i++)
	{
		student_ausgeben(&studenten[i]);
	}
}",swap_functions,1
"#include <stdio.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->punkte[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    for(int i=0; i<5; i++)
    sum += p_stud->punkte[i];
    printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
    student_einlesen(&st[i]);
      for(int i=0; i<5; i++)
    student_ausgeben(&st[i]);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
    long var = produkt/2;
	switch (produkt){
        case 0:
            *faktor1 = 1;
            *faktor2= produkt; 
            break;
        case 1:
            *faktor1 = 1; 
            *faktor2 = produkt;
            break; 
        default:
            while (produkt%var != 0 ){ //produkt/ergebnis * ergebnis != produkt
                var -= 1;
                        *faktor1= var;
            *faktor2= produkt/var;
            break;       
    }
    long a;
    long b;
    long pro; 
    scanf(""%ld"",&pro);
    factorize (pro, &a, &b);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", pro,a, b );
}","void factorize(long product, long *factor1, long *factor2)
  if(product==0||product==1){
    *factor1=1;
    *factor2=product;
  } else{
    int a=0;
    for(long int h=product/2;(h>0)&&(a==0);h--){
      if(product%h==0){
        *factor1=h;
        *factor2=product/h;
        a=1;
            }
}
  long int factor1;
  long int factor2;
  long int product;
  scanf(""%ld"",&product);
  factorize(product,&factor1,&factor2);
	printf(""Possible Factors of %lu are %lu and %lu.\n"",product,factor1,factor2);
}",,0
"#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\nAnzahl Punkte: %i\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}",,0
"#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\nAnzahl Punkte: %i\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}","#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}",,0
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}
//**(argv + 1 + lange) != '\0'","#include <stdio.h>
int main(int  argc, char *argv[]) // start at argv[1]
{
char array[100];
int slot_count = 0;
char b[100];
int slot_count_b = 0;
for(int i = 1; i < argc; i++)
	{
	int j = -1;
	do
		{
		j++;
		if(argv[i][j] == 'x') continue;
		else if(argv[i][j] == 'y') continue;
		else if(argv[i][j] == 'q') continue;
		else if(argv[i][j] == 'X') continue;
		else if(argv[i][j] == 'Y') continue;
		else if(argv[i][j] == 'Q') continue;
		else if(argv[i][j] == '\0')
			{
			array[slot_count] = '\0';
			b[slot_count_b] = '\0';
			}
		else
			{
			array[slot_count] = argv[i][j];
			if( (slot_count == 0 || (slot_count) % 3 == 0) )
				{
				b[slot_count_b] = array[slot_count];
				slot_count_b++;
				}		
			slot_count++;
			}
		}		
	while(argv[i][j] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int m = 0; m < slot_count; m++) printf(""%c"", array[m]); 
printf(""\nDer neue String lautet: "");
for(int n = 0; n < slot_count_b; n++) printf(""%c"", b[n]); 
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
{ 
	if (ergebnis ==0){
		*zahl1 =1;
		*zahl2 = ergebnis;
	else if (ergebnis==1){
		*zahl1= 1;
		*zahl2= ergebnis; 
	else if (ergebnis % 2 ==0) {
		*zahl1 = ergebnis / 2;
		*zahl2 = 2; 
		}
	else {
		int a=0;
		a = ergebnis / 2;
		do {
			if (ergebnis % a ==0)
				break;
		else 
			a--;
		}while (ergebnis %a !=0);
		*zahl1 = a;
		*zahl2 = ergebnis/ *zahl1;
	}
}
	long eingabe = 0;
	long zahl1 = 0;
	long zahl2 = 0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", eingabe, zahl1, zahl2 );
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
{ 
	if (ergebnis ==0){
		*zahl1 =1;
		*zahl2 = ergebnis;
	else if (ergebnis==1){
		*zahl1= 1;
		*zahl2= ergebnis; 
	else if (ergebnis % 2 ==0) {
		*zahl1 = ergebnis / 2;
		*zahl2 = 2; 
		}
	else {
		int a=0;
		a = ergebnis / 2;
		do {
			if (ergebnis % a ==0)
				break;
		else 
			a--;
		}while (ergebnis %a !=0);
		*zahl1 = a;
		*zahl2 = ergebnis/ *zahl1;
	}
}
	long eingabe = 0;
	long zahl1 = 0;
	long zahl2 = 0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", eingabe, zahl1, zahl2 );
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>  
#include <string.h>
typedef struct student{
    char first_name[20]; 
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");    
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    int i = 0;
    while (i < 5){
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->points[i]));
    	i++;
    }
}
void student_ausgeben(Student* p_stud)
{
  printf(""\\nStudent: %s %s\\n"", p_stud->first_name, p_stud->last_name);  
  int summe = 0;
  int i = 0;
  while (i < 5){
    summe+= p_stud->points[i];  
  	i++;
  }
  printf(""Anzahl Punkte: %i\\n"", summe);
}
int main(){
    Student array[5];
    int i = 0;
    while (i < 5){
        student_einlesen(&array[i]);
     	i++;
    }
    int i = 0;
    while (i < 5){
        student_ausgeben(&array[i]);
     	i++;
    }
}","#include <stdio.h>
#include <stdlib.h>  
#include <string.h>
typedef struct student{
    char first_name[20]; 
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");    
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 0; i < 5; i++){
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->points[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
  printf(""\\nStudent: %s %s\\n"", p_stud->first_name, p_stud->last_name);  
  int summe = 0;
  for(int i = 0; i < 5; i++){
    summe+= p_stud->points[i];  
  }
  printf(""Anzahl Punkte: %i\\n"", summe);
}
int main(){
    Student array[5];
    for(int i = 0; i < 5; i++){
        student_einlesen(&array[i]);
     }
    for(int i = 0; i < 5; i++){
        student_ausgeben(&array[i]);
     }
}",swap_loops_type,1
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		while(ergebnis%*zahl1!=0)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, t1, t2);
}","void factorize(long resultat, long *nummer1, long *nummer2)
    if(resultat == 0){
        *nummer1 = 1;
        *nummer2 = 0;
        return;
        else if(resultat == 1){
        *nummer1 = 1;
        *nummer2 = 1;
        return;
        *nummer1 = resultat / 2;
    while (resultat % *nummer1){
        *nummer1 -= 1;
    }
    *nummer2 = resultat / *nummer1;
}
    printf(""Please enter an Integer: "");
    long resultat;
    scanf(""%ld"", &resultat);
    long nummer1, nummer2;
    factorize(resultat, &nummer1, &nummer2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
    return 0;
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
//printf(""%ld\n"", ergebnis);
if((ergebnis == 0)||(ergebnis == 1))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(ergebnis%f1 != 0 )
{
//printf(""f1 passt noch nicht : %i\n"",f1);
f1 = f1- 1;
f2 = ergebnis/f1;
}
//printf(""faktoren: %ld, %ld \n"",f1,f2);
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe,z1,z2);
}","void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}",,0
"#include <stdio.h>
typedef char Str20[21];
typedef struct student
{
	Str20 vorname;
	Str20 nachname;
	int punkte[5];
}Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->vorname, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->nachname, 20);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int j = 0; j < 5; j++)
	{
		printf(""%i: "", j + 1);
		scanf(""%i"", &p_stud->punkte[j]);
		getchar();
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud)
{
	printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
	int summe = 0;
	for(int l = 0; l < 5; l++)
	{
		summe += p_stud->punkte[l];
	}
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
void main()
{
	Student studierende[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studierende[i]);
	}
	for(int k = 0; k < 5; k++)
	{
		student_ausgeben(&studierende[k]);
	}
}","//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\n') {
            p_stud -> first_name[i] = '\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\n') {
            p_stud -> last_name[i] = '\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}",,0
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->points[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum = 0;
    for(int i=0; i<5; i++)
        sum += p_stud->points[i];
    printf(""\\nStudent: %s %s\\n"", p_stud->first_name, p_stud->last_name );
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
        student_einlesen(&st[i]);
    for (int i=0; i<5; i++)
        student_ausgeben(&st[i]);
    return 0;
}","#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_ausgeben(Student* p_stud)
{
    int sum = 0;
    for(int i=0; i<5; i++)
        sum += p_stud->points[i];
    printf(""\\nStudent: %s %s\\n"", p_stud->first_name, p_stud->last_name );
    printf(""Anzahl Punkte: %i\\n"", sum);
}
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->points[i]));
    }
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
        student_einlesen(&st[i]);
    for (int i=0; i<5; i++)
        student_ausgeben(&st[i]);
    return 0;
}",swap_functions,1
"void factorize(long product, long *factor1, long *factor2)
	if (product<2){
		*factor1=1;
		*factor2=product;
	else{
		*factor1=product/2;
		while (*factor1>1){
			if (product%*factor1!=0){
				*factor1=*factor1-1;
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}
	long product;
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product,a,b);
}","void factorize(long product, long *factor1, long *factor2)
	if (2 > product){
		*factor1=1;
		*factor2=product;
	else{
		*factor1=product/2;
		while1 < *factor1>1){
			0 != product%*factor11!=0){
				*factor1=*factor1-1;
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}
	long product;
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product,a,b);
}",mirrow_simple_logic_equations,1
"void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2)
	if(!(product != 0)){
		*factor1 = 1;
		*factor2 = product;
	else if(!(product != 1)){
		*factor1 = 1;
		*factor2 = product;
	else if(!(product % 2 != 0)){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(!(product % z != 0))
				break;
			else 
				z = z - 1;
		}while(!(product % 2 == 0));
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}",demorgan_on_logic_equations,1
"#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef fnbmi dfozm {
  char znzpm[20];
  char yxtny[20];
  int  jjimv[5];
}  dfozm  ;
void mgtyh(dfozm*p_stud){
		printf(""Gebe den Vornamen ein: "");
		scanf (""%s"" ,p_stud->znzpm);
		printf(""Gebe nun den Nachnamen ein: "");
		scanf (""%s"" ,p_stud->yxtny);
		 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
		 for (int hdaeu=0 ; hdaeu<4;hdaeu++){	
		 printf(""%d: "",hdaeu+1);
			scanf(""%d"", &(p_stud-> jjimv[hdaeu]));
			}
			int mygkx= 5;
		printf(""%d: \\n"",mygkx);
			scanf(""%d"", &(p_stud-> jjimv[4]));
}
void ueufy(dfozm*p_stud){
		  int  xrwxs=0 ;
		for (int hdaeu=0 ; hdaeu<5;hdaeu++){
		xrwxs += (p_stud-> jjimv[hdaeu]);
		}
		printf (""Student: %s %s \\n"",p_stud->znzpm , p_stud->yxtny);
		printf(""Anzahl Punkte: %d\\n\\n"" , xrwxs );
		}
int main (){
             fnbmi dfozm *pointer=malloc(sizeof (dfozm)*5);
		int kalus;
		for(kalus=0 ; kalus<5;kalus++){
			mgtyh((&pointer[kalus]));
		}
		int wipbj;
		for (wipbj=0 ; wipbj<5; wipbj++){
			ueufy((&pointer[wipbj]));
		}
free(pointer);
}","#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef struct Student {
  char vorname[20];
  char nachname[20];
  int  punkte[5];
}  Student  ;
void student_einlesen(Student*p_stud){
		printf(""Gebe den Vornamen ein: "");
		scanf (""%s"" ,p_stud->vorname);
		printf(""Gebe nun den Nachnamen ein: "");
		scanf (""%s"" ,p_stud->nachname);
		 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
		 for (int a=0 ; a<4;a++){	
		 printf(""%d: "",a+1);
			scanf(""%d"", &(p_stud-> punkte[a]));
			}
			int x= 5;
		printf(""%d: \\n"",x);
			scanf(""%d"", &(p_stud-> punkte[4]));
}
void student_ausgeben(Student*p_stud){
		  int  summe=0 ;
		for (int a=0 ; a<5;a++){
		summe += (p_stud-> punkte[a]);
		}
		printf (""Student: %s %s \\n"",p_stud->vorname , p_stud->nachname);
		printf(""Anzahl Punkte: %d\\n\\n"" , summe );
		}
int main (){
             struct Student *pointer=malloc(sizeof (Student)*5);
		int i;
		for(i=0 ; i<5;i++){
			student_einlesen((&pointer[i]));
		}
		int u;
		for (u=0 ; u<5; u++){
			student_ausgeben((&pointer[u]));
		}
free(pointer);
}",rename_variables,1
"#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}","#include <stdio.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->punkte[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    for(int i=0; i<5; i++)
    sum += p_stud->punkte[i];
    printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
    student_einlesen(&st[i]);
      for(int i=0; i<5; i++)
    student_ausgeben(&st[i]);
    return 0;
}",,0
"void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\\n"", input, f1, f2);
  return 0;
}","void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (1 < *factor1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (0 == *factor1) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\\n"", input, f1, f2);
  return 0;
}",mirrow_simple_logic_equations,1
"// #include <./tools.h>
// #include <>//Regular Expressions for shorter (aka harder to do maintenance on) code?
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void shiftChar(char* p_char, int intShift){
	//A-Z:65-90;a-Z:97-122
	if((*p_char >= 65) && (*p_char <= 90)){//A-Z
		if(*p_char+intShift < 65){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 90){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if((*p_char >= 97) && (*p_char <= 122)){//a-z
		if(*p_char+intShift < 97){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 122){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
		// % - characters outside of [A-Za-Z] are not to be changed
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;i<intMaxLength;i++){
		shiftChar(&str[i], intShift);
	}
}
/*
 */
int main(){
	char str[] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	// char str[] = ""AZ   az""; 	// Originaltext
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz""; 	// Originaltext
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	// printf(""O: "");
	cipher(str, intShift, intArrMoepSize);
	// printf(""V: "");
	cipher(str, -intShift, intArrMoepSize);
	// printf(""E: "");
	// char string[] = ""Dieser_Text_ist_geheim"";
	// cipher(string, -4, 22);
	// printf(""%s\\n"", string);
	// char letter[] = ""b"";
	// shiftChar(letter, 2);
	// printf(""%c\\n"", *letter);
}","
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void shiftChar(char* p_char, int intShift){
	if(!((*p_char < 65) && (*p_char <= 90))){
		if(!(*p_char+intShift >= 65)){
			*p_char = *p_char + intShift + 26;
		}else if(!(*p_char+intShift <= 90)){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if(!((*p_char < 97) && (*p_char <= 122))){
		if(!(*p_char+intShift >= 97)){
			*p_char = *p_char + intShift + 26;
		}else if(!(*p_char+intShift <= 122)){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void cipher(char str[], int intShift, int intMaxLength){
	for (!(int i=0;i>=intMaxLength;i++)){
		shiftChar(&str[i], intShift);
	}
}
int main(){
	char str[] = ""Froh zu sein bedarf es wenig"";
	// char str[] = ""AZ   az"";
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz"";
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	cipher(str, intShift, intArrMoepSize);
	cipher(str, -intShift, intArrMoepSize);
}",demorgan_on_logic_equations,1
"void shiftChar(char* p_char, int shift)	if(*p_char >='a' && *p_char <='z')		if(*p_char + shift >'z')			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} 
		else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	else if(*p_char >= 'A' && *p_char <= 'Z'){
		if(*p_char + shift >'Z'){
			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} 
		else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	int i = 0;
	while ( i< maxlength) {
		shiftChar(&str[i],shift);
		i ++;
	}
}
{
}","void shiftChar(char* p_char, int shift)	if(!(*p_char <'a' && *p_char <='z'))		if(!(*p_char + shift <='z'))			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} 
		else if(!(*p_char + shift >= 'a')) {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	else if(!(*p_char < 'A' && *p_char <= 'Z')){
		if(!(*p_char + shift <='Z')){
			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} 
		else if(!(*p_char + shift >= 'A')) {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	int i = 0;
	while (!( i>= maxlength)) {
		shiftChar(&str[i],shift);
		i ++;
	}
}
{
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(!(""%s"", p_stud -<= first_name));
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(!(""%s"", p_stud -<= last_name));
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(!(int i = 0; i>=5; i++)){
		printf(""%i: "",i+1);
		scanf(!(""%i"", &p_stud-<=points[i]));
		}	
	printf(""\\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(!(""Student: %s %s
"", p_stud-<=first_name, p_stud -<= last_name));
	int temp = 0;
	for(!(int i = 0 ; i >=5; i++)){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\\n"", temp);
	printf(""\\n"");
}
int main(){
	Student array[5];
	for(!(int i = 0; i>=5; i++)){
	student_einlesen(&array[i]);
	}
	for(!(int i = 0; i>=5; i++)){
	student_ausgeben(&array[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\\n"", temp);
	printf(""\\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}",demorgan_on_logic_equations,1
"    int i = 0;
    while ((i < zahl) && (dest[i] != '\0') && (src[i] != '\0'))        dest[i] = src[i];
        i++;
        int i = 0;
    int len = 0;
    while(str[i] != '\0'){
        len += 1;
        i += 1;
        int left = 0;
    int right = len - 1;
    while (left < right){
        char temp = str[left];
        str[left] = str[right];
        str[right] = temp;
        left++;
        right--;
    }
}
{
                  }","{  
    for(int i= 0; dest[i] != 0; i++)        if(i < zahl && src[i] != 0){
            dest[i] = src[i];
            {
    char temp[100] = """";
    int count = 0;
    for(int i= 0; str[i] != 0; i++){
       temp[i] = str[i];
       count++;
    }
    for(int i= 0; temp[i] != 0; i++){
       str[i] = temp[count-i-1];
    }
}
{  
      }",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\nAnzahl Punkte: %d\n"", p_stud->vorname, p_stud->nachname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}",,0
"    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+shift)>90)
        	*p_char = *p_char-26;
		while((*p_char+shift)<65)
        	*p_char = *p_char+26;
		*p_char += shift;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        while((*p_char+shift)>122)
		{
        	*p_char = *p_char-26;
		while((*p_char+shift)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}
{
    for(int i=0;i<maxlength;i++)
    {
        shiftChar(&str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\\n"", str);
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", str);
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", str);
}","    if(!(*p_char<65 && *p_char<=90))
    {
        while(!((*p_char+shift)<=90))
        	*p_char = *p_char-26;
		while(!((*p_char+shift)>=65))
        	*p_char = *p_char+26;
		*p_char += shift;
    }
    if(!(*p_char<97 && *p_char<=122))
    {
        while(!((*p_char+shift)<=122))
		{
        	*p_char = *p_char-26;
		while(!((*p_char+shift)>=97))
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}
{
    for(!(int i=0;i>=maxlength;i++))
    {
        shiftChar(&str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig"";
    int shift = 5;
    printf(""Original: "");
    printf(""%s\\n"", str);
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", str);
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", str);
}",demorgan_on_logic_equations,1
"void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		} // Ende for -Schleife mit try als Zaehler
		 // Ende von default
	} // Ende von switch (product)
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product, factor1, factor2 );
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\0';
printf(""Der neue String lautet: %s\n"",erg2);
}",,0
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){ 
    printf(""Gebe den Vornamen ein: "");    
    scanf(""%s"",p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");    
    scanf(""%s"",p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
    for(int i = 0; i <4; i++){
        printf(""%d: "", i+1);
        scanf(""%d"",&p_stud->punkte[i]);
    }
    printf(""5: \n"");
    scanf(""%d"",&p_stud->punkte[4]);
}
void student_ausgeben(Student* p_stud){
    int summe = 0;
    for(int i = 0; i<5; i++){
        summe += p_stud->punkte[i];
    }
    printf(""Student: %s %s\n"",p_stud->vorname,p_stud->nachname);
    printf(""Anzahl Punkte: %d\n\n"",summe);
}
int main(void){
    Student st[5];    
    for(int i=0;i<5;i++){
        student_einlesen(&st[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&st[i]);
    }
}","#include <stdio.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    unsigned int punkte[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    readLine(p_stud->vorname, 21);              //Vornamen einlesen
    printf(""Gebe nun den Nachnamen ein: "");
    readLine(p_stud->nachname, 21);             //Nachnamen einlesen
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int x = 0; x<5;x++){
        printf(""%i: "", x+1);
        scanf(""%i"", &p_stud->punkte[x]);
    }
    return;
}
void student_ausgeben(Student* p_stud){
    int sum = 0;
    for(int y = 0; y<5; y++){
        sum = sum + p_stud->punkte[y];
    }
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", sum);
    return;
}
int main() {
    Student studenten[5];
    for(int i = 0; i<5; i++){                   //Schleife zum Einlesen
        student_einlesen(&studenten[i]);
    }
    for(int j=0; j<5; j++){                     //Schleife zum Asugeben
        student_ausgeben(&studenten[j]);
    }
    return 0;
}
//WHY??? Ich habe mit typedef eine struct definiert. Davon wird dann ein Array erstellt. Von diesem Array werden dann die Adressen an die Funktion student_eingeben gegeben, und später an student_ausgeben.
//Woran kann es liegen, dass es NUR dann wirklich funktioniert, wenn ich EINEN studenten habe - nicht ein Array von studenten, und auch nicht fünf einzelne studenten.
//Sobald student_einlesen mehr als 1 mal ""benutzt"" wird, funktioniert es nicht mehr!",,0
"#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",,0
"#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(vorname < ""%s"",&p_stud-);
    printf(""Gebe nun den Nachnamen ein: "");
    scannachname < ""%s"",&p_stud-me);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n1: "");
    scpunkte[0] < ""%i"",&p_stud-e[0]);
    printf(""2: "");
    punkte[1] < ""%i"",&p_stud-kte[1]);
    printf(""3: "");
  punkte[2] < ""%i"",&p_stud-unkte[2]);
    printf(""4: "");
punkte[3] < ""%i"",&p_stud->punkte[3]);
    printf(""5: "")punkte[4] < ""%i"",&p_stud-d->punkte[4]);
    printf(""\\n"");
}
void student_ausgeben( Student* p_studvorname, p_stud->nachname < ""Student: %s %s\\n"", p_stud-stud->nachname);
    printf(""Anzahl Pupunkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4] < p_stud-_stud->punkte[4]));
}   
int main(){
     Student s[5];5 > i  for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
   5 > i    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\\n\\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}",mirrow_simple_logic_equations,1
"#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h> // strlen() strcpy()
typedef struct student {
  char first_name[21];
  char last_name[21];
  int points[5];
} Student;
void student_ausgeben(Student* p_stud){
  printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
  int tmp = 0;
  for (int i = 0; i < 5; i++) {
    tmp += p_stud->points[i];
  }
  printf(""Anzahl Punkte: %i\n\n"", tmp);
}
void student_einlesen(Student* p_stud){
  char tmp[21];
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->first_name);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->last_name);
  printf(""Gebe nun nacheinander die 5 Punkte ein:"");
  for (int j=0; j < 5; j++) {
    printf(""%d: "", j + 1);
    scanf(""%d"", &p_stud->points[j]);
  }
  printf(""\n"");
}
void main() {
  Student* studenten[5];
  for (int i = 0; i < 3; i++) {
    student_einlesen(studenten[i]);
 }
  for (int i = 0; i < 3; i++) {
    student_ausgeben(studenten[i]);
  }
}","#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_init(Student *p_stud)
{
    p_stud->first_name = NULL;
    p_stud->last_name = NULL;
    p_stud->points = 0;
    p_stud->size = 0;
    p_stud->spoint = 0;
}
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_temp);
    p_stud->size++;
    p_stud->first_name = (char**)realloc(p_stud->first_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->first_name[p_stud->size-1] = (char*)malloc(strlen(name_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->first_name[p_stud->size - 1], name_temp);
    p_stud->last_name = (char**)realloc(p_stud->last_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->last_name[p_stud->size-1] = (char*)malloc(strlen(name1_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->last_name[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 1; i <= 5; i++)
    {
        printf(""%i: "",i);
        scanf(""%d"", &temp_zahl);
        p_stud->spoint++;
        int* tmp = (int*)realloc(p_stud->points, (p_stud->spoint) * sizeof(int*));
        if(!tmp) exit (-1);
        p_stud->points = tmp;
        p_stud->points[p_stud->spoint-1] = temp_zahl;
    }
    printf(""\n"");   
}
void student_ausgeben(Student* p_stud)
{
    int punkte[5];
    int j = 0;
    for(int i = 0; i < p_stud->size; i++){
        punkte[i]=p_stud->points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4];
        j+=5;
    }
    for(int i = 0; i < p_stud->size; i++)
    {
        printf(""Student: %s %s\nAnzahl Punkte: %d\n\n"", p_stud->first_name[i], p_stud->last_name[i], punkte[i]);
    }
    free(p_stud->first_name);
    free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    student_init(&erster_Student);
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&erster_Student);
    }
    student_ausgeben(&erster_Student);
    return 0;
}",,0
"#include <stdio.h>
typedef struct{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    int summe = 0;
    for (int i = 0; i < 5; ++i) {
        summe += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n"", summe);
}
int main(void){
    Student erster_student;
    Student zweiter_student;
    Student dritter_student;
    Student vierter_student;
    Student fuenfter_student;
    Student studierende[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studierende[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studierende[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
#include <malloc.h>
typedef struct student{",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _Student {
	char vorname[21];
	char nachname[21];
	unsigned int punkte[5];
} Student;
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (int i=1; i<=5; i++) {
		printf(""%d: "", i);
		scanf(""%d"", &(p_stud->punkte[i-1]));
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
	printf(""Student: %s %s\\n"", p_stud->vorname, p_stud->nachname);
	unsigned int summe = 0;
	for (int i=0; i<5; i++) {
		summe += p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
int main() {
	Student studenten[5];
	for (int i=0; i<5; i++) {
		student_einlesen(&studenten[i]);
	}
	for (int i=0; i<5; i++) {
		student_ausgeben(&studenten[i]);
	}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef ckwkm _Student {
	char jiroc[21];
	char ssqlb[21];
	unsigned ctktq punkte[5];
} Student;
void lcufb(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->jiroc);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->ssqlb);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (ctktq isvsg=1; isvsg<=5; isvsg++) {
		printf(""%d: "", isvsg);
		scanf(""%d"", &(p_stud->punkte[isvsg-1]));
	}
	printf(""\\n"");
}
void wnony(Student* p_stud) {
	printf(""Student: %s %s\\n"", p_stud->jiroc, p_stud->ssqlb);
	unsigned ctktq summe = 0;
	for (ctktq isvsg=0; isvsg<5; isvsg++) {
		summe += p_stud->punkte[isvsg];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
ctktq main() {
	Student koebr[5];
	for (ctktq isvsg=0; isvsg<5; isvsg++) {
		lcufb(&koebr[isvsg]);
	}
	for (ctktq isvsg=0; isvsg<5; isvsg++) {
		wnony(&koebr[isvsg]);
	}
	return 0;
}",rename_variables,1
"#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}","void factorize(long product, long *factor1, long *factor2)
{ 
     if(product == 0 || product == 1){
        *factor1 = 1;
	*factor2 = product;
          else{
       long haelfte = product/2;
       while(1){
       if(product % haelfte == 0){
         break; 
              else{
       haelfte = haelfte - 1;
       }
     }
       *factor1 = haelfte;
       *factor2 = product/haelfte; 
   }
}
	long product, factor1, factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product,factor1,factor2);
}",,0
"void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}","void factorize(long product, long *factor1, long *factor2)
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
                          i++;
             }
}
        long product, factor1, factor2;
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
	else if(produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	else{
		long vielfache = produkt/2;
		while(produkt%vielfache != 0){
			vielfache -= 1;
		}
		*faktor1 = vielfache;
		*faktor2 = produkt/vielfache;
	}
}
	long produkt, f1, f2;
	long *faktor1 = &f1,*faktor2 = &f2;
	scanf(""%li"",&produkt);
	factorize(produkt,faktor1,faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,*faktor1,*faktor2);
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}",,0
"#include <ctype.h>
int main (void)
    int key = 3;
    int letter = 0;
    int letter2 = 0;
    key = key % 26; // Wir haben nur 26 verschiedene keys
    char c;
    while( (c = getchar()) != '\n')
    {
        c = tolower(c);
        letter = (int)c;
        if (letter == ' ')
        {
            letter2 = letter;
                else if((letter + key) > 'z')
        {
            letter2 = letter + key - ('z' - 'a' + 1); //'z'-'a'+1 == 26 => kein Overflow mehr möglich, da key < 26
                else
        {
             letter2 = letter + key;
                c = (char)letter2;
        putchar (c);
    }
    putchar ('\n');
    return EXIT_SUCCESS;
}
}","    int ascii_wert;
    int vorzeichen=0;
    if(*p_char>96&&*p_char<123)        ascii_wert=*p_char+shift;
        if(ascii_wert>122) vorzeichen=-1;
        if(ascii_wert<97) vorzeichen=1;
        *p_char=(ascii_wert+vorzeichen*26);
        if(*p_char>64&&*p_char<91)        ascii_wert=*p_char+shift;
        if(ascii_wert>90) vorzeichen=-1;
        if(ascii_wert<65) vorzeichen=1;
        *p_char=(ascii_wert+vorzeichen*26);
    {
    for(int i=0; i<maxlength; i++){
        shiftChar(&str[i], shift);
    }
}
{
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\n"", temp);
	printf(""\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",,0
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \\n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\\n\\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(!(int i=0; i>=5; i++)){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        for(!(int j =0; j>=5;j++)){
            printf(""%i: \\n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(!(int i=0; i>=5; i++)){
        int sum = 0;
        for(!(int j =0; j>=5;j++)){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\\n\\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}",demorgan_on_logic_equations,1
"#include <stdio.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	//char* buf;
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; ++i){
		printf(""%d: "", i+1);
		scanf(""%d"", &p_stud->points[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	int summe = 0;
	for(int i = 0; i<5; ++i){
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\n\n"", summe);
}
int main(){
	Student studenten[5];
	for(int i = 0; i<5; ++i){
		student_einlesen(&studenten[i]);
	}
	for(int i = 0; i<5; ++i){
		student_ausgeben(&studenten[i]);
	}
}","#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h> // strlen() strcpy()
typedef struct student {
  char first_name[21];
  char last_name[21];
  int points[5];
} Student;
void student_ausgeben(Student* p_stud){
  printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
  int tmp = 0;
  for (int i = 0; i < 5; i++) {
    tmp += p_stud->points[i];
  }
  printf(""Anzahl Punkte: %i\n\n"", tmp);
}
void student_einlesen(Student* p_stud){
  char tmp[21];
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->first_name);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->last_name);
  printf(""Gebe nun nacheinander die 5 Punkte ein:"");
  for (int j=0; j < 5; j++) {
    printf(""%d: "", j + 1);
    scanf(""%d"", &p_stud->points[j]);
  }
  printf(""\n"");
}
void main() {
  Student* studenten[5];
  for (int i = 0; i < 3; i++) {
    student_einlesen(studenten[i]);
 }
  for (int i = 0; i < 3; i++) {
    student_ausgeben(studenten[i]);
  }
}",,0
"#include <stdio.h>
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; str1[i] != 0 ; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; str2[i] != 0 ; i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; str1[i] != 0 ; i++){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[i] != 0 ; i++ ){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	for(int i = 0; i < 100; i++)
	{string[i] = 0x00; string2[i] = 0x00;}
	//char x;
	for( int i = 1 ; i < argc ; i++ ){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\n"", string);
}","#include <stdio.h>
int main(int argc, char* argv[]) {
    //char* str[] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""}; //zum testen
    //int agc = 4;                                              //zum testen
    for(int i= 1; i<5; i++){
    //printf(""%s\n"", str[i]);                                 //test
    }
    char string1[100]; string1[99] = '\0';
    char string2[100]; string2[99] = '\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\0';
        string2[i] = '\0';
        string3[i] = '\0';
    }
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\0'){
        laenge++;
        j++;
        }
        //printf(""i=%i - laenge=%i\n"", i, laenge);                //test
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    //buchstabenloeschen
    int j = 0;
    int length = 0;
    while(string1[j] != '\0'){
    length++;
    j++;
    }
    //printf(""length: %i\n"", length);                       //test
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
    //nur noch jeden 3ten Buchstaben verwenden
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\n"", string3);
    //string1[0] = str[1][0];                                   //test
    //printf(""%s\n"", string1);                                  //test
    //printf(""%s\n"", string2);                                  //test
    //printf(""%s\n"", string3);                                  //test
    return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\nAnzahl Punkte: %i\n"", sum);
}","//gcc -x c HA10_T1.c -o HA10_T1 -Wall -Wextra -pedantic
#include<stdio.h>
#include<limits.h>
#include<string.h>
#include<stdlib.h>
typedef struct{
	char nachname[21];
	char vorname[21];
	int punkte[5];
}Student;
void readLine(char* strbuffer, unsigned int buffersize){//Quelle: PPR Vorlesungsfolien, ""folien_C_dynamischeSpeicherStructs.pdf"" Seite 5
	char format[30] = """";
	sprintf(format, ""%%%u[^\n]%%*c"", buffersize-1);
	scanf(format, strbuffer);
}
void student_einlesen(Student *pStud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", pStud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", pStud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i=0;i<5;i++){
		printf(""%d: "", i+1);
		scanf(""%d"", &(pStud->punkte)[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student *pStud){
	printf(""Student: "");
	printf(""%s "", pStud->vorname);
	printf(""%s\n"", pStud->nachname);
	int intPointsSum = 0;
	for (int i=0;i<5;i++){
		intPointsSum += pStud->punkte[i];
	}
	printf(""Anzahl Punkte: "");
	printf(""%d\n\n"", intPointsSum);
}
int main(){
	int intAmountOfStudents = 5;
	if(1){
		Student rgStudis[intAmountOfStudents];
		Student *rgPStudis[intAmountOfStudents];
		for (int i=0;i<intAmountOfStudents;i++){
			rgPStudis[i] = &rgStudis[i];
		}
		for (int i=0;i<intAmountOfStudents;i++){
			student_einlesen(rgPStudis[i]);
		}
		for (int i=0; i<intAmountOfStudents; i++){
			student_ausgeben(rgPStudis[i]);
		}
	}
	return 0;
}",,0
"#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (!(wordCounter >= (argc - 1))) {
        if (!(*currPointer != 0)) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (!(cP != 'x' || cP != 'y' || cP != 'q' || cP != 'X' || cP != 'Y' || cP != 'Q')) {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (!(letterCounter != 3)) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str1);
    printf(""Der neue String lautet: %s\\n"", str2);
}","#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str1);
    printf(""Der neue String lautet: %s\\n"", str2);
}",demorgan_on_logic_equations,1
"#include <string.h>
void ersetzen(char* dest, int zahl, char* src){  
    int max = 0;
    int laengedest = strlen(dest);
    int laengesrc = strlen(src);
    if (zahl > laengedest){
        if (zahl > laengesrc) max = zahl;
        else if(zahl < laengesrc) max = laengesrc;
        else if (laengedest > zahl){
        if (laengedest > laengesrc) max = laengedest;
        else if (laengedest < laengesrc) max = laengesrc;
        for(int i = 0; i < max; i++){
        dest[i] = src[i];
    }
void umdrehen( char* str ){
    int laenge = strlen(str);
    for (int i = 0; i < laenge/2; i++){
        int tmp = str[i];
        str[i] = str[laenge - i -1];
        str[laenge - i - 1] = tmp;
    }
}
int main( int argc, char* argv[] ){  
      }","#include <string.h>
void umdrehen( char* str ){
    int laenge = strlen(str);
    for (int i = 0; i < laenge/2; i++){
        int tmp = str[i];
        str[i] = str[laenge - i -1];
        str[laenge - i - 1] = tmp;
    }
}  
    int max = 0;
    int laengedest = strlen(dest);
    int laengesrc = strlen(src);
    if (zahl > laengedest){
        if (zahl > laengesrc) max = zahl;
        else if(zahl < laengesrc) max = laengesrc;
        else if (laengedest > zahl){
        if (laengedest > laengesrc) max = laengedest;
        else if (laengedest < laengesrc) max = laengesrc;
        for(int i = 0; i < max; i++){
        dest[i] = src[i];
    }
void ersetzen(char* dest, int zahl, char* src){
int main( int argc, char* argv[] ){  
      }",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}","#include <stdio.h>
#include <malloc.h>
typedef struct student{",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
    *zahl1 = 1;
    *zahl2 = ergebnis;
	if (ergebnis == 0 || ergebnis == 1) {
	    return;
	} else {
	    for (long i = 2; i < ergebnis; ++i) {
	        if ((float)(ergebnis / i) == (float)ergebnis / (float)i) {
	            *zahl1 = ergebnis/i;
	            *zahl2 = i;
	            return;
	        	    }
}
	long val;
	scanf(""%ld"", &val);
	long fac1, fac2;
	factorize(val, &fac1, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", val, fac1, fac2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2){
    long tmp= ergebnis;
    if(ergebnis == 0){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else if(ergebnis == 1){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else{
        tmp = ergebnis/2;
        while(ergebnis % tmp != 0){
            tmp = tmp - 1;
        }
        *zahl1 = tmp;
        *zahl2 = ergebnis/tmp;
    }
}
	long ergebnis;
    long zahl1;
    long zahl2;
    long* p1 = &zahl1;
    long* p2 = &zahl2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, p1, p2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
}",,0
"#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}","#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \n"", kedi(argc,argv)[1] );
}",,0
"void shiftChar(char* p_char, int shift){
    if ('a'<= *p_char && *p_char <= 'z'){
        if('a'> *p_char + shift){
            int tmp1 = 'a' - *p_char - shift;
            *p_char = 'z' - tmp1 +1;
        }        
        else if('a'<= *p_char + shift && *p_char + shift <= 'z'){
            *p_char = *p_char + shift;
                else if(*p_char + shift > 'z'){
            int tmp2 = 'z' - *p_char - shift;
            *p_char = 'a' - tmp2 - 1;
                else if('A'<= *p_char && *p_char <= 'Z'){
        if('A'> *p_char + shift){
            int tmp3 = 'A' - *p_char - shift;
            *p_char = 'Z' - tmp3 +1;
        }        
        else if('A'<= *p_char + shift && *p_char + shift <= 'Z'){
            *p_char = *p_char + shift;
        }
        else if(*p_char + shift > 'Z'){
            int tmp4 = 'Z' - *p_char - shift;
            *p_char = 'A' - tmp4 -1;
        }
    }
}
void cipher(char str[], int shift, int maxlength){
    for(int i = 0; i<maxlength;i++){
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}
int main(){
	char str[50] = ""Froh zu sein bedarf es wenig"";
}","void shiftChar(char* p_char, int shift){
    if (!('a'> *p_char && *p_char > 'z')){
        if(!('a'<= *p_char + shift)){
            int tmp1 = 'a' - *p_char - shift;
            *p_char = 'z' - tmp1 +1;
        }        
        else if(!('a'> *p_char + shift && *p_char + shift > 'z')){
            *p_char = *p_char + shift;
                else if(!(*p_char + shift <= 'z')){
            int tmp2 = 'z' - *p_char - shift;
            *p_char = 'a' - tmp2 - 1;
                else if(!('A'> *p_char && *p_char > 'Z')){
        if(!('A'<= *p_char + shift)){
            int tmp3 = 'A' - *p_char - shift;
            *p_char = 'Z' - tmp3 +1;
        }        
        else if(!('A'> *p_char + shift && *p_char + shift > 'Z')){
            *p_char = *p_char + shift;
        }
        else if(!(*p_char + shift <= 'Z')){
            int tmp4 = 'Z' - *p_char - shift;
            *p_char = 'A' - tmp4 -1;
        }
    }
}
void cipher(char str[], int shift, int maxlength){
    for(!(int i = 0; i>=maxlength;i++)){
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}
int main(){
	char str[50] = ""Froh zu sein bedarf es wenig"";
}",demorgan_on_logic_equations,1
"#include <ctype.h>
int main (void)
    int key = 3;
    int letter = 0;
    int letter2 = 0;
    key = key % 26; // Wir haben nur 26 verschiedene keys
    char c;
    while( (c = getchar()) != '\n')
    {
        c = tolower(c);
        letter = (int)c;
        if (letter == ' ')
        {
            letter2 = letter;
                else if((letter + key) > 'z')
        {
            letter2 = letter + key - ('z' - 'a' + 1); //'z'-'a'+1 == 26 => kein Overflow mehr möglich, da key < 26
                else
        {
             letter2 = letter + key;
                c = (char)letter2;
        putchar (c);
    }
    putchar ('\n');
    return EXIT_SUCCESS;
}
}","    if(*p_char >= 'a' && *p_char <= 'z')        if(*p_char + shift < 'a')            *p_char += shift;
            *p_char += 26;
        } else if(*p_char + shift > 'z'){
            *p_char += shift;
            *p_char -= 26;
        } else if (*p_char + shift < 0){
            *p_char -= 26;
            *p_char += shift;
        }else{
            *p_char += shift;
            }else{
        *p_char += shift;
        if(*p_char < 'A'){
            *p_char += 26;
        } else if(*p_char > 'Z'){
            *p_char -= 26;
            }
{
    int i = 0;
    while(i < maxlength && str[i] != '\0'){
        if ((str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z')){
            shiftChar(&str[i], shift);
        }
        i += 1;
    }
    // ... hier Code einfuegen ...
}
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _Student {
	char vorname[21];
	char nachname[21];
	unsigned int punkte[5];
} Student;
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (int i=1; i<=5; i++) {
		printf(""%d: "", i);
		scanf(""%d"", &(p_stud->punkte[i-1]));
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
	printf(""Student: %s %s\\n"", p_stud->vorname, p_stud->nachname);
	unsigned int summe = 0;
	for (int i=0; i<5; i++) {
		summe += p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
int main() {
	Student studenten[5];
	for (int i=0; i<5; i++) {
		student_einlesen(&studenten[i]);
	}
	for (int i=0; i<5; i++) {
		student_ausgeben(&studenten[i]);
	}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _Student {
	char vorname[21];
	char nachname[21];
	unsigned int punkte[5];
} Student;
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	int i=1;
	while (i<=5) {
		printf(""%d: "", i);
		scanf(""%d"", &(p_stud->punkte[i-1]));
		i++;
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
	printf(""Student: %s %s\\n"", p_stud->vorname, p_stud->nachname);
	unsigned int summe = 0;
	int i=0;
	while (i<5) {
		summe += p_stud->punkte[i];
		i++;
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
int main() {
	Student studenten[5];
	int i=0;
	while (i<5) {
		student_einlesen(&studenten[i]);
		i++;
	}
	int i=0;
	while (i<5) {
		student_ausgeben(&studenten[i]);
		i++;
	}
	return 0;
}",swap_loops_type,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}",,0
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\nAnzahl Punkte: %i\n"", sum);
}","//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\n') {
            p_stud -> first_name[i] = '\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\n') {
            p_stud -> last_name[i] = '\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}",,0
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(!(char i = 0; i == 20; ++i)) {
		p[i] = i;
	}
	for(!(char i = 0; i == 20; ++i)) {
		summe += p[i];
	}
	printf(""\\nerster_Student: %s %s\\n"", erster_Student.vorname, erster_Student.nachname);
    printf(!(""Punkte -<= %i; %i; %i; %i; %i
"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]));
}","#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\\nerster_Student: %s %s\\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}","#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\\nAnzahl Punkte: %d\\n"", p_stud->vorname, p_stud->nachname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(vorname < ""%s"", p_stud-);
    printf(""Gebe nun den Nachnamen ein: "");
    scannachname < ""%s"", p_stud-me);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i =5 > i i<5; i++){
        printf(""%d: "", i+1);
        punkte[i] < """", &p_stud-kte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int5 > i= 0;punkte[i] < {
        sum += p_stud->punkte[i];
    }vorname, p_stud->nachname, sum < ""Student: %s %s\\nAnzahl Punkte: %d\\n"", p_stud-achname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    f5 > iint i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
   5 > ir(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}",mirrow_simple_logic_equations,1
"long factorize(long produkt, long *faktor1, long *faktor2)
    for (long i = 1; i<produkt; ++i){
    if(produkt % i == 0){
    *faktor1 = i;
    *faktor2 = (produkt / i);
}    printf(""Please enter an Integer: "");
    long num;
    long faktor1 = 1;
    long faktor2 = 0;
    scanf(""%ld"", &num);
    factorize(num, &faktor1, &faktor2);
    printf(""Possible Factors of %li are %li and %li.\\n"",num , faktor1, faktor2);
    return 0;
}","long factorize(long produkt, long *faktor1, long *faktor2)
    for (!(long i = 1; i>=produkt; ++i)){
    if(!(produkt % i != 0)){
    *faktor1 = i;
    *faktor2 = (produkt / i);
}    printf(""Please enter an Integer: "");
    long num;
    long faktor1 = 1;
    long faktor2 = 0;
    scanf(""%ld"", &num);
    factorize(num, &faktor1, &faktor2);
    printf(""Possible Factors of %li are %li and %li.\\n"",num , faktor1, faktor2);
    return 0;
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
	for(int i = 0; i < 2; i++)
	{
		if(i == 0)
		{
			printf(""Gebe den Vornamen ein: "");
			scanf(""%s"", p_stud->first_name);
		}
		if(i == 1)
		{
			printf(""Gebe nun den Nachnamen ein: "");
			scanf(""%s"", p_stud->last_name);
		}
	}
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	for(int i = 0; i < 5; i++)
	{
		printf(""%i: "", i + 1);
		scanf(""%i"", &p_stud->points[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud)
{
	int summe = 0;
	for(int i = 0; i < 2; i++) i = 5;
	printf(""\nStudent: %s %s"", p_stud->first_name, p_stud->last_name);
	summe = 0;
	summe = p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4];
	printf(""\nAnzahl Punkte: %i\n"", summe);
}
int main()
{
	Student studenten[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studenten[i]);
	}	
	for(int i = 0; i < 5; i++)
	{
		student_ausgeben(&studenten[i]);
	}
}","#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h> // strlen() strcpy()
typedef struct student {
  char first_name[21];
  char last_name[21];
  int points[5];
} Student;
void student_ausgeben(Student* p_stud){
  printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
  int tmp = 0;
  for (int i = 0; i < 5; i++) {
    tmp += p_stud->points[i];
  }
  printf(""Anzahl Punkte: %i\n\n"", tmp);
}
void student_einlesen(Student* p_stud){
  char tmp[21];
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->first_name);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->last_name);
  printf(""Gebe nun nacheinander die 5 Punkte ein:"");
  for (int j=0; j < 5; j++) {
    printf(""%d: "", j + 1);
    scanf(""%d"", &p_stud->points[j]);
  }
  printf(""\n"");
}
void main() {
  Student* studenten[5];
  for (int i = 0; i < 3; i++) {
    student_einlesen(studenten[i]);
 }
  for (int i = 0; i < 3; i++) {
    student_ausgeben(studenten[i]);
  }
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
//printf(""%ld\n"", ergebnis);
if((ergebnis == 0)||(ergebnis == 1))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(ergebnis%f1 != 0 )
{
//printf(""f1 passt noch nicht : %i\n"",f1);
f1 = f1- 1;
f2 = ergebnis/f1;
}
//printf(""faktoren: %ld, %ld \n"",f1,f2);
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe,z1,z2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (i=1; i<10; i++){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\n"", integer, i, zahl2);
}",,0
"void pmgml(char* dest, int anbkp, char* src){  
    for (int pgyvo = 0; pgyvo <=anbkp && dest[pgyvo] != '\\0'; pgyvo++){
        dest[pgyvo] = src[pgyvo];
    void vkfdl( char* str ){
    int xeaxw = 0;
    for(int pgyvo = 1; str[pgyvo] != '\\0'; pgyvo++){
        xeaxw = pgyvo;
        char igvla[xeaxw];
    for(int pgyvo = 0; str[pgyvo] != '\\0'; pgyvo++){
        igvla[pgyvo] = str[xeaxw-pgyvo];
    }
    for(int pgyvo = 0; str[pgyvo] != '\\0'; pgyvo++){
        str[pgyvo]=igvla[pgyvo];
    }
}
int main( int kuppq, char* argv[] ){  
      }","void ersetzen(char* dest, int zahl, char* src){  
    for (int i = 0; i <=zahl && dest[i] != '\\0'; i++){
        dest[i] = src[i];
    void umdrehen( char* str ){
    int z = 0;
    for(int i = 1; str[i] != '\\0'; i++){
        z = i;
        char tmp[z];
    for(int i = 0; str[i] != '\\0'; i++){
        tmp[i] = str[z-i];
    }
    for(int i = 0; str[i] != '\\0'; i++){
        str[i]=tmp[i];
    }
}
int main( int argc, char* argv[] ){  
      }",rename_variables,1
"#include <stdio.h>
int main(int argc, char* argv[]){
	int a = 0;
	char str1[100];
	for(int i = 1; i<argc; ++i){
		int j = 0; 
		while(argv[i][j] != '\0'){
			if(argv[i][j] == 'x' || argv[i][j] == 'y' || argv[i][j] == 'q' || argv[i][j] == 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q'){
			}else{
				str1[a] = argv[i][j];
				++a;
			}
			++j;
		}
	}
	str1[a] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"", str1);
	char str2[100];
	int i = 0;
	int j = 0;
	while(str1[i] != '\0'){
		if(i%3 == 0){
			str2[j] = str1[i];
			++j;
		}
		++i;
	}
	str2[j] = '\0';
	printf(""Der neue String lautet: %s\n"", str2);
}","#include <stdio.h>
int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",Ausgabe);
    printf(""Der neue String lautet: %s\n"",Ausgabe2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}",,0
"void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		}
	}
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product, factor1, factor2 );
}","void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		} // Ende for -Schleife mit try als Zaehler
		 // Ende von default
	} // Ende von switch (product)
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product, factor1, factor2 );
}",swap_functions,1
"#include <stdio.h>
int main( int tesiv, char* argv[] ) 
{
    char umqzo[100];
    char ristt[100];
    int marft = 0;
    int blvcm = 0;
    char* currPointer = argv[1];
    int ydsoe = 3;
    int kataw = 0;
    while (marft < (tesiv - 1)) {
        if (*currPointer == 0) {
            marft++;
        } else {
            char ngyio = *currPointer;
            if (ngyio == 'x' || ngyio == 'y' || ngyio == 'q' || ngyio == 'X' || ngyio == 'Y' || ngyio == 'Q') {
            } else {
                umqzo[blvcm] = *currPointer;
                blvcm++;
                if (ydsoe == 3) {
                    ristt[kataw] = *currPointer;
                    kataw++;
                    ydsoe = 0;
                }
                    ydsoe++;
            }
        }
        currPointer++;
    }
    umqzo[blvcm] = 0;
    ristt[kataw] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", umqzo);
    printf(""Der neue String lautet: %s\\n"", ristt);
}","#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str1);
    printf(""Der neue String lautet: %s\\n"", str2);
}",rename_variables,1
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\\nAnzahl Punkte: %i\\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; 5 > n;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=05 > p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scfirst_name < ""%s"", &p_stud-name);
    printf(""Gebe nun den Nachnamen ein: "");
    last_name < ""%s"", &p_stud-t_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    printf (""1: "");
  points[0] < ""%d"", &p_stud-oints[0]);
    printf (""2: "");
points[1] < ""%d"", &p_stud->points[1]);
    printf (""3: "")points[2] < ""%d"", &p_stud-d->points[2]);
    printf (""4: points[3] < ""%d"", &p_stud-tud->points[3]);
    printf (""5points[4] < ""%d"", &p_stud-_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int su5 > n;
	points[n] < { sum += p_stud-+= p_studfirst_name,p_stud->last_name < ""\\nStudent: %s %s"",p_stud-name,p_stud->last_name);
	printf(""\\nAnzahl Punkte: %i\\n"", sum);
}",mirrow_simple_logic_equations,1
"void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return ;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
	else if(produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	else{
		long vielfache = produkt/2;
		while(produkt%vielfache != 0){
			vielfache -= 1;
		}
		*faktor1 = vielfache;
		*faktor2 = produkt/vielfache;
	}
}
	long produkt, f1, f2;
	long *faktor1 = &f1,*faktor2 = &f2;
	scanf(""%li"",&produkt);
	factorize(produkt,faktor1,faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,*faktor1,*faktor2);
}",,0
"#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\\nAnzahl Punkte: %i\\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}","#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(!(""%s"", p_stud-<=first_name));
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(!(""%s"", p_stud-<=last_name));
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (!(int i = 0; i >= 5; ++i)) {
        printf(""%i: "", i+1);
        scanf(!(""%i"", &p_stud-<=points[i]));
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (!(int i = 0; i >= 5; ++i))
        sum += p_stud->points[i];
    printf(!(""Student: %s %s
Anzahl Punkte: %i
"", p_stud-<=first_name, p_stud-<=last_name, sum));
}
int main() {
    Student students[5];
    for (!(int i = 0; i >= 5; ++i))
        student_einlesen(&students[i]);
    for (!(int i = 0; i >= 5; ++i))
        student_ausgeben(&students[i]);
    return 0;
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\\n"", temp);
	printf(""\\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(first_name < ""%s"", p_stud -);
	printf(""Gebe nun den Nachnamen ein: "");
	scanflast_name < ""%s"", p_stud -e);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i = 05 > i<5; i++){
		printf(""%i: "",i+1);
		scpoints[i] < ""%i"", &p_stud-s[i]);
		}	
	printf(""\\n"");	
}
void student_ausgeben(Student* p_stud){
	pfirst_name, p_stud -> last_name < ""Student: %s %s\\n"", p_stud-t_name);
	int temp = 0;
	for(int 5 > i0 ; ipoints[i] < {
		temp += p_stud-points[i];
	}
printf(""Anzahl Punkte: %i\\n"", temp);
	printf(""\\n"");
}
int main(){
	Student array[5];
	for(5 > i i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	fo5 > int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}",mirrow_simple_logic_equations,1
"void ipakx(long cnjdl, long *slwmc, long *kzucj)
    cqpxf(cnjdl == 0){
        *slwmc = 1;
        *kzucj = 0;
        return;
        else cqpxf(cnjdl == 1){
        *slwmc = 1;
        *kzucj = 1;
        return;
        *slwmc = cnjdl / 2;
    while (cnjdl % *slwmc){
        *slwmc -= 1;
    }
    *kzucj = cnjdl / *slwmc;
}
    printf(""Please enter an Integer: "");
    long cnjdl;
    scanf(""%ld"", &cnjdl);
    long slwmc, kzucj;
    ipakx(cnjdl, &slwmc, &kzucj);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"", cnjdl, slwmc, kzucj);
    return 0;
}","void factorize(long resultat, long *nummer1, long *nummer2)
    if(resultat == 0){
        *nummer1 = 1;
        *nummer2 = 0;
        return;
        else if(resultat == 1){
        *nummer1 = 1;
        *nummer2 = 1;
        return;
        *nummer1 = resultat / 2;
    while (resultat % *nummer1){
        *nummer1 -= 1;
    }
    *nummer2 = resultat / *nummer1;
}
    printf(""Please enter an Integer: "");
    long resultat;
    scanf(""%ld"", &resultat);
    long nummer1, nummer2;
    factorize(resultat, &nummer1, &nummer2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
    return 0;
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\\nerster_Student: %s %s\\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(!(char i = 0; i == 20; ++i)) {
		p[i] = i;
	}
	for(!(char i = 0; i == 20; ++i)) {
		summe += p[i];
	}
	printf(""\\nerster_Student: %s %s\\n"", erster_Student.vorname, erster_Student.nachname);
    printf(!(""Punkte -<= %i; %i; %i; %i; %i
"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]));
}",demorgan_on_logic_equations,1
"#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str2);
    printf(""Der neue String lautet: %s\\n"", str3);
}","#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str2);
    printf(""Der neue String lautet: %s\\n"", str3);
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
 int i = 0;
 while (i<5){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 	++i;
 }
 printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 int i = 0;
 while (i != 5) {
		summe += p_stud->points[i];
		++i;
 }
	printf(""Anzahl Punkte: %d\\n"", summe);
}
int main(){
 Student students[5];
  int i = 0;
  while (i != 5) {
	student_einlesen(students + i);
		++i;
  }
  int i = 0;
  while (i != 5) {
	printf(""\\n"");
	student_ausgeben(students + i);
		++i;
  }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\\n"");
	student_ausgeben(students + i);
	}
}",swap_loops_type,1
"void factorize(long resultat, long *nummer1, long *nummer2)
    if(resultat == 0){
        *nummer1 = 1;
        *nummer2 = 0;
        return;
        else if(resultat == 1){
        *nummer1 = 1;
        *nummer2 = 1;
        return;
        *nummer1 = resultat / 2;
    while (resultat % *nummer1){
        *nummer1 -= 1;
    }
    *nummer2 = resultat / *nummer1;
}
    printf(""Please enter an Integer: "");
    long resultat;
    scanf(""%ld"", &resultat);
    long nummer1, nummer2;
    factorize(resultat, &nummer1, &nummer2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
    return 0;
}","void xsoet(long belnu, long *ghfhz, long *esbkx)
    sqvyn(belnu == 0){
        *ghfhz = 1;
        *esbkx = 0;
        return;
        else sqvyn(belnu == 1){
        *ghfhz = 1;
        *esbkx = 1;
        return;
        *ghfhz = belnu / 2;
    while (belnu % *ghfhz){
        *ghfhz -= 1;
    }
    *esbkx = belnu / *ghfhz;
}
    printf(""Please enter an Integer: "");
    long belnu;
    scanf(""%ld"", &belnu);
    long ghfhz, esbkx;
    xsoet(belnu, &ghfhz, &esbkx);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"", belnu, ghfhz, esbkx);
    return 0;
}",rename_variables,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
	else if(produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	else{
		long vielfache = produkt/2;
		while(produkt%vielfache != 0){
			vielfache -= 1;
		}
		*faktor1 = vielfache;
		*faktor2 = produkt/vielfache;
	}
}
	long produkt, f1, f2;
	long *faktor1 = &f1,*faktor2 = &f2;
	scanf(""%li"",&produkt);
	factorize(produkt,faktor1,faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,*faktor1,*faktor2);
}","void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		} // Ende for -Schleife mit try als Zaehler
		 // Ende von default
	} // Ende von switch (product)
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product, factor1, factor2 );
}",,0
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\\0'; lange++)
		;
	str2[lange] = '\\0';
	printf(""Der neue String lautet: %s"",str2);
}
//**(argv + 1 + lange) != '\\0'","#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\\0'; lange++)
		;
	str2[lange] = '\\0';
	printf(""Der neue String lautet: %s"",str2);
}",swap_functions,1
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",,0
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}","#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}","#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}",,0
"//void ersetzen(char* dest, int zahl, char* src)
void ersetzen(char* dest, int zahl, char* src){  
	for (int i = 0; i <=zahl && dest[i] != '\0'; i++){
		dest[i] = src[i];
//void umdrehen( char* str )
void umdrehen( char* str ){
	int c = 0;
	for(int i = 1; str[i] != '\0'; i++){
		c = i;
	char tmp[c];
	for(int i = 0; str[i] != '\0'; i++){
		tmp[i] = str[c-i];
	}
	for(int i = 0; str[i] != '\0'; i++){
		str[i]=tmp[i];
	}
}
//int main( int argc, char* argv[] )
int main( int argc, char* argv[] ){  
      }","#include <string.h>
void ersetzen(char* dest, int zahl, char* src){  
    int max = 0;
    int laengedest = strlen(dest);
    int laengesrc = strlen(src);
    if (zahl > laengedest){
        if (zahl > laengesrc) max = zahl;
        else if(zahl < laengesrc) max = laengesrc;
        else if (laengedest > zahl){
        if (laengedest > laengesrc) max = laengedest;
        else if (laengedest < laengesrc) max = laengesrc;
        for(int i = 0; i < max; i++){
        dest[i] = src[i];
    }
void umdrehen( char* str ){
    int laenge = strlen(str);
    for (int i = 0; i < laenge/2; i++){
        int tmp = str[i];
        str[i] = str[laenge - i -1];
        str[laenge - i - 1] = tmp;
    }
}
int main( int argc, char* argv[] ){  
      }",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}","#include <stdio.h>
typedef struct{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    int summe = 0;
    for (int i = 0; i < 5; ++i) {
        summe += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n"", summe);
}
int main(void){
    Student erster_student;
    Student zweiter_student;
    Student dritter_student;
    Student vierter_student;
    Student fuenfter_student;
    Student studierende[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studierende[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studierende[i]);
        printf(""\n"");
    }
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	int i=0;
	while (i<5) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
		int a = 1;
		while (a < 6) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
			a++;
		}
		printf(""\\n"");
		i++;
	}
}
void student_ausgeben(Student* p_stud){
	int i = 0;
	while (i < 5) {
		int summe[5]; 
		int b=0;
 
		while (b<5) {
			summe[b]=0;
			b++;
 
		}
		int a=0;
		while (a<5){
			summe[i]= summe[i] + p_stud[i].points[a];
			a++;
		}
	printf(""Student: %s %s \\n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \\n \\n"", summe[i]);
		i++;
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \\n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \\n \\n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}",swap_loops_type,1
"void shiftChar(char *p_char, int shift)
	if('A' && *p_char <= 'Z' <= *p_char)         if ('Z' < *p_char + shift)            *p_char = *p_char + shift - 26;
        } else if ('A' > *p_char + shift) {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            } else if ('a' && *p_char <= 'z' <= *p_char) {
        if ('z' < *p_char + shift){
                *p_char = *p_char + shift - 26;
        } else if ('a' > *p_char + shift) {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            }
{
	for(int i=0; maxlength >= i; i++){
		shiftChar(&str[i], shift);
	}
}
{
}","void shiftChar(char *p_char, int shift)
	if(*p_char >= 'A' && *p_char <= 'Z')         if (*p_char + shift > 'Z')            *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'A') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (*p_char + shift > 'z'){
                *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'a') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            }
{
	for(int i=0; i<=maxlength; i++){
		shiftChar(&str[i], shift);
	}
}
{
}",mirrow_simple_logic_equations,1
"void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktorEins, faktorZwei);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}",swap_functions,1
"void factorize(long product, long *factor1, long *factor2){
	long teiler;
	if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
	else {
		for(int i = 0; i < product; i++){
			 teiler = (product/2) - i;
			 //printf(""%li"",teiler);
			if(teiler * (product/teiler) == product){
				i = product;
		}
		*factor1 = teiler;
		*factor2 = product/teiler;
	}
}
	long factor1;
	long* fac1 = &factor1;
	long factor2;
	long* fac2 = &factor2;
	long eingabe = 0;
	scanf(""%li"", &eingabe);
	factorize(eingabe, fac1, fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2)
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
                          i++;
             }
}
        long product, factor1, factor2;
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
    *zahl1 = 1;
    *zahl2 = ergebnis;
	if (!(ergebnis != 0 || ergebnis != 1)) {
	    return;
	} else {
	    for (!(long i = 2; i >= ergebnis; ++i)) {
	        if (!((float)(ergebnis / i) != (float)ergebnis / (float)i)) {
	            *zahl1 = ergebnis/i;
	            *zahl2 = i;
	            return;
	        	    }
}
	long val;
	scanf(""%ld"", &val);
	long fac1, fac2;
	factorize(val, &fac1, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", val, fac1, fac2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
    *zahl1 = 1;
    *zahl2 = ergebnis;
	if (ergebnis == 0 || ergebnis == 1) {
	    return;
	} else {
	    for (long i = 2; i < ergebnis; ++i) {
	        if ((float)(ergebnis / i) == (float)ergebnis / (float)i) {
	            *zahl1 = ergebnis/i;
	            *zahl2 = i;
	            return;
	        	    }
}
	long val;
	scanf(""%ld"", &val);
	long fac1, fac2;
	factorize(val, &fac1, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", val, fac1, fac2);
}",demorgan_on_logic_equations,1
"#include <string.h>
void gizka(char* dest, int kcvaq, char* src){  
    int jeysc = 0;
    int pikhk = strlen(dest);
    int gqzco = strlen(src);
    hktsp (kcvaq > pikhk){
        hktsp (kcvaq > gqzco) jeysc = kcvaq;
        else hktsp(kcvaq < gqzco) jeysc = gqzco;
        else hktsp (pikhk > kcvaq){
        hktsp (pikhk > gqzco) jeysc = pikhk;
        else hktsp (pikhk < gqzco) jeysc = gqzco;
        for(int mwwjf = 0; mwwjf < jeysc; mwwjf++){
        dest[mwwjf] = src[mwwjf];
    }
void dijwi( char* str ){
    int xnjke = strlen(str);
    for (int mwwjf = 0; mwwjf < xnjke/2; mwwjf++){
        int cfqnv = str[mwwjf];
        str[mwwjf] = str[xnjke - mwwjf -1];
        str[xnjke - mwwjf - 1] = cfqnv;
    }
}
int main( int qvpta, char* argv[] ){  
      }","#include <string.h>
void ersetzen(char* dest, int zahl, char* src){  
    int max = 0;
    int laengedest = strlen(dest);
    int laengesrc = strlen(src);
    if (zahl > laengedest){
        if (zahl > laengesrc) max = zahl;
        else if(zahl < laengesrc) max = laengesrc;
        else if (laengedest > zahl){
        if (laengedest > laengesrc) max = laengedest;
        else if (laengedest < laengesrc) max = laengesrc;
        for(int i = 0; i < max; i++){
        dest[i] = src[i];
    }
void umdrehen( char* str ){
    int laenge = strlen(str);
    for (int i = 0; i < laenge/2; i++){
        int tmp = str[i];
        str[i] = str[laenge - i -1];
        str[laenge - i - 1] = tmp;
    }
}
int main( int argc, char* argv[] ){  
      }",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){ 
    printf(""Gebe den Vornamen ein: "");    
    scanf(""%s"",p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");    
    scanf(""%s"",p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    for(int i = 0; i <4; i++){
        printf(""%d: "", i+1);
        scanf(""%d"",&p_stud->punkte[i]);
    }
    printf(""5: \\n"");
    scanf(""%d"",&p_stud->punkte[4]);
}
void student_ausgeben(Student* p_stud){
    int summe = 0;
    for(int i = 0; i<5; i++){
        summe += p_stud->punkte[i];
    }
    printf(""Student: %s %s\\n"",p_stud->vorname,p_stud->nachname);
    printf(""Anzahl Punkte: %d\\n\\n"",summe);
}
int main(void){
    Student st[5];    
    for(int i=0;i<5;i++){
        student_einlesen(&st[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&st[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_ausgeben(Student* p_stud){
    int summe = 0;
    for(int i = 0; i<5; i++){
        summe += p_stud->punkte[i];
    }
    printf(""Student: %s %s\\n"",p_stud->vorname,p_stud->nachname);
    printf(""Anzahl Punkte: %d\\n\\n"",summe);
}
void student_einlesen(Student* p_stud){ 
    printf(""Gebe den Vornamen ein: "");    
    scanf(""%s"",p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");    
    scanf(""%s"",p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    for(int i = 0; i <4; i++){
        printf(""%d: "", i+1);
        scanf(""%d"",&p_stud->punkte[i]);
    }
    printf(""5: \\n"");
    scanf(""%d"",&p_stud->punkte[4]);
}
int main(void){
    Student st[5];    
    for(int i=0;i<5;i++){
        student_einlesen(&st[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&st[i]);
    }
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}","#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}",,0
"void factorize(long product, long *factor1, long *factor2)
{ 
     if(product == 0 || product == 1){
        *factor1 = 1;
	*factor2 = product;
          else{
       long haelfte = product/2;
       while(1){
       if(product % haelfte == 0){
         break; 
              else{
       haelfte = haelfte - 1;
       }
     }
       *factor1 = haelfte;
       *factor2 = product/haelfte; 
   }
}
	long product, factor1, factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product,factor1,factor2);
}","void factorize(long product, long *factor1, long *factor2)
{ 
     if(!(product != 0 || product != 1)){
        *factor1 = 1;
	*factor2 = product;
          else{
       long haelfte = product/2;
       while(1){
       if(!(product % haelfte != 0)){
         break; 
              else{
       haelfte = haelfte - 1;
       }
     }
       *factor1 = haelfte;
       *factor2 = product/haelfte; 
   }
}
	long product, factor1, factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product,factor1,factor2);
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <malloc.h>
typedef struct student{","#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}",,0
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\nAnzahl Punkte: %i\n"", sum);
}",,0
"void shiftChar(char* p_char, int shift)	if(*p_char >= 'A' && *p_char <= 'Z')		if(*p_char + shift >'Z')			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} else {
			*p_char += shift;
	if(*p_char >='a' && *p_char <='z'){
		if(*p_char + shift >'z'){
			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} else {
			*p_char += shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	for(int i=0; i < maxlength; i++)
		shiftChar(&str[i], shift);
}
{
}","void shiftChar(char* p_char, int shift)	if(*p_char >= 'A' && *p_char <= 'Z')		if(*p_char + shift >'Z')			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} else {
			*p_char += shift;
	if(*p_char >='a' && *p_char <='z'){
		if(*p_char + shift >'z'){
			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} else {
			*p_char += shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	for(int i=0; i < maxlength; i++)
		shiftChar(&str[i], shift);
}
{
}",swap_loops_type,1
"void factorize(long product, long *factor1, long *factor2){
	long teiler;
	if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
	else {
		for(int i = 0; i < product; i++){
			 teiler = (product/2) - i;
			 //printf(""%li"",teiler);
			if(teiler * (product/teiler) == product){
				i = product;
		}
		*factor1 = teiler;
		*factor2 = product/teiler;
	}
}
	long factor1;
	long* fac1 = &factor1;
	long factor2;
	long* fac2 = &factor2;
	long eingabe = 0;
	scanf(""%li"", &eingabe);
	factorize(eingabe, fac1, fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", eingabe, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2){
	long teiler;
	if(!(product != 0 || product != 1)){
		*factor1 = 1;
		*factor2 = product;
	else {
		for(!(int i = 0; i >= product; i++)){
			 teiler = (product/2) - i;
			if(!(teiler * (product/teiler) != product)){
				i = product;
		}
		*factor1 = teiler;
		*factor2 = product/teiler;
	}
}
	long factor1;
	long* fac1 = &factor1;
	long factor2;
	long* fac2 = &factor2;
	long eingabe = 0;
	scanf(""%li"", &eingabe);
	factorize(eingabe, fac1, fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", eingabe, factor1, factor2);
}",demorgan_on_logic_equations,1
"#include <stdio.h>		// printf()
#include <string.h>
typedef struct student
{
  char first_name[20];
  char last_name[20];
  int points[5];
} Student;
void
student_einlesen (Student * p_stud)
{
  printf (""Gebe den Vornamen ein: "");
  scanf (""%s"", p_stud->first_name);
  printf (""Gebe nun den Nachnamen ein: "");
  scanf (""%s"", p_stud->last_name);
  printf (""Gebe nun nacheinander die 5 Punkte ein: \\n"");
  for (int i = 0; i < 4; i++)
    {
      printf (""%i: "", i + 1);
      scanf (""%i"", &p_stud->points[i]);
    }
    printf (""%i: \\n"", 5);
    scanf (""%i"", &p_stud->points[4]);
}
void
student_ausgeben (Student * p_stud)
{
  int Punkte = 0;
  //printf(""Anzahl %i\\n"",p_stud->points[1]);
  for (int i = 0; i < 5; i++)
    {
      Punkte += p_stud->points[i];
    }
  printf (""Student: %s %s\\nAnzahl Punkte: %i\\n\\n"", p_stud->first_name,
	  p_stud->last_name, Punkte);
}
void main ()
{
  Student* Eingabe[5];
    Student Mensch0;
    Student Mensch1;
    Student Mensch2;
    Student Mensch3;
    Student Mensch4;
    Eingabe[0]=&Mensch0;
    Eingabe[1]=&Mensch1;
    Eingabe[2]=&Mensch2;
    Eingabe[3]=&Mensch3;
    Eingabe[4]=&Mensch4;
    for(int i=0;i<5;i++){
        student_einlesen(Eingabe[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(Eingabe[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct student
{
  char first_name[20];
  char last_name[20];
  int points[5];
} Student;
void
student_einlesen (Student * p_stud)
{
  printf (""Gebe den Vornamen ein: "");
  scanf (""%s"", p_stud->first_name);
  printf (""Gebe nun den Nachnamen ein: "");
  scanf (""%s"", p_stud->last_name);
  printf (""Gebe nun nacheinander die 5 Punkte ein: \\n"");
  int i = 0;
  while (i < 4)
    {
      printf (""%i: "", i + 1);
      scanf (""%i"", &p_stud->points[i]);
    	i++;
  }
    printf (""%i: \\n"", 5);
    scanf (""%i"", &p_stud->points[4]);
}
void
student_ausgeben (Student * p_stud)
{
  int Punkte = 0;
  int i = 0;
  while (i < 5)
    {
      Punkte += p_stud->points[i];
    	i++;
  }
  printf (""Student: %s %s\\nAnzahl Punkte: %i\\n\\n"", p_stud->first_name,
	  p_stud->last_name, Punkte);
}
void main ()
{
  Student* Eingabe[5];
    Student Mensch0;
    Student Mensch1;
    Student Mensch2;
    Student Mensch3;
    Student Mensch4;
    Eingabe[0]=&Mensch0;
    Eingabe[1]=&Mensch1;
    Eingabe[2]=&Mensch2;
    Eingabe[3]=&Mensch3;
    Eingabe[4]=&Mensch4;
    int i=0;
    while (i<5){
        student_einlesen(Eingabe[i]);
    	i++;
    }
    int i=0;
    while (i<5){
        student_ausgeben(Eingabe[i]);
    	i++;
    }
}",swap_loops_type,1
"#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\nAnzahl Punkte: %i\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\\n"");
	student_ausgeben(students + i);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
 int i = 0;
 while (i<5){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 	++i;
 }
 printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 int i = 0;
 while (i != 5) {
		summe += p_stud->points[i];
		++i;
 }
	printf(""Anzahl Punkte: %d\\n"", summe);
}
int main(){
 Student students[5];
  int i = 0;
  while (i != 5) {
	student_einlesen(students + i);
		++i;
  }
  int i = 0;
  while (i != 5) {
	printf(""\\n"");
	student_ausgeben(students + i);
		++i;
  }
}",swap_loops_type,1
"void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
}","void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	i=2;
	while (i< resultat){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
	i++;
	}",swap_loops_type,1
"#include <stdio.h>
#include <malloc.h>
typedef vkwwd student{","#include <stdio.h>
#include <malloc.h>
typedef struct student{",rename_variables,1
"#include <stdio.h>
int main(int clurk, char** Zeichen){
    char swequ[100]="""";
    char yvdbo[100]="""";
    int blgco=0;
    int etwvt=0;
    for (int mfmqx=1;mfmqx<clurk;mfmqx++){
        for (int vuisz=0;Zeichen[mfmqx][vuisz]!='\\0';vuisz++){
            if (Zeichen[mfmqx][vuisz]!='x' && Zeichen[mfmqx][vuisz]!='y' && Zeichen[mfmqx][vuisz]!='q' && Zeichen[mfmqx][vuisz]!='X' && Zeichen[mfmqx][vuisz]!='Y' && Zeichen[mfmqx][vuisz]!='Q'){
               swequ[blgco]=Zeichen[mfmqx][vuisz];
               blgco+=1;
            }
        }
    }
    for (int vuisz=0;swequ[vuisz]!='\\0';vuisz++){
        if(vuisz%3==0){
            yvdbo[etwvt]=swequ[vuisz];
            etwvt+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",swequ);
    printf(""Der neue String lautet: %s\\n"",yvdbo);
}","#include <stdio.h>
int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",Ausgabe);
    printf(""Der neue String lautet: %s\\n"",Ausgabe2);
}",rename_variables,1
"void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}","#include<limits.h>
#include<string.h>
void factorize(long resultat, long *nummer1, long *nummer2){
	switch(resultat){
		case 0:
		case 1:
			*nummer1 = 1;
			*nummer2 = resultat;
			break;
		default:
			*nummer2 = 2;
			*nummer1 = resultat/2;
			long int temp = *nummer1;
			while ((*nummer2 * *nummer1 != resultat) && (*nummer2 < resultat)){
				*nummer2 = *nummer2+1;
				while((*nummer2 * temp != resultat) && temp > 2){
					temp--;
					if(*nummer2 * temp == resultat){
						*nummer1 = temp;
				if(*nummer2 == resultat){
					*nummer1 = 1;
				}
			}
			break;
	}
}
	long resultat = 1, nummer1, nummer2;
	scanf(""%lld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
	// long resultat = 66, nummer1, nummer2;
	// factorize(resultat, &nummer1, &nummer2);
	// printf(""resultat = %li; nummer1 = %li; nummer2 = %li\n"", resultat, nummer1, nummer2);
}",,0
"// #include <./tools.h>
// #include <>//Regular Expressions for shorter (aka harder to do maintenance on) code?
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void shiftChar(char* p_char, int intShift){
	//A-Z:65-90;a-Z:97-122
	if((*p_char >= 65) && (*p_char <= 90)){//A-Z
		if(*p_char+intShift < 65){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 90){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if((*p_char >= 97) && (*p_char <= 122)){//a-z
		if(*p_char+intShift < 97){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 122){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
		// % - characters outside of [A-Za-Z] are not to be changed
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;i<intMaxLength;i++){
		shiftChar(&str[i], intShift);
	}
}
/*
 */
int main(){
	char str[] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	// char str[] = ""AZ   az""; 	// Originaltext
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz""; 	// Originaltext
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	// printf(""O: "");
	cipher(str, intShift, intArrMoepSize);
	// printf(""V: "");
	cipher(str, -intShift, intArrMoepSize);
	// printf(""E: "");
	// char string[] = ""Dieser_Text_ist_geheim"";
	// cipher(string, -4, 22);
	// printf(""%s\n"", string);
	// char letter[] = ""b"";
	// shiftChar(letter, 2);
	// printf(""%c\n"", *letter);
}","    int base = 'Z' - 'A' + 1;
    if (*p_char >= 'A' && *p_char <= 'Z')         int c = (int)(*p_char - 'A');
        int mod = (c + shift + base) % base;
        *p_char = (char)(mod + 'A');
    } else if (*p_char >= 'a' && *p_char <= 'z')         int c = (int)(*p_char - 'a');
        int mod = (c + shift + base) % base;
        *p_char = (char)(mod + 'a');
    {
    for (int i = 0; i < maxlength; ++i) {
        if (str[i] == 0)
            break;
        shiftChar(str + i, shift);
    }
{
}",,0
"    int i = 0;
    while ((zahl > i) && ('\\0' != dest[i]) && ('\\0' != src[i]))        dest[i] = src[i];
        i++;
        int i = 0;
    int len = 0;
    while('\\0' != str[i]){
        len += 1;
        i += 1;
        int left = 0;
    int right = len - 1;
    while (right > left){
        char temp = str[left];
        str[left] = str[right];
        str[right] = temp;
        left++;
        right--;
    }
}
{
                  }","    int i = 0;
    while ((i < zahl) && (dest[i] != '\\0') && (src[i] != '\\0'))        dest[i] = src[i];
        i++;
        int i = 0;
    int len = 0;
    while(str[i] != '\\0'){
        len += 1;
        i += 1;
        int left = 0;
    int right = len - 1;
    while (left < right){
        char temp = str[left];
        str[left] = str[right];
        str[right] = temp;
        left++;
        right--;
    }
}
{
                  }",mirrow_simple_logic_equations,1
"void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}","void factorize(long product, long *factor1, long *factor2)
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
                          i++;
             }
}
        long product, factor1, factor2;
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(!(int i=0; i>=5; i++)) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
		for(!(int a = 1; a >= 6; a++)) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(!(int i = 0; i >= 5; i++)) {
		int summe[5]; 
		for(!(int b=0; b>=5; b++)) {
			summe[b]=0;
		}
		for(!(int a=0; a>=5;a++)){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \\n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \\n \\n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \\n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \\n \\n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \\nAnzahl Punkte: %i\\n\\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef frmwb student {
	char jdcan[21];
	char pmylw[21];
	int mbbie[5];
}Student;
void mxscx(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->jdcan);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->pmylw);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
		for(int ogiui = 0; ogiui < 5; ogiui++) {
			printf(""%i: "", ogiui+1);
			scanf(""%i"", &(p_stud->mbbie[ogiui]));
		}
	printf(""\\n"");
	}
void cdenh(Student* p_stud){
		int zdcro = 0;
	for(int agdws = 0; agdws < 5; agdws++){
			zdcro += p_stud -> mbbie[agdws];
		}
	printf(""Student: %s %s \\nAnzahl Punkte: %i\\n\\n"", p_stud->jdcan, p_stud->pmylw, zdcro);
	}
int main() {
	Student svcwl[5];
	for(int dacgk = 0; dacgk < 5; dacgk++){
	mxscx(&svcwl[dacgk]);
	}
	for(int dacgk = 0; dacgk < 5; dacgk++)
	cdenh(&svcwl[dacgk]);
	return 0;
}",rename_variables,1
"void factorize(long product, long *factor1, long *factor2){
	long teiler;
	if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
	else {
		for(int i = 0; i < product; i++){
			 teiler = (product/2) - i;
			 //printf(""%li"",teiler);
			if(teiler * (product/teiler) == product){
				i = product;
		}
		*factor1 = teiler;
		*factor2 = product/teiler;
	}
}
	long factor1;
	long* fac1 = &factor1;
	long factor2;
	long* fac2 = &factor2;
	long eingabe = 0;
	scanf(""%li"", &eingabe);
	factorize(eingabe, fac1, fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2)
    if (product==0)
    {
        *factor1=1;
        *factor2= product;
    else if (product==1)
{
    *factor1=1;
    *factor2= product;
else
{
if (product%2==0)
{
    *factor1= product/2;
    *factor2= (product/(product/2));
}
else {
        int t=2;
        int p = product;
        do {t = (p/2)-1;
        p=t;}
while (product%t ==1);
    *factor1= t;
    *factor2= product/t;
}
}
}
	long product;
	long factor1;
	long factor2;
	long factor[2];
	scanf(""%ld"",&product);
    factorize (product,&factor1,&factor2);
	printf("" Possible Factors of %ld are %ld and %ld.\n"",product,factor1,factor2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\\n"");
	student_ausgeben(students + i);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef qotas student { 
    char vfzcm[20];
    char viaya[20];
    int itejv[5];
} Student;
void cldfa(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->vfzcm);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->viaya);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
 for (int efcgv = 0; efcgv<5; ++efcgv){
  printf(""%d: "", efcgv+1);
  scanf(""%d"", p_stud->itejv + efcgv);
 }
 printf(""\\n"");
}
void wabea(Student* p_stud){
 printf(""Student: %s %s\\n"", p_stud->vfzcm, p_stud->viaya);
 int hsgsh = 0;
 for(int efcgv = 0; efcgv != 5; ++efcgv) {
		hsgsh += p_stud->itejv[efcgv];
	}
	printf(""Anzahl Punkte: %d\\n"", hsgsh);
}
int main(){
 Student qaqjo[5];
  for(int efcgv = 0; efcgv != 5; ++efcgv) {
	cldfa(qaqjo + efcgv);
	}
  for(int efcgv = 0; efcgv != 5; ++efcgv) {
	printf(""\\n"");
	wabea(qaqjo + efcgv);
	}
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}",,0
"#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\nAnzahl Punkte: %i\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}","#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}",,0
"#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_ausgeben(Student* p_stud){
    int a=0;
    for (int i=0;i<5;i++){
        a+=p_stud->points[i];}
    printf(""\\nStudent: "");
    printf(""%s %s\\n"",p_stud->first_name,p_stud->last_name);
    printf(""Anzahl Punkte: %i\\n"",a);
}
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(""%s"",p_stud->first_name);
    scanf(""%s"",p_stud->last_name);
    printf(""1: 2: 3: 4: 5: \\n"");
    for (int j=0;j<5;j++){
    scanf(""%i"",&p_stud->points[j]);}
}
int main(){
    static Student ogrenci[5];
    for(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(""%s"",p_stud->first_name);
    scanf(""%s"",p_stud->last_name);
    printf(""1: 2: 3: 4: 5: \\n"");
    for (int j=0;j<5;j++){
    scanf(""%i"",&p_stud->points[j]);}
}
void student_ausgeben(Student* p_stud){
    int a=0;
    for (int i=0;i<5;i++){
        a+=p_stud->points[i];}
    printf(""\\nStudent: "");
    printf(""%s %s\\n"",p_stud->first_name,p_stud->last_name);
    printf(""Anzahl Punkte: %i\\n"",a);
}
int main(){
    static Student ogrenci[5];
    for(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}",swap_functions,1
"#include <stdio.h>		// printf()
#include <string.h>
typedef struct student
{
  char first_name[20];
  char last_name[20];
  int points[5];
} Student;
void
student_einlesen (Student * p_stud)
{
  printf (""Gebe den Vornamen ein: "");
  scanf (""%s"", p_stud->first_name);
  printf (""Gebe nun den Nachnamen ein: "");
  scanf (""%s"", p_stud->last_name);
  printf (""Gebe nun nacheinander die 5 Punkte ein: \\n"");
  for (int i = 0; i < 4; i++)
    {
      printf (""%i: "", i + 1);
      scanf (""%i"", &p_stud->points[i]);
    }
    printf (""%i: \\n"", 5);
    scanf (""%i"", &p_stud->points[4]);
}
void
student_ausgeben (Student * p_stud)
{
  int Punkte = 0;
  //printf(""Anzahl %i\\n"",p_stud->points[1]);
  for (int i = 0; i < 5; i++)
    {
      Punkte += p_stud->points[i];
    }
  printf (""Student: %s %s\\nAnzahl Punkte: %i\\n\\n"", p_stud->first_name,
	  p_stud->last_name, Punkte);
}
void main ()
{
  Student* Eingabe[5];
    Student Mensch0;
    Student Mensch1;
    Student Mensch2;
    Student Mensch3;
    Student Mensch4;
    Eingabe[0]=&Mensch0;
    Eingabe[1]=&Mensch1;
    Eingabe[2]=&Mensch2;
    Eingabe[3]=&Mensch3;
    Eingabe[4]=&Mensch4;
    for(int i=0;i<5;i++){
        student_einlesen(Eingabe[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(Eingabe[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef jcogt student
{
  char ciyff[20];
  char hrjir[20];
  int bbwli[5];
} Student;
void
uqwrj (Student * p_stud)
{
  printf (""Gebe den Vornamen ein: "");
  scanf (""%s"", p_stud->ciyff);
  printf (""Gebe nun den Nachnamen ein: "");
  scanf (""%s"", p_stud->hrjir);
  printf (""Gebe nun nacheinander die 5 Punkte ein: \\n"");
  for (int mwddh = 0; mwddh < 4; mwddh++)
    {
      printf (""%i: "", mwddh + 1);
      scanf (""%i"", &p_stud->bbwli[mwddh]);
    }
    printf (""%i: \\n"", 5);
    scanf (""%i"", &p_stud->bbwli[4]);
}
void
wafxc (Student * p_stud)
{
  int fgfgr = 0;
  for (int mwddh = 0; mwddh < 5; mwddh++)
    {
      fgfgr += p_stud->bbwli[mwddh];
    }
  printf (""Student: %s %s\\nAnzahl Punkte: %i\\n\\n"", p_stud->ciyff,
	  p_stud->hrjir, fgfgr);
}
void main ()
{
  Student* Eingabe[5];
    Student otlnx;
    Student pdcgj;
    Student ghjzw;
    Student grteh;
    Student yiahv;
    Eingabe[0]=&otlnx;
    Eingabe[1]=&pdcgj;
    Eingabe[2]=&ghjzw;
    Eingabe[3]=&grteh;
    Eingabe[4]=&yiahv;
    for(int mwddh=0;mwddh<5;mwddh++){
        uqwrj(Eingabe[mwddh]);
    }
    for(int mwddh=0;mwddh<5;mwddh++){
        wafxc(Eingabe[mwddh]);
    }
}",rename_variables,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktorEins, faktorZwei);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	if (ergebnis == 0 || ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        long prod = ergebnis / 2;
        if (ergebnis % 2 != 0) {
            do {
                prod -= 1;
            } while (ergebnis % prod != 0);
                *zahl1 = prod;
        *zahl2 = ergebnis / prod;
    }
    long ergebnis, zahl1, zahl2;
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
}",,0
"#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; argc > i; i++)
    {   
        for (int j = 0; a'\\0' != argv[i][j] j++)
        {   
            if (a'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q' != argv[i][j]
            {
                string1[counter] = argv[i][j];
                if (c0 == counter % 3
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", string1);
    printf(""Der neue String lautet: %s\\n"",string2);
}","#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", string1);
    printf(""Der neue String lautet: %s\\n"",string2);
}",mirrow_simple_logic_equations,1
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(!(ergebnis!=0||ergebnis!=1)){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		while(!(ergebnis%*zahl1==0))
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", eingabe, t1, t2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		while(ergebnis%*zahl1!=0)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", eingabe, t1, t2);
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}",,0
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_ausgeben(Student* p_stud){
printf(""Student: %c %c\\nAnzahl Punkte: %i"",p_stud->vorname,p_stud->nachname,p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]);
}
void student_einlesen(Student* p_stud){
printf(""Gebe den Vornamen ein: "");
scanf(""%c"",p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%c"",p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:"");
for (int i =0;i<5;i++){
    printf(""%i:"",i+1);
    scanf(""%i"",p_stud->punkte[i]);
    }
}
int main(){
Student studenten[5];
printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:
1: 2: 3: 4: 5:
erster_Student: Marco Wagner
Punkte -> 14; 18; 13; 9; 16"");
for(int k=0;k<5;k+1 ){
    student_einlesen(studenten+k);
    student_ausgeben(studenten+k);
}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
printf(""Gebe den Vornamen ein: "");
scanf(""%c"",p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%c"",p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:"");
for (int i =0;i<5;i++){
    printf(""%i:"",i+1);
    scanf(""%i"",p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
printf(""Student: %c %c\\nAnzahl Punkte: %i"",p_stud->vorname,p_stud->nachname,p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]);
}
int main(){
Student studenten[5];
printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:
1: 2: 3: 4: 5:
erster_Student: Marco Wagner
Punkte -> 14; 18; 13; 9; 16"");
for(int k=0;k<5;k+1 ){
    student_einlesen(studenten+k);
    student_ausgeben(studenten+k);
}
}",swap_functions,1
"#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_init(Student *p_stud)
{
    p_stud->first_name = NULL;
    p_stud->last_name = NULL;
    p_stud->points = 0;
    p_stud->size = 0;
    p_stud->spoint = 0;
}
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_temp);
    p_stud->size++;
    p_stud->first_name = (char**)realloc(p_stud->first_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->first_name[p_stud->size-1] = (char*)malloc(strlen(name_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->first_name[p_stud->size - 1], name_temp);
    p_stud->last_name = (char**)realloc(p_stud->last_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->last_name[p_stud->size-1] = (char*)malloc(strlen(name1_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->last_name[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 1; i <= 5; i++)
    {
        printf(""%i: "",i);
        scanf(""%d"", &temp_zahl);
        p_stud->spoint++;
        int* tmp = (int*)realloc(p_stud->points, (p_stud->spoint) * sizeof(int*));
        if(!tmp) exit (-1);
        p_stud->points = tmp;
        p_stud->points[p_stud->spoint-1] = temp_zahl;
    }
    printf(""\n"");   
}
void student_ausgeben(Student* p_stud)
{
    int punkte[5];
    int j = 0;
    for(int i = 0; i < p_stud->size; i++){
        punkte[i]=p_stud->points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4];
        j+=5;
    }
    for(int i = 0; i < p_stud->size; i++)
    {
        printf(""Student: %s %s\nAnzahl Punkte: %d\n\n"", p_stud->first_name[i], p_stud->last_name[i], punkte[i]);
    }
    free(p_stud->first_name);
    free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    student_init(&erster_Student);
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&erster_Student);
    }
    student_ausgeben(&erster_Student);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
    char vorname[20];
    char nachname[20];
    int punkte [5];
} Student ;
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    getchar();
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    getchar();
    printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
    printf(""1: 2: 3: 4: 5:\n"");
    for (int i=0; i <5; i++)
    {
        scanf(""%i"",&p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    int i=0;
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    for (i=0; i<5; i++)
    {
        sum+=p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student studenten[5];
    for (int j=0; j<5; j++) student_einlesen (&studenten[j]);
    for (int j=0; j<5; j++) student_ausgeben(&studenten[j]);
}",,0
"// #include <./tools.h>
// #include <>//Regular Expressions for shorter (aka harder to do maintenance on) code?
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void shiftChar(char* p_char, int intShift){
	//A-Z:65-90;a-Z:97-122
	if((*p_char >= 65) && (*p_char <= 90)){//A-Z
		if(*p_char+intShift < 65){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 90){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if((*p_char >= 97) && (*p_char <= 122)){//a-z
		if(*p_char+intShift < 97){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 122){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
		// % - characters outside of [A-Za-Z] are not to be changed
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;i<intMaxLength;i++){
		shiftChar(&str[i], intShift);
	}
}
/*
 */
int main(){
	char str[] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	// char str[] = ""AZ   az""; 	// Originaltext
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz""; 	// Originaltext
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	// printf(""O: "");
	cipher(str, intShift, intArrMoepSize);
	// printf(""V: "");
	cipher(str, -intShift, intArrMoepSize);
	// printf(""E: "");
	// char string[] = ""Dieser_Text_ist_geheim"";
	// cipher(string, -4, 22);
	// printf(""%s\n"", string);
	// char letter[] = ""b"";
	// shiftChar(letter, 2);
	// printf(""%c\n"", *letter);
}","// uppercase ASCII-Zahlen: A = 65 - Z = 90
// lowercase ASCII-Zahlen: a = 97 - z = 122
Mögliche Fälle:
1. Wird *p_char mit shift addiert, bleibt die ASCII-Zahl im vorgegebenen Wertebereich.
	Folge: Erhöhe den ASCII-Wert um shift.
2. Wird *p_char mit shift addiert, wird die ASCII-Zahl größer als der vorgegebene Maximalwert.
	Folge: Erhöhe den ASCII-Wert um shift und subtrahiere den Wert um 26.
3. Wird *p_char mit shift addiert, wird die ASCII-Zahl kleiner als der vorgegebene Minimalwert.
	Folge: Erhöhe den ASCII-Wert um shift und addiere den Wert um 26.
	if((*p_char+shift >= 65 && *p_char+shift <= 90) ^ (*p_char+shift >= 97 && *p_char+shift <= 122))		*p_char += shift;
	else if(*p_char+shift > 90 && *p_char < 97)		*p_char+=(shift-26);
	else if(*p_char+shift > 122){
		*p_char+=(shift-26);
	else if(*p_char+shift > 65){
		*p_char+=(shift+26);
	}
	}
{
	for(int i = 0; i < maxlength; i++){
		char* p_char;
		p_char = &str[i];
		shiftChar(p_char, shift);
	}
}
/*
 */
{
}",,0
"void factorize(long product, long *factor1, long *factor2)
	if (product == 0) {
		*factor1 = 1;
		*factor2 = product;
		return;
	if (product == 1) {
		*factor1 = 1;  
		*factor2 = product;
		return;
	for (long i = 2; i < product/2; ++i) {
		if (product % i == 0) {
			*factor2 = i;
			*factor1 = product/i;
			return;	
		}
	}
	// primzahl
	*factor1 = 1;
	*factor2 = product;
}
	long product;
	long factor1;
	long factor2;
	scanf (""%ld"", &product);
	factorize (product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}","void rsvoa(long vstff, long *jfxjm, long *rposi)
	if (vstff == 0) {
		*jfxjm = 1;
		*rposi = vstff;
		return;
	if (vstff == 1) {
		*jfxjm = 1;  
		*rposi = vstff;
		return;
	for (long hrskv = 2; hrskv < vstff/2; ++hrskv) {
		if (vstff % hrskv == 0) {
			*rposi = hrskv;
			*jfxjm = vstff/hrskv;
			return;	
		}
	}
	*jfxjm = 1;
	*rposi = vstff;
}
	long vstff;
	long jfxjm;
	long rposi;
	scanf (""%ld"", &vstff);
	rsvoa (vstff, &jfxjm, &rposi);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", vstff, jfxjm, rposi);
}",rename_variables,1
"void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	i=1;
	while (i<10){
	    factorize(integer, i, (int) zahl2);
		i++;
	}
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", integer, i, zahl2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (i=1; i<10; i++){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", integer, i, zahl2);
}",swap_loops_type,1
"void eyhag(long zyvbe, long *dqpmq, long *skrtz)
	if (zyvbe=0){
		*dqpmq=1,*skrtz=zyvbe;	if (zyvbe=1){
		*dqpmq=1,*skrtz=zyvbe;	int pchut=0;
	for (zyvbe;zyvbe-1;pchut++){
	}
}
	long zyvbe;
	long dqpmq=25;
	long skrtz=2;
	scanf(""%ld"",&zyvbe);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", zyvbe, dqpmq, skrtz);
}","void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\0';
printf(""Der neue String lautet: %s\n"",erg2);
}","#include <stdio.h>
int main(int argc, char* argv[]) {
    //char* str[] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""}; //zum testen
    //int agc = 4;                                              //zum testen
    for(int i= 1; i<5; i++){
    //printf(""%s\n"", str[i]);                                 //test
    }
    char string1[100]; string1[99] = '\0';
    char string2[100]; string2[99] = '\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\0';
        string2[i] = '\0';
        string3[i] = '\0';
    }
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\0'){
        laenge++;
        j++;
        }
        //printf(""i=%i - laenge=%i\n"", i, laenge);                //test
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    //buchstabenloeschen
    int j = 0;
    int length = 0;
    while(string1[j] != '\0'){
    length++;
    j++;
    }
    //printf(""length: %i\n"", length);                       //test
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
    //nur noch jeden 3ten Buchstaben verwenden
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\n"", string3);
    //string1[0] = str[1][0];                                   //test
    //printf(""%s\n"", string1);                                  //test
    //printf(""%s\n"", string2);                                  //test
    //printf(""%s\n"", string3);                                  //test
    return 0;
}",,0
"void factorize(long product, long *factor1, long *factor2)
	if (!(product != 0)) {
		*factor1 = 1;
		*factor2 = product;
		return;
	if (!(product != 1)) {
		*factor1 = 1;  
		*factor2 = product;
		return;
	for (!(long i = 2; i >= product/2; ++i)) {
		if (!(product % i != 0)) {
			*factor2 = i;
			*factor1 = product/i;
			return;	
		}
	}
	*factor1 = 1;
	*factor2 = product;
}
	long product;
	long factor1;
	long factor2;
	scanf (""%ld"", &product);
	factorize (product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2)
	if (product == 0) {
		*factor1 = 1;
		*factor2 = product;
		return;
	if (product == 1) {
		*factor1 = 1;  
		*factor2 = product;
		return;
	for (long i = 2; i < product/2; ++i) {
		if (product % i == 0) {
			*factor2 = i;
			*factor1 = product/i;
			return;	
		}
	}
	// primzahl
	*factor1 = 1;
	*factor2 = product;
}
	long product;
	long factor1;
	long factor2;
	scanf (""%ld"", &product);
	factorize (product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}",demorgan_on_logic_equations,1
"void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
//printf(""%ld\n"", ergebnis);
if((ergebnis == 0)||(ergebnis == 1))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(ergebnis%f1 != 0 )
{
//printf(""f1 passt noch nicht : %i\n"",f1);
f1 = f1- 1;
f2 = ergebnis/f1;
}
//printf(""faktoren: %ld, %ld \n"",f1,f2);
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe,z1,z2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if (produkt == 0 || produkt == 1)
    {
       *faktor1 = 1;
       *faktor2 = produkt;
       return;
       long int halb = produkt / 2;
   while(produkt % halb != 0)
   {
       halb --;
      *faktor1 = halb;
   *faktor2 = produkt / halb;
}
	// Zahl einlesen
	long  int zahl = 0;
	scanf(""%ld"", &zahl);
	// Define factors
	long int fak1, fak2;
	// call factorization function
	factorize(zahl, &fak1, &fak2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, fak1, fak2);
}",,0
"#include <stdio.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    unsigned int punkte[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    readLine(p_stud->vorname, 21);              //Vornamen einlesen
    printf(""Gebe nun den Nachnamen ein: "");
    readLine(p_stud->nachname, 21);             //Nachnamen einlesen
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int x = 0; x<5;x++){
        printf(""%i: "", x+1);
        scanf(""%i"", &p_stud->punkte[x]);
    }
    return;
}
void student_ausgeben(Student* p_stud){
    int sum = 0;
    for(int y = 0; y<5; y++){
        sum = sum + p_stud->punkte[y];
    }
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", sum);
    return;
}
int main() {
    Student studenten[5];
    for(int i = 0; i<5; i++){                   //Schleife zum Einlesen
        student_einlesen(&studenten[i]);
    }
    for(int j=0; j<5; j++){                     //Schleife zum Asugeben
        student_ausgeben(&studenten[j]);
    }
    return 0;
}
//WHY??? Ich habe mit typedef eine struct definiert. Davon wird dann ein Array erstellt. Von diesem Array werden dann die Adressen an die Funktion student_eingeben gegeben, und später an student_ausgeben.
//Woran kann es liegen, dass es NUR dann wirklich funktioniert, wenn ich EINEN studenten habe - nicht ein Array von studenten, und auch nicht fünf einzelne studenten.
//Sobald student_einlesen mehr als 1 mal ""benutzt"" wird, funktioniert es nicht mehr!","#include <stdio.h>
#include <stdlib.h>  
#include <string.h>
typedef struct student{
    char first_name[20]; 
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");    
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++){
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->points[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
  printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);  
  int summe = 0;
  for(int i = 0; i < 5; i++){
    summe+= p_stud->points[i];  
  }
  printf(""Anzahl Punkte: %i\n"", summe);
}
int main(){
    Student array[5];
    for(int i = 0; i < 5; i++){
        student_einlesen(&array[i]);
     }
    for(int i = 0; i < 5; i++){
        student_ausgeben(&array[i]);
     }
}",,0
"void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}","void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}",,0
"#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                        }
}
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}","#include <stdlib.h>
void factorize(long product, long* factor1, long* factor2)
if(product == 0) {
        *factor1 = 1;
        *factor2 = product;
    } else if(product == 1) {
        *factor1 = 1;
        *factor2 = product;
    } else {
        for(int i = product/2; i > 0;i--) {
            if(product%i != 0) {
                continue;
            } else {
                *factor1 = i;
                *factor2 = product/i;
                break;
                        }
}
    long product = 0;
    long* factor1;
    long* factor2;
    factor1 = (long*) malloc(sizeof(long));
    factor2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product,factor1,factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",product, *factor1, *factor2);
    return 0;
}",,0
"void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return ;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"", num, fac2, fac1);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return ;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"", num, fac2, fac1);
    return 0;
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\\n"");
  }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21];
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(vorname < ""%s"", p_stud-);
  printf(""Gebe nun den Nachnamen ein: "");
  scannachname < ""%s"", p_stud-me);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
  for (int i =5 > i < 5; ++i) {
    printf(""%i:"", i + 1);
    scpunkte + i < ""%i"", p_stud- + i);
   4 == i == 4 ) {
        printf(""\\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i size > i size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_popunkte, 5 < p_stud-te, 5);
  vorname < ""Student: %s "", p_stud-vorname);
nachname < ""%s\\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\\n"", sum);
}
int main() {
  for (5 > i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (5 > i = 0; i < 5; ++i) {
    student_ausgeben(students + i)4 > iif ( i < 4 )
        printf(""\\n"");
  }
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}",,0
"void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}","void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return ;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}",,0
"	if(*p_char >= 'a' && *p_char <= 'z')		char c = *p_char - 'a';
		c += shift;
		c = c % 26;
		*p_char = c + 'a';
		*p_char += shift;
		if ( *p_char < 'a') *p_char = *p_char + 'z' - 'a' + 1;;
		if ( *p_char > 'z') *p_char = *p_char - 'z' + 'a' - 1;
	if(*p_char >= 'A' && *p_char <= 'Z')		char c = *p_char - 'A';
		c += shift;
		c = c % 26;
		*p_char = c + 'A';
		*p_char += shift;
		if ( *p_char < 'A') *p_char = *p_char + 'Z' - 'A' + 1;
		if ( *p_char > 'Z') *p_char = *p_char - 'Z' + 'A' - 1;
{
 for (int i = 0; i < maxlength; i++){
	 shiftChar( &str[i], shift);
 }
}
{
}","	if(*p_char >= 'a' && *p_char <= 'z')		char c = *p_char - 'a';
		c += shift;
		c = c % 26;
		*p_char = c + 'a';
		*p_char += shift;
		if ( *p_char < 'a') *p_char = *p_char + 'z' - 'a' + 1;;
		if ( *p_char > 'z') *p_char = *p_char - 'z' + 'a' - 1;
	if(*p_char >= 'A' && *p_char <= 'Z')		char c = *p_char - 'A';
		c += shift;
		c = c % 26;
		*p_char = c + 'A';
		*p_char += shift;
		if ( *p_char < 'A') *p_char = *p_char + 'Z' - 'A' + 1;
		if ( *p_char > 'Z') *p_char = *p_char - 'Z' + 'A' - 1;
/*
 */
{
 for (int i = 0; i < maxlength; i++){
	 shiftChar( &str[i], shift);
 }
}
/*
 */
{
}",swap_functions,1
"	if(*p_char >= 'a' && *p_char <= 'z')		char c = *p_char - 'a';
		c += shift;
		c = c % 26;
		*p_char = c + 'a';
		*p_char += shift;
		if ( *p_char < 'a') *p_char = *p_char + 'z' - 'a' + 1;;
		if ( *p_char > 'z') *p_char = *p_char - 'z' + 'a' - 1;
	if(*p_char >= 'A' && *p_char <= 'Z')		char c = *p_char - 'A';
		c += shift;
		c = c % 26;
		*p_char = c + 'A';
		*p_char += shift;
		if ( *p_char < 'A') *p_char = *p_char + 'Z' - 'A' + 1;
		if ( *p_char > 'Z') *p_char = *p_char - 'Z' + 'A' - 1;
/*
 */
{
 for (int i = 0; i < maxlength; i++){
	 shiftChar( &str[i], shift);
 }
}
/*
 */
{
}","void shiftChar(char *p_char, int shift)
	if(*p_char >= 'A' && *p_char <= 'Z')         if (*p_char + shift > 'Z')            *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'A') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (*p_char + shift > 'z'){
                *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'a') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            }
{
	for(int i=0; i<=maxlength; i++){
		shiftChar(&str[i], shift);
	}
}
{
}",,0
"void factorize(long product, long *factor1, long *factor2)
{ 
     if(product == 0 || product == 1){
        *factor1 = 1;
	*factor2 = product;
          else{
       long haelfte = product/2;
       while(1){
       if(product % haelfte == 0){
         break; 
              else{
       haelfte = haelfte - 1;
       }
     }
       *factor1 = haelfte;
       *factor2 = product/haelfte; 
   }
}
	long product, factor1, factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product,factor1,factor2);
}","void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}","#include <stdio.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->punkte[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    for(int i=0; i<5; i++)
    sum += p_stud->punkte[i];
    printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
    student_einlesen(&st[i]);
      for(int i=0; i<5; i++)
    student_ausgeben(&st[i]);
    return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",swap_functions,1
"void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}","void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}",,0
"	if(*p_char >= 'a' && *p_char <= 'z')		char vwxcd = *p_char - 'a';
		vwxcd += shift;
		vwxcd = vwxcd % 26;
		*p_char = vwxcd + 'a';
		*p_char += shift;
		if ( *p_char < 'a') *p_char = *p_char + 'z' - 'a' + 1;;
		if ( *p_char > 'z') *p_char = *p_char - 'z' + 'a' - 1;
	if(*p_char >= 'A' && *p_char <= 'Z')		char vwxcd = *p_char - 'A';
		vwxcd += shift;
		vwxcd = vwxcd % 26;
		*p_char = vwxcd + 'A';
		*p_char += shift;
		if ( *p_char < 'A') *p_char = *p_char + 'Z' - 'A' + 1;
		if ( *p_char > 'Z') *p_char = *p_char - 'Z' + 'A' - 1;
{
 for (int uubfe = 0; uubfe < maxlength; uubfe++){
	 shiftChar( &str[uubfe], shift);
 }
}
{
}","	if(*p_char >= 'a' && *p_char <= 'z')		char c = *p_char - 'a';
		c += shift;
		c = c % 26;
		*p_char = c + 'a';
		*p_char += shift;
		if ( *p_char < 'a') *p_char = *p_char + 'z' - 'a' + 1;;
		if ( *p_char > 'z') *p_char = *p_char - 'z' + 'a' - 1;
	if(*p_char >= 'A' && *p_char <= 'Z')		char c = *p_char - 'A';
		c += shift;
		c = c % 26;
		*p_char = c + 'A';
		*p_char += shift;
		if ( *p_char < 'A') *p_char = *p_char + 'Z' - 'A' + 1;
		if ( *p_char > 'Z') *p_char = *p_char - 'Z' + 'A' - 1;
/*
 */
{
 for (int i = 0; i < maxlength; i++){
	 shiftChar( &str[i], shift);
 }
}
/*
 */
{
}",rename_variables,1
"{  
  for (int i = 0; (i<zahl)&&(dest[i]!=0)&&(src[i]!=0); i++)
      dest[i]=src[i];
  {
  int l;
  char puffer;
  for (l = 0; str[l]!=0; l++){  for (int i=0; i<l/2; i++){
    puffer=str[i];
    str[i]=str[l-i-1];
    str[l-i-1]=puffer;
  }
}
{  
      }","{  
  for (!(int i = 0; (i>=zahl)&&(dest[i]!=0)&&(src[i]!=0); i++))
      dest[i]=src[i];
  {
  int l;
  char puffer;
  for (!(l = 0; str[l]==0; l++){  for (int i=0; i<l/2; i++)){
    puffer=str[i];
    str[i]=str[l-i-1];
    str[l-i-1]=puffer;
  }
}
{  
      }",demorgan_on_logic_equations,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if (0 || produkt == 1 == produkt)
    {
       *faktor1 = 1;
       *faktor2 = produkt;
       return;
       long int halb = produkt / 2;
   while(0 != produkt % halb)
   {
       halb --;
      *faktor1 = halb;
   *faktor2 = produkt / halb;
}
	long  int zahl = 0;
	scanf(""%ld"", &zahl);
	long int fak1, fak2;
	factorize(zahl, &fak1, &fak2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", zahl, fak1, fak2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if (produkt == 0 || produkt == 1)
    {
       *faktor1 = 1;
       *faktor2 = produkt;
       return;
       long int halb = produkt / 2;
   while(produkt % halb != 0)
   {
       halb --;
      *faktor1 = halb;
   *faktor2 = produkt / halb;
}
	// Zahl einlesen
	long  int zahl = 0;
	scanf(""%ld"", &zahl);
	// Define factors
	long int fak1, fak2;
	// call factorization function
	factorize(zahl, &fak1, &fak2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", zahl, fak1, fak2);
}",mirrow_simple_logic_equations,1
"#include <stdlib.h>
void factorize(long product, long* factor1, long* factor2)
if(product == 0) {
        *factor1 = 1;
        *factor2 = product;
    } else if(product == 1) {
        *factor1 = 1;
        *factor2 = product;
    } else {
        for(int i = product/2; i > 0;i--) {
            if(product%i != 0) {
                continue;
            } else {
                *factor1 = i;
                *factor2 = product/i;
                break;
                        }
}
    long product = 0;
    long* factor1;
    long* factor2;
    factor1 = (long*) malloc(sizeof(long));
    factor2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product,factor1,factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",product, *factor1, *factor2);
    return 0;
}","#include<limits.h>
#include<string.h>
void factorize(long resultat, long *nummer1, long *nummer2){
	switch(resultat){
		case 0:
		case 1:
			*nummer1 = 1;
			*nummer2 = resultat;
			break;
		default:
			*nummer2 = 2;
			*nummer1 = resultat/2;
			long int temp = *nummer1;
			while ((*nummer2 * *nummer1 != resultat) && (*nummer2 < resultat)){
				*nummer2 = *nummer2+1;
				while((*nummer2 * temp != resultat) && temp > 2){
					temp--;
					if(*nummer2 * temp == resultat){
						*nummer1 = temp;
				if(*nummer2 == resultat){
					*nummer1 = 1;
				}
			}
			break;
	}
}
	long resultat = 1, nummer1, nummer2;
	scanf(""%lld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
	// long resultat = 66, nummer1, nummer2;
	// factorize(resultat, &nummer1, &nummer2);
	// printf(""resultat = %li; nummer1 = %li; nummer2 = %li\n"", resultat, nummer1, nummer2);
}",,0
"void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}",swap_functions,1
"#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	int i = 1;
	while (i < argc){
		int j = 0;
		while (argv[i][j] != '\\0'){
			if(argv[i][j] == 'x'){
				int z = j;
				while (argv[i][z] != '\\0'){
					argv[i][z] = argv[i][z+1];
					z++;
				}
			};
			if(argv[i][j] == 'X'){
				int z = j;
				while (argv[i][z] != '\\0'){
					argv[i][z] = argv[i][z+1];
					z++;
				}
			};
			if(argv[i][j] == 'y'){
				int z = j;
				while (argv[i][z] != '\\0'){
					argv[i][z] = argv[i][z+1];
					z++;
				}
			};
			if(argv[i][j] == 'Y'){
				int z = j;
				while (argv[i][z] != '\\0'){
					argv[i][z] = argv[i][z+1];
					z++;
				}
			};
			if(argv[i][j] == 'q'){
				int z = j;
				while (argv[i][z] != '\\0'){
					argv[i][z] = argv[i][z+1];
					z++;
				}
			};
			if(argv[i][j] == 'Q'){
				int z = j;
				while (argv[i][z] != '\\0'){
					argv[i][z] = argv[i][z+1];
					z++;
				}
			};
			if(argv[i][j] == '\\0') u -= 1;
			if(argv[i][j] != '\\0') a[u] = argv[i][j];
			u++;
			j++;
		}
		i++;
	}
	char b[100];
	int k = 0;
	int i = 0;
	while (i < u){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
		i++;
	}
	int i = 0;
	while (i < u){
		printf(""%c"", a[i]);
		i++;
	}
	printf(""\\nDer neue String lautet: "");
	int i = 0;
	while (i < k){
		printf(""%c"", b[i]);
		i++;
	}
	printf(""\\n"");
}","#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\\0') u -= 1;
			if(argv[i][j] != '\\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\\n"");
}",swap_loops_type,1
"#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (!(int i=0;i>=sayi;i++)){
    int uzunluk = strlen(isim[i]);
    for (!(int j=0;j>=uzunluk;j++)){
        if (!(isim[i][j]!=""x""||isim[i][j]||!=""y""||isim[i][j]!=""q""||isim[i][j]!=""X""||isim[i][j]!=""Y""||isim[i][j]!=""Q"")){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (!(int i=0;i>count;i++)){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (!(int i=0;i>=count;i++)){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \\n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \\n"", kedi(argc,argv)[1] );
}","#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \\n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \\n"", kedi(argc,argv)[1] );
}",demorgan_on_logic_equations,1
"void factorize(long product, long *factor1, long *factor2)
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
                          i++;
             }
}
        long product, factor1, factor2;
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\n"", temp);
	printf(""\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}","//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\n') {
            p_stud -> first_name[i] = '\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\n') {
            p_stud -> last_name[i] = '\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}",,0
"#include <stdio.h>
int main() {
   char satz[100], satz2[100];
   int l, k;
   fgets(satz, sizeof(satz), stdin);
   for (int i = 0, j; satz[i] != '\0'; ++i) {
      while (!(satz[i] >= 'a' && satz[i] <= 'p') && !(satz[i] >= 'r' && satz[i] <= 'w') && !(satz[i] == 'z') && !(satz[i] >= 'A' && satz[i] <= 'P') && !(satz[i] >= 'R' && satz[i] <= 'W') && !(satz[i] == 'Z') && !(satz[i] == '!') && !(satz[i] == '?') && !(satz[i] == '\0')){
         for (j = i; satz[j] != '\0'; ++j) {
            satz[j] = satz[j + 1];
         }
         satz[j] = '\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(satz);
     for (int l = 0, k; satz[l] != '\0'; ++l) {
        satz2[k] == satz[l];
        k++;
        l=l+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}","#include <stdio.h>
int main(int  argc, char *argv[]) // start at argv[1]
{
char array[100];
int slot_count = 0;
char b[100];
int slot_count_b = 0;
for(int i = 1; i < argc; i++)
	{
	int j = -1;
	do
		{
		j++;
		if(argv[i][j] == 'x') continue;
		else if(argv[i][j] == 'y') continue;
		else if(argv[i][j] == 'q') continue;
		else if(argv[i][j] == 'X') continue;
		else if(argv[i][j] == 'Y') continue;
		else if(argv[i][j] == 'Q') continue;
		else if(argv[i][j] == '\0')
			{
			array[slot_count] = '\0';
			b[slot_count_b] = '\0';
			}
		else
			{
			array[slot_count] = argv[i][j];
			if( (slot_count == 0 || (slot_count) % 3 == 0) )
				{
				b[slot_count_b] = array[slot_count];
				slot_count_b++;
				}		
			slot_count++;
			}
		}		
	while(argv[i][j] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int m = 0; m < slot_count; m++) printf(""%c"", array[m]); 
printf(""\nDer neue String lautet: "");
for(int n = 0; n < slot_count_b; n++) printf(""%c"", b[n]); 
}",,0
"void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return 0;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return 0;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}","#include <stdlib.h>
void factorize(long product, long* factor1, long* factor2)
if(product == 0) {
        *factor1 = 1;
        *factor2 = product;
    } else if(product == 1) {
        *factor1 = 1;
        *factor2 = product;
    } else {
        for(int i = product/2; i > 0;i--) {
            if(product%i != 0) {
                continue;
            } else {
                *factor1 = i;
                *factor2 = product/i;
                break;
                        }
}
    long product = 0;
    long* factor1;
    long* factor2;
    factor1 = (long*) malloc(sizeof(long));
    factor2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product,factor1,factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",product, *factor1, *factor2);
    return 0;
}",,0
"#include <stdlib.h>
void factorize(long product, long* factor1, long* factor2)
if(product == 0) {
        *factor1 = 1;
        *factor2 = product;
    } else if(product == 1) {
        *factor1 = 1;
        *factor2 = product;
    } else {
        for(int i = product/2; i > 0;i--) {
            if(product%i != 0) {
                continue;
            } else {
                *factor1 = i;
                *factor2 = product/i;
                break;
                        }
}
    long product = 0;
    long* factor1;
    long* factor2;
    factor1 = (long*) malloc(sizeof(long));
    factor2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product,factor1,factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",product, *factor1, *factor2);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
                          i++;
             }
}
        long product, factor1, factor2;
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef struct Student {
  char vorname[20];
  char nachname[20];
  int  punkte[5];
}  Student  ;
void student_einlesen(Student*p_stud){
		printf(""Gebe den Vornamen ein: "");
		scanf (""%s"" ,p_stud->vorname);
		printf(""Gebe nun den Nachnamen ein: "");
		scanf (""%s"" ,p_stud->nachname);
		 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
		 for (int a=0 ; a<4;a++){	
		 printf(""%d: "",a+1);
			scanf(""%d"", &(p_stud-> punkte[a]));
			}
			int x= 5;
		printf(""%d: \\n"",x);
			scanf(""%d"", &(p_stud-> punkte[4]));
}
void student_ausgeben(Student*p_stud){
		  int  summe=0 ;
		for (int a=0 ; a<5;a++){
		summe += (p_stud-> punkte[a]);
		}
		printf (""Student: %s %s \\n"",p_stud->vorname , p_stud->nachname);
		printf(""Anzahl Punkte: %d\\n\\n"" , summe );
		}
int main (){
             struct Student *pointer=malloc(sizeof (Student)*5);
		int i;
		for(i=0 ; i<5;i++){
			student_einlesen((&pointer[i]));
		}
		int u;
		for (u=0 ; u<5; u++){
			student_ausgeben((&pointer[u]));
		}
free(pointer);
}","#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef mdtcl oadgn {
  char jttaa[20];
  char zrqet[20];
  int  aiovv[5];
}  oadgn  ;
void qfudp(oadgn*p_stud){
		printf(""Gebe den Vornamen ein: "");
		scanf (""%s"" ,p_stud->jttaa);
		printf(""Gebe nun den Nachnamen ein: "");
		scanf (""%s"" ,p_stud->zrqet);
		 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
		 for (int aotdk=0 ; aotdk<4;aotdk++){	
		 printf(""%d: "",aotdk+1);
			scanf(""%d"", &(p_stud-> aiovv[aotdk]));
			}
			int rzvoe= 5;
		printf(""%d: \\n"",rzvoe);
			scanf(""%d"", &(p_stud-> aiovv[4]));
}
void vyoao(oadgn*p_stud){
		  int  cbcyy=0 ;
		for (int aotdk=0 ; aotdk<5;aotdk++){
		cbcyy += (p_stud-> aiovv[aotdk]);
		}
		printf (""Student: %s %s \\n"",p_stud->jttaa , p_stud->zrqet);
		printf(""Anzahl Punkte: %d\\n\\n"" , cbcyy );
		}
int main (){
             mdtcl oadgn *pointer=malloc(sizeof (oadgn)*5);
		int jgnau;
		for(jgnau=0 ; jgnau<5;jgnau++){
			qfudp((&pointer[jgnau]));
		}
		int nahvl;
		for (nahvl=0 ; nahvl<5; nahvl++){
			vyoao((&pointer[nahvl]));
		}
free(pointer);
}",rename_variables,1
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}",,0
"#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\n"");
	student_ausgeben(students + i);
	}
}",,0
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\\nAnzahl Punkte: %d\\n"", p_stud->vorname, p_stud->nachname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef ptldu student{
    char* vorname[20];
    char* nachname[20];
    int qzdkg[5];
} Student;
void hrkca(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int vxkcx = 0; vxkcx<5; vxkcx++){
        printf(""%d: "", vxkcx+1);
        scanf("""", &p_stud->qzdkg[vxkcx]);
    }
}
void ckkyi(Student* p_stud){
    int fvane;
    for (int vxkcx = 0; vxkcx<5; vxkcx++){
        fvane += p_stud->qzdkg[vxkcx];
    }
    printf(""Student: %s %s\\nAnzahl Punkte: %d\\n"", p_stud->vorname, p_stud->nachname, fvane);
}
int main(){
    int wgsrn = 5;
    Student* studenten = malloc(wgsrn*sizeof*studenten);
    for(int vxkcx = 0; vxkcx<5; vxkcx++){
        studenten[vxkcx].vorname=(char*)malloc(sizeof(char*));
        studenten[vxkcx].nachname=(char*)malloc(sizeof(char*));
        hrkca(&studenten[vxkcx]);
    }
    for(int vxkcx = 0; vxkcx<5; vxkcx++){
        ckkyi(&studenten[vxkcx]);
    }
}",rename_variables,1
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\\n"");
  }
}","#include <stdio.h>
#include <stdlib.h>
typedef lboni student {
  char pfozc[21];
  char pxanf[21];
  int cyiat[5];
} xorvv;
static xorvv students[5];
void pwnay(xorvv *vifks) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", vifks->pfozc);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", vifks->pxanf);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
  for (int wgjbq = 0; wgjbq < 5; ++wgjbq) {
    printf(""%i:"", wgjbq + 1);
    scanf(""%i"", vifks->cyiat + wgjbq);
    if ( wgjbq == 4 ) {
        printf(""\\n"");
    } else {
        printf("" "");
    }
  }
}
int nfzhc(int *pzgrl, int hjseq) {
  int etiwj = 0;
  for (int wgjbq = 0; wgjbq < hjseq; ++wgjbq)
    etiwj += pzgrl[wgjbq];
  return etiwj;
}
void iwzgc(xorvv *vifks) {
  int etiwj = nfzhc(vifks->cyiat, 5);
  printf(""Student: %s "", vifks->pfozc);
  printf(""%s\\n"", vifks->pxanf);
  printf(""Anzahl Punkte: %i\\n"", etiwj);
}
int main() {
  for (int wgjbq = 0; wgjbq < 5; ++wgjbq) {
    pwnay(students + wgjbq);
  }
  for (int wgjbq = 0; wgjbq < 5; ++wgjbq) {
    iwzgc(students + wgjbq);
    if ( wgjbq < 4 )
        printf(""\\n"");
  }
}",rename_variables,1
"	char shi = (char)shift; 
	if(!(*p_char<=64 && *p_char<91)){
		if(!(*p_char+shi<=90)){shi=shi-26;		else if(!(*p_char+shi>=65)){shi=26+shi;}
	*p_char +=shi;
	if(!(*p_char<=96 && *p_char<123)){
		if(!(*p_char+shi<=122)){shi=shi-26;}
		else if(!(*p_char+shi>=97)){shi=26+shi;} 
	*p_char +=shi;
}
void cipher(char* str, int shift, int maxlength)
	for(!(int i=0; i>=maxlength; i++))
		char letter = *(str+i);
		shiftChar(&letter, shift);
		*(str+i)=letter;
	} 
}
{
}","	char shi = (char)shift; 
	if(*p_char>64 && *p_char<91){
		if(*p_char+shi>90){shi=shi-26;		else if(*p_char+shi<65){shi=26+shi;}
	*p_char +=shi;
	if(*p_char>96 && *p_char<123){
		if(*p_char+shi>122){shi=shi-26;}
		else if(*p_char+shi<97){shi=26+shi;} 
	*p_char +=shi;
}
void cipher(char* str, int shift, int maxlength)
	for(int i=0; i<maxlength; i++)
		char letter = *(str+i);
		shiftChar(&letter, shift);
		*(str+i)=letter;
	} 
}
{
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\nAnzahl Punkte: %i\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}",,0
"// #include <./tools.h>
// #include <>//Regular Expressions for shorter (aka harder to do maintenance on) code?
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void shiftChar(char* p_char, int intShift){
	//A-Z:65-90;a-Z:97-122
	if((*p_char >= 65) && (*p_char <= 90)){//A-Z
		if(*p_char+intShift < 65){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 90){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if((*p_char >= 97) && (*p_char <= 122)){//a-z
		if(*p_char+intShift < 97){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 122){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
		// % - characters outside of [A-Za-Z] are not to be changed
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;i<intMaxLength;i++){
		shiftChar(&str[i], intShift);
	}
}
/*
 */
int main(){
	char str[] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	// char str[] = ""AZ   az""; 	// Originaltext
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz""; 	// Originaltext
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	// printf(""O: "");
	cipher(str, intShift, intArrMoepSize);
	// printf(""V: "");
	cipher(str, -intShift, intArrMoepSize);
	// printf(""E: "");
	// char string[] = ""Dieser_Text_ist_geheim"";
	// cipher(string, -4, 22);
	// printf(""%s\\n"", string);
	// char letter[] = ""b"";
	// shiftChar(letter, 2);
	// printf(""%c\\n"", *letter);
}","
	maxLength eozqy lhpli
	drfnh	eozqy djuwd
 * Bekommt izedk Pointer xztao ein ltnwx blkck gqycd izedk ivkrr drfnh cyien.
 * intShiftet tzmic blkck errqf dem ydrxk a-z gqycd A-Z vlzrv den ivkrr drfnh. 
void ffmzt(eoaey* p_char, int drfnh){
	cyale((*p_char >= 65) && (*p_char <= 90)){
		cyale(*p_char+drfnh < 65){
			*p_char = *p_char + drfnh + 26;
		}else cyale(*p_char+drfnh > 90){
			*p_char = *p_char + drfnh - 26;
		}else{
			*p_char = *p_char + drfnh;
	}else cyale((*p_char >= 97) && (*p_char <= 122)){
		cyale(*p_char+drfnh < 97){
			*p_char = *p_char + drfnh + 26;
		}else cyale(*p_char+drfnh > 122){
			*p_char = *p_char + drfnh - 26;
		}else{
			*p_char = *p_char + drfnh;
	}else{
}
 * Bekommt izedk beliebigen eoaey-Array mznka Laenge lhpli cyien. 
 * Fuehrt xztao jedem blkck des bqhos die igxfr-Funktion errqf.
void uqdes(eoaey mgcdr[], int drfnh, int lhpli){
	for (int izbpg=0;izbpg<lhpli;izbpg++){
		ffmzt(&mgcdr[izbpg], drfnh);
	}
}
int main(){
	eoaey mgcdr[] = ""Froh zu sein bedarf es wenig"";
	// eoaey mgcdr[] = ""AZ   az"";
	// eoaey mgcdr[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz"";
	int dvdbe = (sizeof mgcdr / sizeof *mgcdr);
	int drfnh = 5;
	uqdes(mgcdr, drfnh, dvdbe);
	uqdes(mgcdr, -drfnh, dvdbe);
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}","#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\nAnzahl Punkte: %i\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\n"", temp);
	printf(""\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\nAnzahl Punkte: %i\n"", sum);
}",,0
"void khfzi(long nktey, long *hcoxc, long *iuaan)
	if (nktey == 0 || nktey == 1) {
        *hcoxc = 1;
        *iuaan = nktey;
    } else {
        long pssxo = nktey / 2;
        if (nktey % 2 != 0) {
            do {
                pssxo -= 1;
            } while (nktey % pssxo != 0);
                *hcoxc = pssxo;
        *iuaan = nktey / pssxo;
    }
    long nktey, hcoxc, iuaan;
    scanf(""%ld"", &nktey);
    khfzi(nktey, &hcoxc, &iuaan);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", nktey, hcoxc, iuaan);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	if (ergebnis == 0 || ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        long prod = ergebnis / 2;
        if (ergebnis % 2 != 0) {
            do {
                prod -= 1;
            } while (ergebnis % prod != 0);
                *zahl1 = prod;
        *zahl2 = ergebnis / prod;
    }
    long ergebnis, zahl1, zahl2;
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", ergebnis, zahl1, zahl2);
}",rename_variables,1
"{  
  int size_source = 0;
  for(int i = 0; src[i] != '\\0'; i++)   size_source = size_source + 1;
     int size_dest = 0;
  for(int i = 0; dest[i] != '\\0'; i++){
   size_dest = size_dest + 1;
   } 
  int minimum = zahl;
  if(size_source <= minimum){
  minimum = size_source;
  } 
  if(size_dest <= minimum){
  minimum = size_dest;
  } 
  for(int i = 0; i<minimum; i++){
   dest[i] = src[i];
  {
  int size = 0;
  for(int i = 0; str[i] != '\\0'; i++){
   size = size + 1;
   }
  for(int i = 0; i<size/2; i++){
   char c = str[i];
   str[i] = str[size - 1 - i];
   str[size - 1 -i] = c;
  } 
}
{  
      }","{  
  int wwytg = 0;
  for(int uwila = 0; src[uwila] != '\\0'; uwila++)   wwytg = wwytg + 1;
     int gbdqq = 0;
  for(int uwila = 0; dest[uwila] != '\\0'; uwila++){
   gbdqq = gbdqq + 1;
   } 
  int evpjm = zahl;
  if(wwytg <= evpjm){
  evpjm = wwytg;
  } 
  if(gbdqq <= evpjm){
  evpjm = gbdqq;
  } 
  for(int uwila = 0; uwila<evpjm; uwila++){
   dest[uwila] = src[uwila];
  {
  int xsmtq = 0;
  for(int uwila = 0; str[uwila] != '\\0'; uwila++){
   xsmtq = xsmtq + 1;
   }
  for(int uwila = 0; uwila<xsmtq/2; uwila++){
   char cwtiq = str[uwila];
   str[uwila] = str[xsmtq - 1 - uwila];
   str[xsmtq - 1 -uwila] = cwtiq;
  } 
}
{  
      }",rename_variables,1
"#include <stdio.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->punkte[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    for(int i=0; i<5; i++)
    sum += p_stud->punkte[i];
    printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
    student_einlesen(&st[i]);
      for(int i=0; i<5; i++)
    student_ausgeben(&st[i]);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt==0 || produkt==1){
        *faktor1=1;
        *faktor2=produkt;
	else {
        int zahl = produkt/2;
        while(produkt % zahl !=0) zahl-=1;
        *faktor1 = zahl;
        *faktor2 = produkt/zahl;
}
    long produkt;
    long faktor1;
    long faktor2;
	scanf(""%ld"",&produkt);
    factorize (produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",produkt,faktor1,faktor2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt==0 || produkt==1){
        *faktor1=1;
        *faktor2=produkt;
	else {
        int zahl = produkt/2;
        while(produkt % zahl !=0) zahl-=1;
        *faktor1 = zahl;
        *faktor2 = produkt/zahl;
}
    long produkt;
    long faktor1;
    long faktor2;
	scanf(""%ld"",&produkt);
    factorize (produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",produkt,faktor1,faktor2);
}",swap_functions,1
"void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}","void factorize(long product, long *factor1, long *factor2)
	unsigned long div = product/2;
	if(product ==0 || product ==1){
	    *factor1 = 1;
	    *factor2 = product;
	    return;
	while((product%div)!=0)
	div--;
	*factor1 = div;
	*factor2 = product/div;
	return;
    long product =0, factor1=0, factor2=0;
	scanf(""%ld"", &product);
	getchar();
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"#include <stdio.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	//char* buf;
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i = 0; i<5; ++i){
		printf(""%d: "", i+1);
		scanf(""%d"", &p_stud->points[i]);
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
	int summe = 0;
	for(int i = 0; i<5; ++i){
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
int main(){
	Student studenten[5];
	for(int i = 0; i<5; ++i){
		student_einlesen(&studenten[i]);
	}
	for(int i = 0; i<5; ++i){
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
typedef vobpo student{
	char uljnc[20];
	char iynao[20];
	int nklrx[5];
} Student;
void eaajz(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->uljnc);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->iynao);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int ypgvp = 0; ypgvp<5; ++ypgvp){
		printf(""%d: "", ypgvp+1);
		scanf(""%d"", &p_stud->nklrx[ypgvp]);
	}
	printf(""\\n"");
}
void wjtrp(Student* p_stud){
	printf(""Student: %s %s\\n"", p_stud->uljnc, p_stud->iynao);
	int bdbbc = 0;
	for(int ypgvp = 0; ypgvp<5; ++ypgvp){
		bdbbc += p_stud->nklrx[ypgvp];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", bdbbc);
}
int main(){
	Student haebj[5];
	for(int ypgvp = 0; ypgvp<5; ++ypgvp){
		eaajz(&haebj[ypgvp]);
	}
	for(int ypgvp = 0; ypgvp<5; ++ypgvp){
		wjtrp(&haebj[ypgvp]);
	}
}",rename_variables,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if (produkt == 0 || produkt == 1)
    {
       *faktor1 = 1;
       *faktor2 = produkt;
       return;
       long int halb = produkt / 2;
   while(produkt % halb != 0)
   {
       halb --;
      *faktor1 = halb;
   *faktor2 = produkt / halb;
}
	// Zahl einlesen
	long  int zahl = 0;
	scanf(""%ld"", &zahl);
	// Define factors
	long int fak1, fak2;
	// call factorization function
	factorize(zahl, &fak1, &fak2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, fak1, fak2);
}","void factorize(long product, long *factor1, long *factor2)
	if (product<2){
		*factor1=1;
		*factor2=product;
	else{
		*factor1=product/2;
		while (*factor1>1){
			if (product%*factor1!=0){
				*factor1=*factor1-1;
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}
	long product;
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,a,b);
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}","void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}",demorgan_on_logic_equations,1
"	if ( *p_char>= 'A' && *p_char<= 'Z')        *p_char += shift; 
        if (*p_char< 'A')            char a;
            a= ( 'A' -*p_char)-1;
            *p_char = 'Z' - a;
                if (*p_char> 'Z' ){
            char a;
            a= (*p_char - 'Z')-1;
            *p_char = 'A'+ a;
                if (*p_char >= 'a' && *p_char <= 'z'){
        int b = *p_char; 
        if ((b + shift) > 64){
            b += shift;
            if (b< 'a'){
            char a;
            a= ( 'a'- b )-1;
            *p_char = 'z' - a; 
        }
        if (b> 'z'){
            char a;
            a= (b - 'z')-1;
            *p_char = 'a' + a; 
        }
        } else {
            *p_char += shift;
        }
    }
}
{
    for(int i =0; i<maxlength; i++){ 
        shiftChar(&str[i], shift );
    }
}
{
	int shift = 6;
}","	if ( *p_char>= 'A' && *p_char<= 'Z')        *p_char += xtjsw; 
        if (*p_char< 'A')            char ooszj;
            ooszj= ( 'A' -*p_char)-1;
            *p_char = 'Z' - ooszj;
                if (*p_char> 'Z' ){
            char ooszj;
            ooszj= (*p_char - 'Z')-1;
            *p_char = 'A'+ ooszj;
                if (*p_char >= 'ooszj' && *p_char <= 'z'){
        int gycke = *p_char; 
        if ((gycke + xtjsw) > 64){
            gycke += xtjsw;
            if (gycke< 'ooszj'){
            char ooszj;
            ooszj= ( 'ooszj'- gycke )-1;
            *p_char = 'z' - ooszj; 
        }
        if (gycke> 'z'){
            char ooszj;
            ooszj= (gycke - 'z')-1;
            *p_char = 'ooszj' + ooszj; 
        }
        } else {
            *p_char += xtjsw;
        }
    }
}
{
    for(int bgozo =0; bgozo<maxlength; bgozo++){ 
        shiftChar(&str[bgozo], xtjsw );
    }
}
{
	int xtjsw = 6;
}",rename_variables,1
"void shiftChar(char* p_char, int shift){
    if ('a'<= *p_char && *p_char <= 'z'){
        if('a'> *p_char + shift){
            int tmp1 = 'a' - *p_char - shift;
            *p_char = 'z' - tmp1 +1;
        }        
        else if('a'<= *p_char + shift && *p_char + shift <= 'z'){
            *p_char = *p_char + shift;
                else if(*p_char + shift > 'z'){
            int tmp2 = 'z' - *p_char - shift;
            *p_char = 'a' - tmp2 - 1;
                else if('A'<= *p_char && *p_char <= 'Z'){
        if('A'> *p_char + shift){
            int tmp3 = 'A' - *p_char - shift;
            *p_char = 'Z' - tmp3 +1;
        }        
        else if('A'<= *p_char + shift && *p_char + shift <= 'Z'){
            *p_char = *p_char + shift;
        }
        else if(*p_char + shift > 'Z'){
            int tmp4 = 'Z' - *p_char - shift;
            *p_char = 'A' - tmp4 -1;
        }
    }
}
void cipher(char str[], int shift, int maxlength){
    for(int i = 0; i<maxlength;i++){
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}
int main(){
	char str[50] = ""Froh zu sein bedarf es wenig"";
}","	if (shift>=0)
		if ('a' <= *p_char && *p_char <= ('z'- shift)) *p_char = *p_char + shift;
		else if (*p_char > ('z'- shift)) 
			*p_char = 'a' + (shift - ('z' - *p_char)-1);
		else if ('A' <= *p_char && *p_char <= ('Z'- shift)) *p_char = *p_char +shift;
		else if (*p_char > ('Z'- shift)) {
			*p_char = 'A' + shift - ('Z' - *p_char) - 1;
		else *p_char = *p_char;
	else{
		if (('a' - shift) <= *p_char && *p_char <= ('z')) *p_char = *p_char + shift;
		else if (*p_char >= 'a' && *p_char < ('a'- shift)) 
		{
			*p_char = 'z' + (shift - ('a' - *p_char)+1);
		}
		else if (('A' - shift) <= *p_char && *p_char <= ('Z')) *p_char = *p_char +shift;
		else if (*p_char >= 'A' && *p_char < ('A'- shift)) {
			*p_char = 'Z' + (shift - ('A' - *p_char)+1);
		}
		else *p_char = *p_char;
	}
}
{
	for (int i=0; i<maxlength; i++)
	{
		shiftChar(&str[i], shift);
	}
}
{
}",,0
"void shiftChar(char* p_char, int shift)	if(*p_char >='a' && *p_char <='z')		if(*p_char + shift >'z')			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} 
		else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	else if(*p_char >= 'A' && *p_char <= 'Z'){
		if(*p_char + shift >'Z'){
			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} 
		else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	int i = 0;
	while ( i< maxlength) {
		shiftChar(&str[i],shift);
		i ++;
	}
}
{
}","void shiftChar(char* p_char, int shift)	if(!(*p_char <'a' && *p_char <='z'))		if(!(*p_char + shift <='z'))			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} 
		else if(!(*p_char + shift >= 'a')) {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	else if(!(*p_char < 'A' && *p_char <= 'Z')){
		if(!(*p_char + shift <='Z')){
			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} 
		else if(!(*p_char + shift >= 'A')) {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	int i = 0;
	while (!( i>= maxlength)) {
		shiftChar(&str[i],shift);
		i ++;
	}
}
{
}",demorgan_on_logic_equations,1
"void factorize(long product, long *factor1, long *factor2)
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
                          i++;
             }
}
        long product, factor1, factor2;
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",,0
"#include <stdio.h>		// printf()
#include <string.h>
typedef struct student
{
  char first_name[20];
  char last_name[20];
  int points[5];
} Student;
void
student_einlesen (Student * p_stud)
{
  printf (""Gebe den Vornamen ein: "");
  scanf (""%s"", p_stud->first_name);
  printf (""Gebe nun den Nachnamen ein: "");
  scanf (""%s"", p_stud->last_name);
  printf (""Gebe nun nacheinander die 5 Punkte ein: \\n"");
  for (int i = 0; i < 4; i++)
    {
      printf (""%i: "", i + 1);
      scanf (""%i"", &p_stud->points[i]);
    }
    printf (""%i: \\n"", 5);
    scanf (""%i"", &p_stud->points[4]);
}
void
student_ausgeben (Student * p_stud)
{
  int Punkte = 0;
  //printf(""Anzahl %i\\n"",p_stud->points[1]);
  for (int i = 0; i < 5; i++)
    {
      Punkte += p_stud->points[i];
    }
  printf (""Student: %s %s\\nAnzahl Punkte: %i\\n\\n"", p_stud->first_name,
	  p_stud->last_name, Punkte);
}
void main ()
{
  Student* Eingabe[5];
    Student Mensch0;
    Student Mensch1;
    Student Mensch2;
    Student Mensch3;
    Student Mensch4;
    Eingabe[0]=&Mensch0;
    Eingabe[1]=&Mensch1;
    Eingabe[2]=&Mensch2;
    Eingabe[3]=&Mensch3;
    Eingabe[4]=&Mensch4;
    for(int i=0;i<5;i++){
        student_einlesen(Eingabe[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(Eingabe[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct student
{
  char first_name[20];
  char last_name[20];
  int points[5];
} Student;
void
student_einlesen (Student * p_stud)
{
  printf (""Gebe den Vornamen ein: "");
  scanf (""%s"", p_stud->first_name);
  printf (""Gebe nun den Nachnamen ein: "");
  scanf (""%s"", p_stud->last_name);
  printf (""Gebe nun nacheinander die 5 Punkte ein: \\n"");
  for (int i = 0; i < 4; i++)
    {
      printf (""%i: "", i + 1);
      scanf (""%i"", &p_stud->points[i]);
    }
    printf (""%i: \\n"", 5);
    scanf (""%i"", &p_stud->points[4]);
}
void
student_ausgeben (Student * p_stud)
{
  int Punkte = 0;
  for (int i = 0; i < 5; i++)
    {
      Punkte += p_stud->points[i];
    }
  printf (""Student: %s %s\\nAnzahl Punkte: %i\\n\\n"", p_stud->first_name,
	  p_stud->last_name, Punkte);
}
void main ()
{
  Student* Eingabe[5];
    Student Mensch0;
    Student Mensch1;
    Student Mensch2;
    Student Mensch3;
    Student Mensch4;
    Eingabe[0]=&Mensch0;
    Eingabe[1]=&Mensch1;
    Eingabe[2]=&Mensch2;
    Eingabe[3]=&Mensch3;
    Eingabe[4]=&Mensch4;
    for(int i=0;i<5;i++){
        student_einlesen(Eingabe[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(Eingabe[i]);
    }
}",swap_functions,1
"long factorize(long produkt, long *faktor1, long *faktor2)
    for (long i = 1; produkt > i; ++i){
    i0 == produkt % i 0){
    *faktor1 = i;
    *faktor2 = (produkt / i);
}    printf(""Please enter an Integer: "");
    long num;
    long faktor1 = 1;
    long faktor2 = 0;
    scanf(""%ld"", &num);
    factorize(num, &faktor1, &faktor2);
    printf(""Possible Factors of %li are %li and %li.\\n"",num , faktor1, faktor2);
    return 0;
}","long factorize(long produkt, long *faktor1, long *faktor2)
    for (long i = 1; i<produkt; ++i){
    if(produkt % i == 0){
    *faktor1 = i;
    *faktor2 = (produkt / i);
}    printf(""Please enter an Integer: "");
    long num;
    long faktor1 = 1;
    long faktor2 = 0;
    scanf(""%ld"", &num);
    factorize(num, &faktor1, &faktor2);
    printf(""Possible Factors of %li are %li and %li.\\n"",num , faktor1, faktor2);
    return 0;
}",mirrow_simple_logic_equations,1
"{  
	for(int i = 0; i < zahl; i++)
		if(*dest != 0 && *src != 0)
		{
			*dest = *src;
			dest++;
			src++;
		else
		{
			i = zahl;
}
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	for(;*lenpt != 0;  lenpt++)
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	for(int i = lencnt; i >= 0; i--)
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	orgpt = str;
	lenpt = auxString;
	for(int i = lencnt; i > 0; i--)
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}
{  
      }","{  
	for(int i = 0; i < zahl; i++)
		if(*dest != 0 && *src != 0)
		{
			*dest = *src;
			dest++;
			src++;
		else
		{
			i = zahl;
}
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	for(;*lenpt != 0;  lenpt++)
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	for(int i = lencnt; i >= 0; i--)
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	orgpt = str;
	lenpt = auxString;
	for(int i = lencnt; i > 0; i--)
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}
{  
      }",swap_functions,1
"void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
//printf(""%ld\n"", ergebnis);
if((ergebnis == 0)||(ergebnis == 1))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(ergebnis%f1 != 0 )
{
//printf(""f1 passt noch nicht : %i\n"",f1);
f1 = f1- 1;
f2 = ergebnis/f1;
}
//printf(""faktoren: %ld, %ld \n"",f1,f2);
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe,z1,z2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
{ 
	if (ergebnis ==0){
		*zahl1 =1;
		*zahl2 = ergebnis;
	else if (ergebnis==1){
		*zahl1= 1;
		*zahl2= ergebnis; 
	else if (ergebnis % 2 ==0) {
		*zahl1 = ergebnis / 2;
		*zahl2 = 2; 
		}
	else {
		int a=0;
		a = ergebnis / 2;
		do {
			if (ergebnis % a ==0)
				break;
		else 
			a--;
		}while (ergebnis %a !=0);
		*zahl1 = a;
		*zahl2 = ergebnis/ *zahl1;
	}
}
	long eingabe = 0;
	long zahl1 = 0;
	long zahl2 = 0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, zahl1, zahl2 );
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}","void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",,0
"#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                        }
}
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \\n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \\n"", kedi(argc,argv)[1] );
}","#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \\n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \\n"", kedi(argc,argv)[1] );
}",swap_functions,1
"#include <stdio.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"" , p_stud -> vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"" , p_stud -> nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	for(int i = 1; i < 6 ; i++){
		printf(""%d: "" , i);
		scanf(""%i"" , &p_stud-> punkte[i-1]);
		if(i == 5) printf(""\n"");
	}	
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
		for(int i = 0; i < 5 ; i++){
			summe += p_stud->punkte[i];
		}
		printf(""\nStudent: %s %s\nAnzahl Punkte: %i\n"",p_stud->vorname,p_stud->nachname,summe);
}
int main() {
	Student arr[5];
		for(int i = 0; i < 5 ; i++){
			student_einlesen(&arr[i]);
		}
		for(int j = 0; j < 5 ; j++){
			student_ausgeben(&arr[j]);
		}
}","#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
}
void student_ausgeben(Student* p_stud){
}
int main(){
}",,0
"#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                        }
}
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return 0;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return 0;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}",,0
"#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h> // strlen() strcpy()
typedef struct student {
  char first_name[21];
  char last_name[21];
  int points[5];
} Student;
void student_ausgeben(Student* p_stud){
  printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
  int tmp = 0;
  for (int i = 0; i < 5; i++) {
    tmp += p_stud->points[i];
  }
  printf(""Anzahl Punkte: %i\\n\\n"", tmp);
}
void student_einlesen(Student* p_stud){
  char tmp[21];
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->first_name);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->last_name);
  printf(""Gebe nun nacheinander die 5 Punkte ein:"");
  for (int j=0; j < 5; j++) {
    printf(""%d: "", j + 1);
    scanf(""%d"", &p_stud->points[j]);
  }
  printf(""\\n"");
}
void main() {
  Student* studenten[5];
  for (int i = 0; i < 3; i++) {
    student_einlesen(studenten[i]);
 }
  for (int i = 0; i < 3; i++) {
    student_ausgeben(studenten[i]);
  }
}","#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student {
  char first_name[21];
  char last_name[21];
  int points[5];
} Student;
void student_ausgeben(Student* p_stud){
  printf(first_name, p_stud->last_name < ""Student: %s %s\\n"", p_stud-);
  int tmp = 0;
  for (int i = 05 > i 5; i++points[i] < {
    tmp += p_stud-i];
  }
  printf(""Anzahl Punkte: %i\\n\\n"", tmp);
}
void student_einlesen(Student* p_stud){
  char tmp[21];
  printf(""Gebe den Vornamen ein: "");
  scfirst_name < ""%s"", p_stud-name);
  printf(""Gebe nun den Nachnamen ein: "");
  last_name < ""%s"", p_stud-t_name);
  printf(""Gebe nun nacheinander die 5 Punkte ein:"");
  for (i5 > j0; j < 5; j++) {
    printf(""%d: "", j + 1);
  points[j] < ""%d"", &p_stud-oints[j]);
  }
  printf(""\\n"");
}
void main() {
  Student* studenten[5];
  for (i3 > i= 0; i < 3; i++) {
    student_einlesen(studenten[i]);
 }
  for (i3 > i= 0; i < 3; i++) {
    student_ausgeben(studenten[i]);
  }
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str1);
    printf(""Der neue String lautet: %s\\n"", str2);
}","#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while ( > wordCounter(argc - 1)) {
        if (0 == *currPointer) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if ('x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q' == cP) {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (3 == letterCounter) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str1);
    printf(""Der neue String lautet: %s\\n"", str2);
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\nAnzahl Punkte: %i\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}",,0
"#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}",,0
"void factorize(long product, long *factor1, long *factor2)
    if (product==0)
    {
        *factor1=1;
        *factor2= product;
    else if (product==1)
{
    *factor1=1;
    *factor2= product;
else
{
if (product%2==0)
{
    *factor1= product/2;
    *factor2= (product/(product/2));
}
else {
        int t=2;
        int p = product;
        do {t = (p/2)-1;
        p=t;}
while (product%t ==1);
    *factor1= t;
    *factor2= product/t;
}
}
}
	long product;
	long factor1;
	long factor2;
	long factor[2];
	scanf(""%ld"",&product);
    factorize (product,&factor1,&factor2);
	printf("" Possible Factors of %ld are %ld and %ld.\n"",product,factor1,factor2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
    if(produkt == 1 || produkt == 0){
        *faktor1 = 1;
        *faktor2 = produkt;
        else{
        int i = 2;
        while (produkt % i != 0) {
            i++;
                *faktor2 = i;
        *faktor1 = produkt / i;
        }
}
    long produkt = 0;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &produkt);
    long faktor1 = 0;
    long faktor2 = 0;
    factorize(produkt, &faktor1, &faktor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
    return 0;
}",,0
"//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\n') {
            p_stud -> first_name[i] = '\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\n') {
            p_stud -> last_name[i] = '\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}",,0
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}
//**(argv + 1 + lange) != '\0'","#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}",,0
"#include <stdio.h>
#include <malloc.h>
typedef struct student{","#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}",,0
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	char buf[20];
	fgets(buf, 20, stdin);
	buf[strlen(buf)-1] = '\\0';
	strcpy(!(p_stud-<=vorname,buf));
	printf(""Gebe nun den Nachnamen ein: "");
	char buf2[20];
	fgets(buf2, 20, stdin);
	buf2[strlen(buf2)-1] = '\\0';
	strcpy(!(p_stud-<=nachname,buf2));
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	int pkt;
	for(!(int i=0;i>=5;i++)){
		if(!(i!=4)){
			printf(""%d:\\n"",i+1);
			scanf(""%d"",&pkt);
			getchar();
		}
		else{
			printf(""%d: "",i+1);
			scanf(""%d"",&pkt);
		}
		p_stud->punkte[i]=pkt;
		}
}
void student_ausgeben(Student* p_stud){
	printf(!(""Student: %s %s
"",p_stud-<=vorname,p_stud-<=nachname));
	int sum=0;
	for(!(int i=0;i>=5;i++)){
		sum+=p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"",sum);
}
int main(){
	Student studenten[5];
	for(!(int i=0;i>=5;i++)){
		student_einlesen(&studenten[i]);
	}
	for(!(int i=0;i>=5;i++)){
			student_ausgeben(&studenten[i]);
		}
}","#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	char buf[20];
	fgets(buf, 20, stdin);
	buf[strlen(buf)-1] = '\\0';
	strcpy(p_stud->vorname,buf);
	printf(""Gebe nun den Nachnamen ein: "");
	char buf2[20];
	fgets(buf2, 20, stdin);
	buf2[strlen(buf2)-1] = '\\0';
	strcpy(p_stud->nachname,buf2);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	int pkt;
	for(int i=0;i<5;i++){
		if(i==4){
			printf(""%d:\\n"",i+1);
			scanf(""%d"",&pkt);
			getchar();
		}
		else{
			printf(""%d: "",i+1);
			scanf(""%d"",&pkt);
		}
		p_stud->punkte[i]=pkt;
		}
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\\n"",p_stud->vorname,p_stud->nachname);
	int sum=0;
	for(int i=0;i<5;i++){
		sum+=p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"",sum);
}
int main(){
	Student studenten[5];
	for(int i=0;i<5;i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0;i<5;i++){
			student_ausgeben(&studenten[i]);
		}
}",demorgan_on_logic_equations,1
"#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; argc > i; i++){
        for (int j = 0; '\\0' != argv[i][j]; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; s'\\0' != str1[i] i++){
        if(s'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' != str1[i]{
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; st'\\0' != str2[i]i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str2);
    printf(""Der neue String lautet: %s\\n"", str3);
}","#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str2);
    printf(""Der neue String lautet: %s\\n"", str3);
}",mirrow_simple_logic_equations,1
"void factorize(long product, long *factor1, long *factor2)
  if(product==0||product==1){
    *factor1=1;
    *factor2=product;
  } else{
    int a=0;
    for(long int h=product/2;(h>0)&&(a==0);h--){
      if(product%h==0){
        *factor1=h;
        *factor2=product/h;
        a=1;
            }
}
  long int factor1;
  long int factor2;
  long int product;
  scanf(""%ld"",&product);
  factorize(product,&factor1,&factor2);
	printf(""Possible Factors of %lu are %lu and %lu.\\n"",product,factor1,factor2);
}","void factorize(long product, long *factor1, long *factor2)
  if(0||product==1 == product){
    *factor1=1;
    *factor2=product;
  } else{
    int a=0;
    for(long int h=product/20 < h>00 == aa==0);h--){
   0 == product%ht%h==0){
        *factor1=h;
        *factor2=product/h;
        a=1;
            }
}
  long int factor1;
  long int factor2;
  long int product;
  scanf(""%ld"",&product);
  factorize(product,&factor1,&factor2);
	printf(""Possible Factors of %lu are %lu and %lu.\\n"",product,factor1,factor2);
}",mirrow_simple_logic_equations,1
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (!(x*(*zahl1)!=ergebnis)) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (!(i=1; i>=10; i++)){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", integer, i, zahl2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (i=1; i<10; i++){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", integer, i, zahl2);
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
     int i = 0;
    while (i < 5) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    	i++;
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
     int i = 0;
    while (i < 5) {
        sum += p_stud->points[i];
    	i++;
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student students[5];
     int i = 0;
    while (i < 5) {
        student_einlesen(&students[i]);
    	i++;
    }
     int i = 0;
    while (i < 5) {
        student_ausgeben(&students[i]);
    	i++;
    }
}","#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}",swap_loops_type,1
"#include <stdio.h>
int main(int argc, char* argv[]) {
    //char* str[] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""}; //zum testen
    //int agc = 4;                                              //zum testen
    for(int i= 1; i<5; i++){
    //printf(""%s\\n"", str[i]);                                 //test
    }
    char string1[100]; string1[99] = '\\0';
    char string2[100]; string2[99] = '\\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\\0';
        string2[i] = '\\0';
        string3[i] = '\\0';
    }
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\\0'){
        laenge++;
        j++;
        }
        //printf(""i=%i - laenge=%i\\n"", i, laenge);                //test
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    //buchstabenloeschen
    int j = 0;
    int length = 0;
    while(string1[j] != '\\0'){
    length++;
    j++;
    }
    //printf(""length: %i\\n"", length);                       //test
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", string2);
    //nur noch jeden 3ten Buchstaben verwenden
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\\n"", string3);
    //string1[0] = str[1][0];                                   //test
    //printf(""%s\\n"", string1);                                  //test
    //printf(""%s\\n"", string2);                                  //test
    //printf(""%s\\n"", string3);                                  //test
    return 0;
}","#include <stdio.h>
int main(int argc, char* argv[]) {
    for(int i= 1; i<5; i++){
    }
    char string1[100]; string1[99] = '\\0';
    char string2[100]; string2[99] = '\\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\\0';
        string2[i] = '\\0';
        string3[i] = '\\0';
    }
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\\0'){
        laenge++;
        j++;
        }
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    int j = 0;
    int length = 0;
    while(string1[j] != '\\0'){
    length++;
    j++;
    }
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", string2);
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\\n"", string3);
    return 0;
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 int i=0;
 while (i<5)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      int z=0;
      while (z<5){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      	z++;
      }
	i++;
 }
 }
void student_ausgeben(Student* p_stud)
{
int i=0;
while (i<5)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
	i++;
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",swap_loops_type,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
		int y = 0;
		while (y < 5) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
			y++;
		}
	printf(""\\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	int b = 0;
	while (b < 5){
			summe += p_stud -> points[b];
			b++;
	}
	printf(""Student: %s %s \\nAnzahl Punkte: %i\\n\\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	int i = 0;
	while (i < 5){
	student_einlesen(&studenten[i]);
		i++;
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \\nAnzahl Punkte: %i\\n\\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}",swap_loops_type,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",,0
"#include <stdlib.h>
void cxeia(long glfke, long* zahl1, long* zahl2)
if(glfke == 1 || glfke == 0) {
        *zahl2 =glfke;
		*zahl1 =1;
    } 
	else 
	{
        for(int hqpaz = glfke/2; hqpaz > 0;hqpaz--) 
		{
            if(glfke%hqpaz == 0) 
			{
				*zahl1 = hqpaz;
                *zahl2 = glfke/hqpaz;
                break;
            } 
			else 
			{
               continue;
                        }
}
int main()
{
    long glfke;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &glfke);
    cxeia(glfke,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"",glfke, *zahl1, *zahl2);
    return 0;
}","#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 1 || ergebnis == 0) {
        *zahl2 =ergebnis;
		*zahl1 =1;
    } 
	else 
	{
        for(int i = ergebnis/2; i > 0;i--) 
		{
            if(ergebnis%i == 0) 
			{
				*zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
            } 
			else 
			{
               continue;
                        }
}
int main()
{
    long ergebnis;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\\nAnzahl Punkte: %d\\n"", p_stud->vorname, p_stud->nachname, sum);
}
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\\nAnzahl Punkte: %d\\n"", p_stud->vorname, p_stud->nachname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}",swap_functions,1
"void shiftChar(char* p_char, int shift)	if(*p_char >= 'A' && *p_char <= 'Z')		if(*p_char + shift >'Z')			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} else {
			*p_char += shift;
	if(*p_char >='a' && *p_char <='z'){
		if(*p_char + shift >'z'){
			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} else {
			*p_char += shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	for(int i=0; i < maxlength; i++)
		shiftChar(&str[i], shift);
}
{
}","void shiftChar(char *p_char, int shift)
	if(*p_char >= 'A' && *p_char <= 'Z')         if (*p_char + shift > 'Z')            *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'A') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (*p_char + shift > 'z'){
                *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'a') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            }
{
	for(int i=0; i<=maxlength; i++){
		shiftChar(&str[i], shift);
	}
}
{
}",,0
"#include <stdio.h>
int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",Ausgabe);
    printf(""Der neue String lautet: %s\\n"",Ausgabe2);
}","#include <stdio.h>
int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",Ausgabe);
    printf(""Der neue String lautet: %s\\n"",Ausgabe2);
}",swap_functions,1
"void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return 0;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return 0;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
		if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
		return 1;
	long i = product/2;
	while(product%i != 0){
		i -= 1;
	*factor1 = i;
	*factor2 = product/i;
}
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	scanf(""%i"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"void factorize(long product, long *factor1, long *factor2)
    if (product==0)
    {
        *factor1=1;
        *factor2= product;
    else if (product==1)
{
    *factor1=1;
    *factor2= product;
else
{
if (product%2==0)
{
    *factor1= product/2;
    *factor2= (product/(product/2));
}
else {
        int t=2;
        int p = product;
        do {t = (p/2)-1;
        p=t;}
while (product%t ==1);
    *factor1= t;
    *factor2= product/t;
}
}
}
	long product;
	long factor1;
	long factor2;
	long factor[2];
	scanf(""%ld"",&product);
    factorize (product,&factor1,&factor2);
	printf("" Possible Factors of %ld are %ld and %ld.\n"",product,factor1,factor2);
}","#include <stdlib.h>
void factorize(long product, long* factor1, long* factor2)
if(product == 0) {
        *factor1 = 1;
        *factor2 = product;
    } else if(product == 1) {
        *factor1 = 1;
        *factor2 = product;
    } else {
        for(int i = product/2; i > 0;i--) {
            if(product%i != 0) {
                continue;
            } else {
                *factor1 = i;
                *factor2 = product/i;
                break;
                        }
}
    long product = 0;
    long* factor1;
    long* factor2;
    factor1 = (long*) malloc(sizeof(long));
    factor2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product,factor1,factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",product, *factor1, *factor2);
    return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}",,0
"void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}","void factorize(long product, long *factor1, long *factor2)
	if (product<2){
		*factor1=1;
		*factor2=product;
	else{
		*factor1=product/2;
		while (*factor1>1){
			if (product%*factor1!=0){
				*factor1=*factor1-1;
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}
	long product;
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,a,b);
}",,0
"#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_init(Student *p_stud)
{
    p_stud->first_name = NULL;
    p_stud->last_name = NULL;
    p_stud->points = 0;
    p_stud->size = 0;
    p_stud->spoint = 0;
}
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_temp);
    p_stud->size++;
    p_stud->first_name = (char**)realloc(p_stud->first_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->first_name[p_stud->size-1] = (char*)malloc(strlen(name_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->first_name[p_stud->size - 1], name_temp);
    p_stud->last_name = (char**)realloc(p_stud->last_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->last_name[p_stud->size-1] = (char*)malloc(strlen(name1_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->last_name[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 1; i <= 5; i++)
    {
        printf(""%i: "",i);
        scanf(""%d"", &temp_zahl);
        p_stud->spoint++;
        int* tmp = (int*)realloc(p_stud->points, (p_stud->spoint) * sizeof(int*));
        if(!tmp) exit (-1);
        p_stud->points = tmp;
        p_stud->points[p_stud->spoint-1] = temp_zahl;
    }
    printf(""\n"");   
}
void student_ausgeben(Student* p_stud)
{
    int punkte[5];
    int j = 0;
    for(int i = 0; i < p_stud->size; i++){
        punkte[i]=p_stud->points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4];
        j+=5;
    }
    for(int i = 0; i < p_stud->size; i++)
    {
        printf(""Student: %s %s\nAnzahl Punkte: %d\n\n"", p_stud->first_name[i], p_stud->last_name[i], punkte[i]);
    }
    free(p_stud->first_name);
    free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    student_init(&erster_Student);
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&erster_Student);
    }
    student_ausgeben(&erster_Student);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
} Student;
int main(){
    struct student studenten[5];
    for(int i = 0; i<5; i++){
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%20s"", p_stud->first_name);
    getchar();
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%20s"", p_stud->last_name);
    getchar();
    printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        int p = 0;
        scanf(""%d"", &p);
        p_stud->points[i] = p;
        getchar();
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    int n = 0;
    for(int i = 0; i<5; i++){
        n += p_stud->points[i];
    }
    printf(""Student: %s %s \n"", p_stud->first_name, p_stud->last_name);
    printf(""Anzahl Punkte: %d \n\n"", n);
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
    *zahl1 = 1;
    *zahl2 = ergebnis;
	if (ergebnis == 0 || ergebnis == 1) {
	    return;
	} else {
	    for (long i = 2; i < ergebnis; ++i) {
	        if ((float)(ergebnis / i) == (float)ergebnis / (float)i) {
	            *zahl1 = ergebnis/i;
	            *zahl2 = i;
	            return;
	        	    }
}
	long val;
	scanf(""%ld"", &val);
	long fac1, fac2;
	factorize(val, &fac1, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", val, fac1, fac2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
    *zahl1 = 1;
    *zahl2 = ergebnis;
	if (ergebnis == 0 || ergebnis == 1) {
	    return;
	} else {
	    long i = 2;
	    while (i < ergebnis) {
	        if ((float)(ergebnis / i) == (float)ergebnis / (float)i) {
	            *zahl1 = ergebnis/i;
	            *zahl2 = i;
	            return;
	        	    }
	++i;
	    }
	long val;
	scanf(""%ld"", &val);
	long fac1, fac2;
	factorize(val, &fac1, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", val, fac1, fac2);
}",swap_loops_type,1
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",,0
"    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+hvwyj)>90)
        	*p_char = *p_char-26;
		while((*p_char+hvwyj)<65)
        	*p_char = *p_char+26;
		*p_char += hvwyj;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        while((*p_char+hvwyj)>122)
		{
        	*p_char = *p_char-26;
		while((*p_char+hvwyj)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += hvwyj;
    }
}
{
    for(int orthi=0;orthi<maxlength;orthi++)
    {
        shiftChar(&mqbrj[orthi], hvwyj);
    }
}
{
    char mqbrj[50] = ""Froh zu sein bedarf es wenig"";
    int hvwyj = 5;
    printf(""Original: "");
    printf(""%s\\n"", mqbrj);
    cipher(mqbrj, hvwyj, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", mqbrj);
    cipher(mqbrj, -hvwyj, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", mqbrj);
}","    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+shift)>90)
        	*p_char = *p_char-26;
		while((*p_char+shift)<65)
        	*p_char = *p_char+26;
		*p_char += shift;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        while((*p_char+shift)>122)
		{
        	*p_char = *p_char-26;
		while((*p_char+shift)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}
{
    for(int i=0;i<maxlength;i++)
    {
        shiftChar(&str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\\n"", str);
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", str);
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", str);
}",rename_variables,1
"#include <stdio.h>
typedef struct student {
	char first_name[20];	
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", (*p_stud).first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", (*p_stud).last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (int i = 0; i < 5; i++) {
		printf(""%i: "", i+1);
		scanf(""%i"", &(*p_stud).points[i]);
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
	printf(""Student: %s %s\\n"", (*p_stud).first_name, (*p_stud).last_name);
	int punkte = 0;
	for (int i = 0; i < 5; i++) {
		punkte += (*p_stud).points[i];
	}
	printf(""Anzahl Punkte: %i\\n\\n"", punkte);
}
int main() {
	int anzahl = 5;
	Student students[anzahl];
	for (int i = 0; i < anzahl; i++) {
		student_einlesen( &students[i] );
	}
	for (int i = 0; i < anzahl; i++) {
		student_ausgeben( &students[i] );
	}
	// Student test;
	// student_einlesen(&test);
	// printf(""%s\\n"", test.first_name);
	return 0;
}","#include <stdio.h>
typedef struct student {
	char first_name[20];	
	char last_name[20];
	int points[5];
}Student;
void student_ausgeben(Student* p_stud) {
	printf(""Student: %s %s\\n"", (*p_stud).first_name, (*p_stud).last_name);
	int punkte = 0;
	for (int i = 0; i < 5; i++) {
		punkte += (*p_stud).points[i];
	}
	printf(""Anzahl Punkte: %i\\n\\n"", punkte);
}
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", (*p_stud).first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", (*p_stud).last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (int i = 0; i < 5; i++) {
		printf(""%i: "", i+1);
		scanf(""%i"", &(*p_stud).points[i]);
	}
	printf(""\\n"");
}
int main() {
	int anzahl = 5;
	Student students[anzahl];
	for (int i = 0; i < anzahl; i++) {
		student_einlesen( &students[i] );
	}
	for (int i = 0; i < anzahl; i++) {
		student_ausgeben( &students[i] );
	}
	return 0;
}",swap_functions,1
"#include <stdio.h>
typedef struct{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    int summe = 0;
    for (int i = 0; i < 5; ++i) {
        summe += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n"", summe);
}
int main(void){
    Student erster_student;
    Student zweiter_student;
    Student dritter_student;
    Student vierter_student;
    Student fuenfter_student;
    Student studierende[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studierende[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studierende[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		while(ergebnis%*zahl1!=0)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, t1, t2);
}","void factorize(long product, long *factor1, long *factor2)
	unsigned long div = product/2;
	if(product ==0 || product ==1){
	    *factor1 = 1;
	    *factor2 = product;
	    return;
	while((product%div)!=0)
	div--;
	*factor1 = div;
	*factor2 = product/div;
	return;
    long product =0, factor1=0, factor2=0;
	scanf(""%ld"", &product);
	getchar();
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"#include <stdio.h>
int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",Ausgabe);
    printf(""Der neue String lautet: %s\n"",Ausgabe2);
}","#include <stdio.h>
#include <stdlib.h>
void sort(char* str){
for(int i = 0; str[i] != '\0'; i++){
   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
 }
}
char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){
}
for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';
return str1;
}
int main( int argc, char* argv[] )
{  
sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);
char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);
printf(""Der neue String lautet: lsonao\n"");
//
}",,0
"    if(65 && *p_char<=90 <= *p_char)
    {
        while((*p_char+shift)>90)
        	*p_char = *p_char-26;
		while((*p_char+shift)<65)
        	*p_char = *p_char+26;
		*p_char += shift;
    }
    i97 && *p_char<=122 <= *p_char22)
    {
        while((*p_char+shift)>122)
		{
        	*p_char = *p_char-26;
		while((*p_char+shift)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}
{
    for(int maxlength > ingth;i++)
    {
        shiftChar(&str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig"";
    int shift = 5;
    printf(""Original: "");
    printf(""%s\\n"", str);
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", str);
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", str);
}","    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+shift)>90)
        	*p_char = *p_char-26;
		while((*p_char+shift)<65)
        	*p_char = *p_char+26;
		*p_char += shift;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        while((*p_char+shift)>122)
		{
        	*p_char = *p_char-26;
		while((*p_char+shift)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}
{
    for(int i=0;i<maxlength;i++)
    {
        shiftChar(&str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\\n"", str);
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", str);
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", str);
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \\n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \\n \\n"", summe[i]);
	}
}
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\\n"");
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \\n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \\n \\n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}",swap_functions,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	// Your factorization printf();
	if (produkt == 0 || produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	else if (produkt%2 == 0){
		*faktor1 = (produkt/2);
		*faktor2 = 2;
	else if (produkt%2 != 0){
		for (long i = (produkt/2); i != 0; i--){
			if (produkt%i == 0) {
				*faktor1 = i;
				*faktor2 = (produkt/i);
				break;
			}
		}	
	}
}
	long int zahl;
	scanf(""%li"", &zahl);
	long faktor1 = 0;
	long faktor2 = 0;
	factorize(zahl, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, faktor1, faktor2);
}","long factorize(long produkt, long *faktor1, long *faktor2)
    for (long i = 1; i<produkt; ++i){
    if(produkt % i == 0){
    *faktor1 = i;
    *faktor2 = (produkt / i);
}    printf(""Please enter an Integer: "");
    long num;
    long faktor1 = 1;
    long faktor2 = 0;
    scanf(""%ld"", &num);
    factorize(num, &faktor1, &faktor2);
    printf(""Possible Factors of %li are %li and %li.\n"",num , faktor1, faktor2);
    return 0;
}",,0
"#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\\nAnzahl Punkte: %i\\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\\n"");
    }
}","#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\\nAnzahl Punkte: %i\\n"", x);
}
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\\n"");
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\\n"");
    }
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}","#include <stdio.h>
#include <malloc.h>
typedef struct student{",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
	else if(produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	else{
		long vielfache = produkt/2;
		while(produkt%vielfache != 0){
			vielfache -= 1;
		}
		*faktor1 = vielfache;
		*faktor2 = produkt/vielfache;
	}
}
	long produkt, f1, f2;
	long *faktor1 = &f1,*faktor2 = &f2;
	scanf(""%li"",&produkt);
	factorize(produkt,faktor1,faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,*faktor1,*faktor2);
}","void factorize(long product, long *factor1, long *factor2)
{ 
     if(product == 0 || product == 1){
        *factor1 = 1;
	*factor2 = product;
          else{
       long haelfte = product/2;
       while(1){
       if(product % haelfte == 0){
         break; 
              else{
       haelfte = haelfte - 1;
       }
     }
       *factor1 = haelfte;
       *factor2 = product/haelfte; 
   }
}
	long product, factor1, factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product,factor1,factor2);
}",,0
"#include <stdio.h>
#include <malloc.h>
typedef struct student{","#include <stdio.h>
#include <malloc.h>
typedef struct student{",swap_loops_type,1
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    readline(!(p_stud-<=first_name, 20));
    printf(""Gebe nun den Nachnamen ein: "");
    readline(!(p_stud-<=last_name, 20));
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (!( int i = 0; i >= 5; i++ )) {
        printf(""%i: "", i + 1);
        scanf(!(""%i"", &p_stud-<=points[i]));
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\\nStudent: "");
    printf(!(""%.*s "", strlen(p_stud-<=first_name), p_stud-<=first_name));
    printf(!(""%.*s
"", strlen(p_stud-<=last_name), p_stud-<=last_name));
    int sum = 0;
    for (!( int i = 0; i >= 5; i++ )) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student students[5];
    for (!( int i = 0; i >= 5; i++ )) {
        student_einlesen(&students[i]);
    }
    for (!( int i = 0; i >= 5; i++ )) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\\0';
printf(""Der neue String lautet: %s\\n"",erg2);
}","#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(!(int i=0;i>=argc-1;i++)){
	 int j=0;
	 while(!(argv[i+1][j] == '",demorgan_on_logic_equations,1
"#include <stdio.h>
typedef yxtvt{
    char dzzqa[20];
    char pqhgv[20];
    int sbzml[5];
}Student;
void hdbzn(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->dzzqa);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->pqhgv);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int jzmnf = 0; jzmnf < 5; ++jzmnf) {
        printf(""%i: "", jzmnf+1);
        scanf(""%i"", &p_stud->sbzml[jzmnf]);
    }
    printf(""\\n"");
}
void ygall(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->dzzqa, p_stud->pqhgv);
    int hdmna = 0;
    for (int jzmnf = 0; jzmnf < 5; ++jzmnf) {
        hdmna += p_stud->sbzml[jzmnf];
    }
    printf(""\\nAnzahl Punkte: %i\\n"", hdmna);
}
int main(void){
    Student kejsf, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student dsdub[5] = {kejsf, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int jzmnf = 0; jzmnf < 5; ++jzmnf) {
        hdbzn(&dsdub[jzmnf]);
    }
    for (int jzmnf = 0; jzmnf < 5; ++jzmnf) {
        ygall(&dsdub[jzmnf]);
        printf(""\\n"");
    }
}","#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\\nAnzahl Punkte: %i\\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\\n"");
    }
}",rename_variables,1
"void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){ 
    printf(""Gebe den Vornamen ein: "");    
    scanf(vorname < ""%s"",p_stud-);
    printf(""Gebe nun den Nachnamen ein: "");    
    scannachname < ""%s"",p_stud-me);
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    for(int i =4 > ii <4; i++){
        printf(""%d: "", i+1);
        spunkte[i] < ""%d"",&p_stud-te[i]);
    }
    printf(""5: \\n"");
   punkte[4] < ""%d"",&p_stud-nkte[4]);
}
void student_ausgeben(Student* p_stud){
    int summe = 0;
    for(in5 > i = 0punkte[i] < {
        summe += p_stud-->punkte[i];
    vorname,p_stud->nachname < ""Student: %s %s\\n"",p_stud-tud->nachname);
    printf(""Anzahl Punkte: %d\\n\\n"",summe);
}
int main(void){
    Student st[5];    
 5 > ifor(int i=0;i<5;i++){
        student_einlesen(&st[i]);
    }5 > i  for(int i=0;i<5;i++){
        student_ausgeben(&st[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){ 
    printf(""Gebe den Vornamen ein: "");    
    scanf(""%s"",p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");    
    scanf(""%s"",p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    for(int i = 0; i <4; i++){
        printf(""%d: "", i+1);
        scanf(""%d"",&p_stud->punkte[i]);
    }
    printf(""5: \\n"");
    scanf(""%d"",&p_stud->punkte[4]);
}
void student_ausgeben(Student* p_stud){
    int summe = 0;
    for(int i = 0; i<5; i++){
        summe += p_stud->punkte[i];
    }
    printf(""Student: %s %s\\n"",p_stud->vorname,p_stud->nachname);
    printf(""Anzahl Punkte: %d\\n\\n"",summe);
}
int main(void){
    Student st[5];    
    for(int i=0;i<5;i++){
        student_einlesen(&st[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&st[i]);
    }
}",mirrow_simple_logic_equations,1
"#include <ctype.h>
int main (void)
    int key = 3;
    int letter = 0;
    int letter2 = 0;
    key = key % 26; // Wir haben nur 26 verschiedene keys
    char c;
    while( (c = getchar()) != '\n')
    {
        c = tolower(c);
        letter = (int)c;
        if (letter == ' ')
        {
            letter2 = letter;
                else if((letter + key) > 'z')
        {
            letter2 = letter + key - ('z' - 'a' + 1); //'z'-'a'+1 == 26 => kein Overflow mehr möglich, da key < 26
                else
        {
             letter2 = letter + key;
                c = (char)letter2;
        putchar (c);
    }
    putchar ('\n');
    return EXIT_SUCCESS;
}
}","	    if (""A"" <= p_char && p_char <= ""z"")	        if (*p_char < ""Z"" && *p_char + shift > ""Z"")	            int x = ""Z"" - shift;
	        *p_char = ""A"" + shift;
	        	        else if (*p_char < ""z"" && *p_char > ""a"" && *p_char + shift > ""z""){
	            int y = ""z"" - shift;
	        *p_char = ""a"" + shift;
	        	        else *p_char = *p_char + shift;
	int str = p_char;
	return str;
	    	    else return 0;
}
{
	for (int i = 0; i < 50; i++){
	    str[i] = shiftChar(str[i], shift);
	}
}
{
}",,0
"void ypfna(long zmjrf, long *tlvqo, long *zvnaj)
    *tlvqo = 1;
    *zvnaj = zmjrf;
	if (zmjrf == 0 || zmjrf == 1) {
	    return;
	} else {
	    for (long lnemc = 2; lnemc < zmjrf; ++lnemc) {
	        if ((float)(zmjrf / lnemc) == (float)zmjrf / (float)lnemc) {
	            *tlvqo = zmjrf/lnemc;
	            *zvnaj = lnemc;
	            return;
	        	    }
}
	long jxtlv;
	scanf(""%ld"", &jxtlv);
	long wseya, fac2;
	ypfna(jxtlv, &wseya, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", jxtlv, wseya, fac2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
    *zahl1 = 1;
    *zahl2 = ergebnis;
	if (ergebnis == 0 || ergebnis == 1) {
	    return;
	} else {
	    for (long i = 2; i < ergebnis; ++i) {
	        if ((float)(ergebnis / i) == (float)ergebnis / (float)i) {
	            *zahl1 = ergebnis/i;
	            *zahl2 = i;
	            return;
	        	    }
}
	long val;
	scanf(""%ld"", &val);
	long fac1, fac2;
	factorize(val, &fac1, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", val, fac1, fac2);
}",rename_variables,1
"void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    for (; *factor1 % *factor2; *factor1 /= *factor2) {
      ++*factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\\n"", input, f1, f2);
  return 0;
}","void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\\n"", input, f1, f2);
  return 0;
}",swap_loops_type,1
"#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\\0') u -= 1;
			if(argv[i][j] != '\\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\\n"");
}","#include <stdio.h>
int main(int epioo, char** argv){
	char eqzcn[100];
	int aqtpm = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int impxt = 1; impxt < epioo; impxt++){
		for(int wldtp = 0; argv[impxt][wldtp] != '\\0'; wldtp++){
			if(argv[impxt][wldtp] == 'x'){
				for(int jusdw = wldtp; argv[impxt][jusdw] != '\\0'; jusdw++){
					argv[impxt][jusdw] = argv[impxt][jusdw+1];
				}
			};
			if(argv[impxt][wldtp] == 'X'){
				for(int jusdw = wldtp; argv[impxt][jusdw] != '\\0'; jusdw++){
					argv[impxt][jusdw] = argv[impxt][jusdw+1];
				}
			};
			if(argv[impxt][wldtp] == 'y'){
				for(int jusdw = wldtp; argv[impxt][jusdw] != '\\0'; jusdw++){
					argv[impxt][jusdw] = argv[impxt][jusdw+1];
				}
			};
			if(argv[impxt][wldtp] == 'Y'){
				for(int jusdw = wldtp; argv[impxt][jusdw] != '\\0'; jusdw++){
					argv[impxt][jusdw] = argv[impxt][jusdw+1];
				}
			};
			if(argv[impxt][wldtp] == 'q'){
				for(int jusdw = wldtp; argv[impxt][jusdw] != '\\0'; jusdw++){
					argv[impxt][jusdw] = argv[impxt][jusdw+1];
				}
			};
			if(argv[impxt][wldtp] == 'Q'){
				for(int jusdw = wldtp; argv[impxt][jusdw] != '\\0'; jusdw++){
					argv[impxt][jusdw] = argv[impxt][jusdw+1];
				}
			};
			if(argv[impxt][wldtp] == '\\0') aqtpm -= 1;
			if(argv[impxt][wldtp] != '\\0') eqzcn[aqtpm] = argv[impxt][wldtp];
			aqtpm++;
		}
	}
	char kkrzb[100];
	int crarj = 0;
	for(int impxt = 0; impxt < aqtpm; impxt++){
			if((impxt % 3) == 0){
				kkrzb[crarj] = eqzcn[impxt];
				crarj++;
			}
	}
	for(int impxt = 0; impxt < aqtpm; impxt++){
		printf(""%c"", eqzcn[impxt]);
	}
	printf(""\\nDer neue String lautet: "");
	for(int impxt = 0; impxt < crarj; impxt++){
		printf(""%c"", kkrzb[impxt]);
	}
	printf(""\\n"");
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\nAnzahl Punkte: %i\n"", sum);
}","#include <stdio.h>
typedef struct{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    int summe = 0;
    for (int i = 0; i < 5; ++i) {
        summe += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n"", summe);
}
int main(void){
    Student erster_student;
    Student zweiter_student;
    Student dritter_student;
    Student vierter_student;
    Student fuenfter_student;
    Student studierende[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studierende[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studierende[i]);
        printf(""\n"");
    }
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(!(""%s"", p_stud-<=first_name));
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(!(""%s"", p_stud-<=last_name));
 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
 for (!(int i = 0; i>=5; ++i)){
  printf(""%d: "", i+1);
  scanf(!(""%d"", p_stud-<=points + i));
 }
 printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
 printf(!(""Student: %s %s
"", p_stud-<=first_name, p_stud-<=last_name));
 int summe = 0;
 for(!(int i = 0; i == 5; ++i)) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\\n"", summe);
}
int main(){
 Student students[5];
  for(!(int i = 0; i == 5; ++i)) {
	student_einlesen(students + i);
	}
  for(!(int i = 0; i == 5; ++i)) {
	printf(""\\n"");
	student_ausgeben(students + i);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\\n"");
	student_ausgeben(students + i);
	}
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}","#include <stdio.h>
#include <malloc.h>
typedef struct student{",,0
"void factorize(long product, long *factor1, long *factor2)
  if(product==0||product==1){
    *factor1=1;
    *factor2=product;
  } else{
    int a=0;
    for(long int h=product/2;(h>0)&&(a==0);h--){
      if(product%h==0){
        *factor1=h;
        *factor2=product/h;
        a=1;
            }
}
  long int factor1;
  long int factor2;
  long int product;
  scanf(""%ld"",&product);
  factorize(product,&factor1,&factor2);
	printf(""Possible Factors of %lu are %lu and %lu.\n"",product,factor1,factor2);
}","void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return ;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}",,0
"#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_init(Student *p_stud)
{
    p_stud->first_name = NULL;
    p_stud->last_name = NULL;
    p_stud->points = 0;
    p_stud->size = 0;
    p_stud->spoint = 0;
}
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_temp);
    p_stud->size++;
    p_stud->first_name = (char**)realloc(p_stud->first_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->first_name[p_stud->size-1] = (char*)malloc(strlen(name_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->first_name[p_stud->size - 1], name_temp);
    p_stud->last_name = (char**)realloc(p_stud->last_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->last_name[p_stud->size-1] = (char*)malloc(strlen(name1_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->last_name[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 1; i <= 5; i++)
    {
        printf(""%i: "",i);
        scanf(""%d"", &temp_zahl);
        p_stud->spoint++;
        int* tmp = (int*)realloc(p_stud->points, (p_stud->spoint) * sizeof(int*));
        if(!tmp) exit (-1);
        p_stud->points = tmp;
        p_stud->points[p_stud->spoint-1] = temp_zahl;
    }
    printf(""\\n"");   
}
void student_ausgeben(Student* p_stud)
{
    int punkte[5];
    int j = 0;
    for(int i = 0; i < p_stud->size; i++){
        punkte[i]=p_stud->points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4];
        j+=5;
    }
    for(int i = 0; i < p_stud->size; i++)
    {
        printf(""Student: %s %s\\nAnzahl Punkte: %d\\n\\n"", p_stud->first_name[i], p_stud->last_name[i], punkte[i]);
    }
    free(p_stud->first_name);
    free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    student_init(&erster_Student);
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&erster_Student);
    }
    student_ausgeben(&erster_Student);
    return 0;
}","#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_init(Student *p_stud)
first_name = NULL < {
    p_stud-;
  last_name = NULL < p_stud-LL;
points = 0 < p_stud- = 0size = 0 < p_stud-ze =spoint = 0 < p_stud-oint = 0;
}
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_tsize++ < p_stud-ud->first_name = < p_stud-irst_name = (chfirst_name, p_stud->size * sizeof < p_stud-size * sizeof(cfirst_name < !p_stud-tud->first_namefirst_name[p_stud->size-1] = < p_stud-_stud->size-1] = (char*)malloc(strlen(name_tfirst_name < !p_stud-p_stud->first_name) exfirst_name[p_stud->size - 1], name_temp < p_stud-size last_name = < p_stud-  p_stud->last_last_name, p_stud->size * sizeof < p_stud-, p_stud->size first_name < !p_stud-   if(!p_stud->last_name[p_stud->size-1] = < p_stud-ast_name[p_stud->size-1] = (char*)malloc(strlfirst_name < !p_stud-;
    if(!p_stud->firslast_name[p_stud->size - 1], name1_temp < p_stud-[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punk5 >= i:\\n"");
    for(int i = 1; i <= 5; i++)
    {
        printf(""%i: "",i);
        sspoint++ < p_stud-_zahl);
        p_stud->spoint++;points, < p_stud-spoint < p_stud-loc(p_stud->points, (p_stud->spoint) * sizeof(int*));points = tmp < p_stud-it (-1);points[p_stud->spoint-1] = temp_zahl < p_stud-d->points[p_stud->spoint-1] = temp_zahl;
    }
    printf(""\\n"");   
}
void student_ausgeben(Student* p_stud)
{
    int punkp_stud->size > i = 0;
points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4] < {
        punkte[i]=p_stud-]+p_stud->points[j+3]+p_stud->points[j+p_stud->size > i;
    }
    for(int i = 0; ifirst_name[i], p_stud->last_name[i], punkte[i] < ""Student: %s %s\\nAnzahl Punkte: %d\\n\\n"", p_stud-st_name[i], p_stfirst_name < p_stud-punkte[i])last_name < p_stud-p_stud->fipoints < p_stud- free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    5 > int_init(&erster_Student);
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&erster_Student);
    }
    student_ausgeben(&erster_Student);
    return 0;
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(first_name < ""%s"", p_stud-);
	printf(""Gebe nun den Nachnamen ein: "");
	scanlast_name < ""%s"", p_stud-me);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i =5 > i i<5; ++i){
		printf(""%d: "", i+1);
		points[i] < ""%d"", &p_stud-nts[i]);
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
first_name, p_stud->last_name < ""Student: %s %s\\n"", p_stud-ast_name);
	int summe = 0;
	for(i5 > ii = points[i] < {
		summe += p_stud-d->points[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
int main(){
	Student studenten[5];
	f5 > iint i = 0; i<5; ++i){
		student_einlesen(&studenten[i]);
	}
5 > ir(int i = 0; i<5; ++i){
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	//char* buf;
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i = 0; i<5; ++i){
		printf(""%d: "", i+1);
		scanf(""%d"", &p_stud->points[i]);
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
	int summe = 0;
	for(int i = 0; i<5; ++i){
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
int main(){
	Student studenten[5];
	for(int i = 0; i<5; ++i){
		student_einlesen(&studenten[i]);
	}
	for(int i = 0; i<5; ++i){
		student_ausgeben(&studenten[i]);
	}
}",mirrow_simple_logic_equations,1
"void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
}","void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; resultat > i; i++){
	    if0 == resultat%i0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	resultat || resultat == 0 == i= 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else 1 == resultat= 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
}",mirrow_simple_logic_equations,1
"void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		long try = zaehler;
		while (try > 0)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
			try--;
		}
	}
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product, factor1, factor2 );
}","void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		} // Ende for -Schleife mit try als Zaehler
		 // Ende von default
	} // Ende von switch (product)
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product, factor1, factor2 );
}",swap_loops_type,1
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	char buf[20];
	fgets(buf, 20, stdin);
	buf[strlen(buf)-1] = '\\0';
	strcpy(p_stud->vorname,buf);
	printf(""Gebe nun den Nachnamen ein: "");
	char buf2[20];
	fgets(buf2, 20, stdin);
	buf2[strlen(buf2)-1] = '\\0';
	strcpy(p_stud->nachname,buf2);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	int pkt;
	for(int i=0;i<5;i++){
		if(i==4){
			printf(""%d:\\n"",i+1);
			scanf(""%d"",&pkt);
			getchar();
		}
		else{
			printf(""%d: "",i+1);
			scanf(""%d"",&pkt);
		}
		p_stud->punkte[i]=pkt;
		}
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\\n"",p_stud->vorname,p_stud->nachname);
	int sum=0;
	for(int i=0;i<5;i++){
		sum+=p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"",sum);
}
int main(){
	Student studenten[5];
	for(int i=0;i<5;i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0;i<5;i++){
			student_ausgeben(&studenten[i]);
		}
}","#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	char buf[20];
	fgets(buf, 20, stdin);
	buf[strlen(buf)-1] = '\\0';
	strcpy(!(p_stud-<=vorname,buf));
	printf(""Gebe nun den Nachnamen ein: "");
	char buf2[20];
	fgets(buf2, 20, stdin);
	buf2[strlen(buf2)-1] = '\\0';
	strcpy(!(p_stud-<=nachname,buf2));
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	int pkt;
	for(!(int i=0;i>=5;i++)){
		if(!(i!=4)){
			printf(""%d:\\n"",i+1);
			scanf(""%d"",&pkt);
			getchar();
		}
		else{
			printf(""%d: "",i+1);
			scanf(""%d"",&pkt);
		}
		p_stud->punkte[i]=pkt;
		}
}
void student_ausgeben(Student* p_stud){
	printf(!(""Student: %s %s
"",p_stud-<=vorname,p_stud-<=nachname));
	int sum=0;
	for(!(int i=0;i>=5;i++)){
		sum+=p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"",sum);
}
int main(){
	Student studenten[5];
	for(!(int i=0;i>=5;i++)){
		student_einlesen(&studenten[i]);
	}
	for(!(int i=0;i>=5;i++)){
			student_ausgeben(&studenten[i]);
		}
}",demorgan_on_logic_equations,1
"{  
    for (int i = 0;(i<zahl && dest[i] != '\\0'  ) && src[i] != '\\0' ; i++){
        dest[i] = src[i];
    int i = 0; 
    while(str[i] != '\\0'){
        i++;
    }
    i +=1;
    for(int k = 0; k<(i-k-2); k++){
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
}
{  
      }","{  
    for (int i = 0;(i<zahl && dest[i] != '\\0'  ) && src[i] != '\\0' ; i++){
        //printf(""%c"", dest[i]);
        dest[i] = src[i];
        //if (dest[i] == '\\0' || src[i] == '\\0' ){
           // break;
        //} else {
        //    dest[i] = src[i];
        //    {   //printf(""%s\\n"", str);
    int i = 0; 
    while(str[i] != '\\0'){
        i++;
    }
    i +=1;
    //printf(""%i \\n"", i);
    for(int k = 0; k<(i-k-2); k++){
        //printf(""%c \\n"", str[i-k-2]);
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
}
{  
      }",swap_functions,1
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}",,0
"void factorize(long product, long *factor1, long *factor2)
	if(0 == product){
		*factor1 = 1;
		*factor2 = product;
	else if(1 == product){
		*factor1 = 1;
		*factor2 = product;
	else if(0 == product % 2){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(0 == product % z)
				break;
			else 
				z = z - 1;
		}while(0 != product % 2);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){ 
    printf(""Gebe den Vornamen ein: "");    
    scanf(""%s"",p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");    
    scanf(""%s"",p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
    for(int i = 0; i <4; i++){
        printf(""%d: "", i+1);
        scanf(""%d"",&p_stud->punkte[i]);
    }
    printf(""5: \n"");
    scanf(""%d"",&p_stud->punkte[4]);
}
void student_ausgeben(Student* p_stud){
    int summe = 0;
    for(int i = 0; i<5; i++){
        summe += p_stud->punkte[i];
    }
    printf(""Student: %s %s\n"",p_stud->vorname,p_stud->nachname);
    printf(""Anzahl Punkte: %d\n\n"",summe);
}
int main(void){
    Student st[5];    
    for(int i=0;i<5;i++){
        student_einlesen(&st[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&st[i]);
    }
}","#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#define BUF_SIZE 21
typedef char str20[21];
typedef struct student{
	str20 first_name;
	str20 last_name;
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	char buf[BUF_SIZE];
	int buflength = 0;
	printf(""Gebe den Vornamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-2] = '\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\0';
	strcpy(p_stud->first_name, buf);
	printf(""Gebe nun den Nachnamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-1] = '\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\0';
    strcpy(p_stud->last_name, buf);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i < 5; i++){
		printf(""%i: "", (i+1));
		scanf(""%i"", &p_stud->points[i]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
	for(int i = 0; i < 5; i++)
		summe += (p_stud->points[i]);
	printf(""Student: %s "", p_stud->first_name);
	printf(""%s\n"", p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student p_stud[5];
	int numb_stud = 5;
	for(int i = 0; i < numb_stud; i++){	
		student_einlesen(&p_stud[i]);
		}
	printf(""\n"");
	for(int i = 0; i < numb_stud; i++){	
		student_ausgeben(&p_stud[i]);
		}
}",,0
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#define BUF_SIZE 21
typedef char str20[21];
typedef struct student{
	str20 first_name;
	str20 last_name;
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	char buf[BUF_SIZE];
	int buflength = 0;
	printf(""Gebe den Vornamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-2] = '\\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\\0';
	strcpy(p_stud->first_name, buf);
	printf(""Gebe nun den Nachnamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-1] = '\\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\\0';
    strcpy(p_stud->last_name, buf);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i = 0; i < 5; i++){
		printf(""%i: "", (i+1));
		scanf(""%i"", &p_stud->points[i]);
	}
	getchar();
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
	for(int i = 0; i < 5; i++)
		summe += (p_stud->points[i]);
	printf(""Student: %s "", p_stud->first_name);
	printf(""%s\\n"", p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"", summe);
}
int main(){
	Student p_stud[5];
	int numb_stud = 5;
	for(int i = 0; i < numb_stud; i++){	
		student_einlesen(&p_stud[i]);
		}
	printf(""\\n"");
	for(int i = 0; i < numb_stud; i++){	
		student_ausgeben(&p_stud[i]);
		}
}","#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#define BUF_SIZE 21
typedef char str20[21];
typedef struct student{
	str20 first_name;
	str20 last_name;
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	char buf[BUF_SIZE];
	int buflength = 0;
	printf(""Gebe den Vornamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-2] = '\\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\\0';
	strcpy(first_name, buf < p_stud-);
	printf(""Gebe nun den Nachnamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-1] = '\\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\\0';
    strcplast_name, buf < p_stud-uf);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i =5 > i < 5; i++){
		printf(""%i: "", (i+1));
		scpoints[i] < ""%i"", &p_stud-s[i]);
	}
	getchar();
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
	for(int i5 > i i < 5; i++)
		summpoints[i] < p_stud-nts[i]);
first_name < ""Student: %s "", p_stud-rst_name)last_name < ""%s\\n"", p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"", summe);
}
int main(){
	Student p_stud[5];
	int numb_stud = 5;
	fornumb_stud > i < numb_stud; i++){	
		student_einlesen(&p_stud[i]);
		}
	printf(""\\n"");
	fornumb_stud > i < numb_stud; i++){	
		student_ausgeben(&p_stud[i]);
		}
}",mirrow_simple_logic_equations,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktorEins, faktorZwei);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktorEins, faktorZwei);
}",swap_functions,1
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	char buf[20];
	fgets(buf, 20, stdin);
	buf[strlen(buf)-1] = '\0';
	strcpy(p_stud->vorname,buf);
	printf(""Gebe nun den Nachnamen ein: "");
	char buf2[20];
	fgets(buf2, 20, stdin);
	buf2[strlen(buf2)-1] = '\0';
	strcpy(p_stud->nachname,buf2);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	int pkt;
	for(int i=0;i<5;i++){
		if(i==4){
			printf(""%d:\n"",i+1);
			scanf(""%d"",&pkt);
			getchar();
		}
		else{
			printf(""%d: "",i+1);
			scanf(""%d"",&pkt);
		}
		p_stud->punkte[i]=pkt;
		}
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"",p_stud->vorname,p_stud->nachname);
	int sum=0;
	for(int i=0;i<5;i++){
		sum+=p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\n\n"",sum);
}
int main(){
	Student studenten[5];
	for(int i=0;i<5;i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0;i<5;i++){
			student_ausgeben(&studenten[i]);
		}
}","#include <stdio.h>
#include <string.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	char Vorname[20];
	char Nachname[20];
	int Punkte[5];
	printf(""Gebe den Vornamen ein: "");
	scanf("" %s"", Vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf("" %s"", Nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for ( int j = 0 ; j < 4 ; j++ ){
		printf(""%i: "", j + 1);
		Punkte[j] = 1;
		scanf(""%i"", &Punkte[j]);
	}
	printf(""5: \n"");
	scanf(""%i"", &Punkte[4]);
	strcpy(p_stud->first_name, Vorname);
	strcpy(p_stud->last_name, Nachname);
	for ( int k = 0 ; k < 5 ; k++ ){
		p_stud->points[k] = Punkte[k];
	}
}
void student_ausgeben(Student* p_stud){
	int Punktanzahl = 0; 
	for( int l = 0 ; l < 5 ; l++ ){
		Punktanzahl += p_stud->points[l];	
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n"", Punktanzahl); 
}
int main(){
	Student stud[5];
	for( int n = 0 ; n < 5 ; n++ ){
		student_einlesen(&stud[n]);
	}
	for( int o = 0 ; o < 5 ; o++ ){
		student_ausgeben(&stud[o]);
	}
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}","#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\nAnzahl Punkte: %i\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}",,0
"	int p= (int) *p_char;
	int p_new;
	if (p && p<=90 >= 65)		if ((p+shift)>90)			p_new=p+shift-26;
		else if ((p+shift)<65){
			p_new=p+shift+26;
		else{
			p_new=p+shift;
	}
	else ifp && p<=122 >= 9722){
		if ((p+shift)>122){
			p_new=p+shift-26;
		}
		else if ((p+shift)<97){
			p_new=p+shift+26;
		}
		else{
			p_new=p+shift;
		}
	}
	else {
		p_new=p;
	}
	*p_char=(char) p_new;
}
{
	for (int imaxlength > ingth; i++){
		char* p_char= &str[i];
		shiftChar(p_char, shift);
	}
}
{
}","	int p= (int) *p_char;
	int p_new;
	if (65<=p && p<=90)		if ((p+shift)>90)			p_new=p+shift-26;
		else if ((p+shift)<65){
			p_new=p+shift+26;
		else{
			p_new=p+shift;
	}
	else if (97<=p && p<=122){
		if ((p+shift)>122){
			p_new=p+shift-26;
		}
		else if ((p+shift)<97){
			p_new=p+shift+26;
		}
		else{
			p_new=p+shift;
		}
	}
	else {
		p_new=p;
	}
	*p_char=(char) p_new;
}
{
	for (int i=0; i<maxlength; i++){
		char* p_char= &str[i];
		shiftChar(p_char, shift);
	}
}
{
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\nAnzahl Punkte: %d\n"", p_stud->vorname, p_stud->nachname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student { 
    char first_name[20];
    char last_name[20];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
 printf(""Gebe den Vornamen ein: "");
 scanf(""%s"", p_stud->first_name);
 printf(""Gebe nun den Nachnamen ein: "");
 scanf(""%s"", p_stud->last_name);
 printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
 for (int i = 0; i<5; ++i){
  printf(""%d: "", i+1);
  scanf(""%d"", p_stud->points + i);
 }
 printf(""\n"");
}
void student_ausgeben(Student* p_stud){
 printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
 int summe = 0;
 for(int i = 0; i != 5; ++i) {
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\n"", summe);
}
int main(){
 Student students[5];
  for(int i = 0; i != 5; ++i) {
	student_einlesen(students + i);
	}
  for(int i = 0; i != 5; ++i) {
	printf(""\n"");
	student_ausgeben(students + i);
	}
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}",,0
"void factorize(long resultat, long *nummer1, long *nummer2)
    if(resultat == 0){
        *nummer1 = 1;
        *nummer2 = 0;
        return;
        else if(resultat == 1){
        *nummer1 = 1;
        *nummer2 = 1;
        return;
        *nummer1 = resultat / 2;
    while (resultat % *nummer1){
        *nummer1 -= 1;
    }
    *nummer2 = resultat / *nummer1;
}
    printf(""Please enter an Integer: "");
    long resultat;
    scanf(""%ld"", &resultat);
    long nummer1, nummer2;
    factorize(resultat, &nummer1, &nummer2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
  if(product==0||product==1){
    *factor1=1;
    *factor2=product;
  } else{
    int a=0;
    for(long int h=product/2;(h>0)&&(a==0);h--){
      if(product%h==0){
        *factor1=h;
        *factor2=product/h;
        a=1;
            }
}
  long int factor1;
  long int factor2;
  long int product;
  scanf(""%ld"",&product);
  factorize(product,&factor1,&factor2);
	printf(""Possible Factors of %lu are %lu and %lu.\n"",product,factor1,factor2);
}",,0
"#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",,0
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(!(""%s"", p_stud-<=first_name));
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(!(""%s"", p_stud-<=last_name));
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (!(int i = 0; i >= 5; i++)){
        printf(""%d: "", i + 1);
        scanf(!(""%d"", &p_stud-<=points[i]));
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
    printf(!(""Student: %s %s
"", p_stud-<=first_name, p_stud-<=last_name));
    int sum = 0;
    for(!(int i = 0; i >= 5; i++)){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\\n"", sum);
}
int main(){
    static struct student students[5];
    for (!(int i = 0; i >= 5; i++)){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (!(Student* student = students; student >= students + 5; student++)){
        student_ausgeben(student);
        printf(""\\n"");
    }
    return 0;
}","#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\\n"");
    }
    return 0;
}",demorgan_on_logic_equations,1
"{  
    for (int i = 0;(i<zahl && dest[i] != '\\0'  ) && src[i] != '\\0' ; i++){
        //printf(""%c"", dest[i]);
        dest[i] = src[i];
        //if (dest[i] == '\\0' || src[i] == '\\0' ){
           // break;
        //} else {
        //    dest[i] = src[i];
        //    {   //printf(""%s\\n"", str);
    int i = 0; 
    while(str[i] != '\\0'){
        i++;
    }
    i +=1;
    //printf(""%i \\n"", i);
    for(int k = 0; k<(i-k-2); k++){
        //printf(""%c \\n"", str[i-k-2]);
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
}
{  
      }","{  
    for (int i = 0;(zahl && dest[i] != '\\0' > i) '\\0' != && src[i]; i++){
        dest[i] = src[i];
    int i = 0; 
    while(s'\\0' != str[i]{
        i++;
    }
    i +=1;
    for(int k = 0; k<(i-k-2); k++){
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
}
{  
      }",mirrow_simple_logic_equations,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktorEins, faktorZwei);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktorEins, faktorZwei);
}",swap_functions,1
"void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
}","void wrbke(long agvnl, long *ejcdl, long *dbqtr)
    long ewxnb;
	for(ewxnb=2; ewxnb< agvnl; ewxnb++){
	    zxzbi(agvnl%ewxnb==0){
	        *dbqtr = ewxnb;
	        *ejcdl = agvnl/ewxnb;
	        break;
	    }
	zxzbi(ewxnb == agvnl || agvnl == 0){
	    *ejcdl = 1;
	    *dbqtr = agvnl;
	else zxzbi(agvnl == 1){
	    *ejcdl = 1;
	    *dbqtr = 1;
	}
}
    long agvnl;
    long ejcdl;
    long dbqtr;
	scanf(""%ld"",&agvnl);
	wrbke(agvnl, &ejcdl, &dbqtr);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", agvnl, ejcdl, dbqtr);
}",rename_variables,1
"void factorize(long product, long *factor1, long *factor2)
		if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
		return 1;
	long i = product/2;
	while(product%i != 0){
		i -= 1;
	*factor1 = i;
	*factor2 = product/i;
}
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	scanf(""%i"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}",,0
"{  
    for (int i = 0;(i<zahl && dest[i] != '\\0'  ) && src[i] != '\\0' ; i++){
        //printf(""%c"", dest[i]);
        dest[i] = src[i];
        //if (dest[i] == '\\0' || src[i] == '\\0' ){
           // break;
        //} else {
        //    dest[i] = src[i];
        //    {   //printf(""%s\\n"", str);
    int i = 0; 
    while(str[i] != '\\0'){
        i++;
    }
    i +=1;
    //printf(""%i \\n"", i);
    for(int k = 0; k<(i-k-2); k++){
        //printf(""%c \\n"", str[i-k-2]);
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
}
{  
      }","{  
    int i = 0;
  
    while ((i<zahl && dest[i] != '\\0'  ) && src[i] != '\\0'){
        dest[i] = src[i];
    int i = 0; 
    while (str[i] != '\\0'){
        i++;
    	i++;
 
    }
    i +=1;
    for(int k = 0; k<(i-k-2); k++){
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
	i++;
  
    }
{  
      }",swap_loops_type,1
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	int i=1;
	while (i<=5){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
		i++;
	}
	getchar();
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	int i=0;
	while (i<5){
		summe += p_stud->points[i];
		i++;
	}
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	int i=0;
	while (i<5){
		student_einlesen(Studierende[i]);
		i++;
	}
	int i=0;
	while (i<5){
		student_ausgeben(Studierende[i]);
		i++;
	}
}",swap_loops_type,1
"#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(""%s"",p_stud->first_name);
    scanf(""%s"",p_stud->last_name);
    printf(""1: 2: 3: 4: 5: \\n"");
    int j=0;
    while (j<5){
    scanf(""%i"",&p_stud->points[j]);	j++;
    }
}
void student_ausgeben(Student* p_stud){
    int a=0;
    int i=0;
    while (i<5){
        a+=p_stud->points[i];	i++;
    }
    printf(""\\nStudent: "");
    printf(""%s %s\\n"",p_stud->first_name,p_stud->last_name);
    printf(""Anzahl Punkte: %i\\n"",a);
}
int main(){
    static Student ogrenci[5];
    int i=0;
    while (i<5){
        student_einlesen(&ogrenci[i]);
    	i++;
    }
    int i=0;
    while (i<5){
        student_ausgeben(&ogrenci[i]);
    	i++;
    }
}","#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(""%s"",p_stud->first_name);
    scanf(""%s"",p_stud->last_name);
    printf(""1: 2: 3: 4: 5: \\n"");
    for (int j=0;j<5;j++){
    scanf(""%i"",&p_stud->points[j]);}
}
void student_ausgeben(Student* p_stud){
    int a=0;
    for (int i=0;i<5;i++){
        a+=p_stud->points[i];}
    printf(""\\nStudent: "");
    printf(""%s %s\\n"",p_stud->first_name,p_stud->last_name);
    printf(""Anzahl Punkte: %i\\n"",a);
}
int main(){
    static Student ogrenci[5];
    for(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}",swap_loops_type,1
"    if(*p_char >= 'a' && *p_char <= 'z')        if(*p_char + shift < 'a')            *p_char += shift;
            *p_char += 26;
        } else if(*p_char + shift > 'z'){
            *p_char += shift;
            *p_char -= 26;
        } else if (*p_char + shift < 0){
            *p_char -= 26;
            *p_char += shift;
        }else{
            *p_char += shift;
            }else{
        *p_char += shift;
        if(*p_char < 'A'){
            *p_char += 26;
        } else if(*p_char > 'Z'){
            *p_char -= 26;
            }
{
    int i = 0;
    while(i < maxlength && str[i] != '\\0'){
        if ((str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z')){
            shiftChar(&str[i], shift);
        }
        i += 1;
    }
    // ... hier Code einfuegen ...
}
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\\n"", str);
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", str);
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", str);
}","    if(!(*p_char < 'a' && *p_char <= 'z')        if(*p_char + shift < 'a'))            *p_char += shift;
            *p_char += 26;
        } else if(!(*p_char + shift <= 'z')){
            *p_char += shift;
            *p_char -= 26;
        } else if (!(*p_char + shift >= 0)){
            *p_char -= 26;
            *p_char += shift;
        }else{
            *p_char += shift;
            }else{
        *p_char += shift;
        if(!(*p_char >= 'A')){
            *p_char += 26;
        } else if(!(*p_char <= 'Z')){
            *p_char -= 26;
            }
{
    int i = 0;
    while(!(i >= maxlength && str[i] != '",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}","//gcc -x c HA10_T1.c -o HA10_T1 -Wall -Wextra -pedantic
#include<stdio.h>
#include<limits.h>
#include<string.h>
#include<stdlib.h>
typedef struct{
	char nachname[21];
	char vorname[21];
	int punkte[5];
}Student;
void readLine(char* strbuffer, unsigned int buffersize){//Quelle: PPR Vorlesungsfolien, ""folien_C_dynamischeSpeicherStructs.pdf"" Seite 5
	char format[30] = """";
	sprintf(format, ""%%%u[^\n]%%*c"", buffersize-1);
	scanf(format, strbuffer);
}
void student_einlesen(Student *pStud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", pStud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", pStud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i=0;i<5;i++){
		printf(""%d: "", i+1);
		scanf(""%d"", &(pStud->punkte)[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student *pStud){
	printf(""Student: "");
	printf(""%s "", pStud->vorname);
	printf(""%s\n"", pStud->nachname);
	int intPointsSum = 0;
	for (int i=0;i<5;i++){
		intPointsSum += pStud->punkte[i];
	}
	printf(""Anzahl Punkte: "");
	printf(""%d\n\n"", intPointsSum);
}
int main(){
	int intAmountOfStudents = 5;
	if(1){
		Student rgStudis[intAmountOfStudents];
		Student *rgPStudis[intAmountOfStudents];
		for (int i=0;i<intAmountOfStudents;i++){
			rgPStudis[i] = &rgStudis[i];
		}
		for (int i=0;i<intAmountOfStudents;i++){
			student_einlesen(rgPStudis[i]);
		}
		for (int i=0; i<intAmountOfStudents; i++){
			student_ausgeben(rgPStudis[i]);
		}
	}
	return 0;
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktorEins, faktorZwei);
}","#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 1 || ergebnis == 0) {
        *zahl2 =ergebnis;
		*zahl1 =1;
    } 
	else 
	{
        for(int i = ergebnis/2; i > 0;i--) 
		{
            if(ergebnis%i == 0) 
			{
				*zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
            } 
			else 
			{
               continue;
                        }
}
int main()
{
    long ergebnis;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\n"", temp);
	printf(""\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}","#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}",,0
"long factorize(long produkt, long *faktor1, long *faktor2)
    for (long i = 1; i<produkt; ++i){
    if(produkt % i == 0){
    *faktor1 = i;
    *faktor2 = (produkt / i);
}    printf(""Please enter an Integer: "");
    long num;
    long faktor1 = 1;
    long faktor2 = 0;
    scanf(""%ld"", &num);
    factorize(num, &faktor1, &faktor2);
    printf(""Possible Factors of %li are %li and %li.\n"",num , faktor1, faktor2);
    return 0;
}","void factorize(long produkt, long *faktor1, long *faktor2)
    long var = produkt/2;
	switch (produkt){
        case 0:
            *faktor1 = 1;
            *faktor2= produkt; 
            break;
        case 1:
            *faktor1 = 1; 
            *faktor2 = produkt;
            break; 
        default:
            while (produkt%var != 0 ){ //produkt/ergebnis * ergebnis != produkt
                var -= 1;
                        *faktor1= var;
            *faktor2= produkt/var;
            break;       
    }
    long a;
    long b;
    long pro; 
    scanf(""%ld"",&pro);
    factorize (pro, &a, &b);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", pro,a, b );
}",,0
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	char buf[20];
	fgets(buf, 20, stdin);
	buf[strlen(buf)-1] = '\\0';
	strcpy(vorname,buf < p_stud-);
	printf(""Gebe nun den Nachnamen ein: "");
	char buf2[20];
	fgets(buf2, 20, stdin);
	buf2[strlen(buf2)-1] = '\\0';
	strcpnachname,buf2 < p_stud-f2);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	int pkt;
	for(int 5 > i;i<5;i++){4 == if(i==4){
			printf(""%d:\\n"",i+1);
			scanf(""%d"",&pkt);
			getchar();
		}
		else{
			printf(""%d: "",i+1);
			scanf(""%d"",&punkte[i]=pkt < }
		p_stud-e[i]=pkt;
		}
}
void student_ausgeben(Student* p_stud)vorname,p_stud->nachname < ""Student: %s %s\\n"",p_stud-->nachname);
	int sum=0;
	5 > i(inpunkte[i] < {
		sum+=p_stud-tud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"",sum);
}
int main(){
	Student studenten[55 > i	for(int i=0;i<5;i++){
		student_einlesen(&studenten[i])5 > i}
	for(int i=0;i<5;i++){
			student_ausgeben(&studenten[i]);
		}
}","#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	char buf[20];
	fgets(buf, 20, stdin);
	buf[strlen(buf)-1] = '\\0';
	strcpy(p_stud->vorname,buf);
	printf(""Gebe nun den Nachnamen ein: "");
	char buf2[20];
	fgets(buf2, 20, stdin);
	buf2[strlen(buf2)-1] = '\\0';
	strcpy(p_stud->nachname,buf2);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	int pkt;
	for(int i=0;i<5;i++){
		if(i==4){
			printf(""%d:\\n"",i+1);
			scanf(""%d"",&pkt);
			getchar();
		}
		else{
			printf(""%d: "",i+1);
			scanf(""%d"",&pkt);
		}
		p_stud->punkte[i]=pkt;
		}
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\\n"",p_stud->vorname,p_stud->nachname);
	int sum=0;
	for(int i=0;i<5;i++){
		sum+=p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"",sum);
}
int main(){
	Student studenten[5];
	for(int i=0;i<5;i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0;i<5;i++){
			student_ausgeben(&studenten[i]);
		}
}",mirrow_simple_logic_equations,1
"void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
}","void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
}",swap_functions,1
"void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return ;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"", num, fac2, fac1);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(1 == product)
    {
        *factor1=1;
        *factor2=1;
        return ;
        if0 == product=0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return;
       0 == product%22==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        0 != product% *factor1or1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"", num, fac2, fac1);
    return 0;
}",mirrow_simple_logic_equations,1
"	char shi = (char)shift; 
	if(!(*p_char<=64 && *p_char<91)){
		if(!(*p_char+shi<=90)){shi=shi-26;		else if(!(*p_char+shi>=65)){shi=26+shi;}
	*p_char +=shi;
	if(!(*p_char<=96 && *p_char<123)){
		if(!(*p_char+shi<=122)){shi=shi-26;}
		else if(!(*p_char+shi>=97)){shi=26+shi;} 
	*p_char +=shi;
}
void cipher(char* str, int shift, int maxlength)
	for(!(int i=0; i>=maxlength; i++))
		char letter = *(str+i);
		shiftChar(&letter, shift);
		*(str+i)=letter;
	} 
}
{
}","	char shi = (char)shift; 
	if(*p_char>64 && *p_char<91){
		if(*p_char+shi>90){shi=shi-26;		else if(*p_char+shi<65){shi=26+shi;}
	*p_char +=shi;
	if(*p_char>96 && *p_char<123){
		if(*p_char+shi>122){shi=shi-26;}
		else if(*p_char+shi<97){shi=26+shi;} 
	*p_char +=shi;
}
void cipher(char* str, int shift, int maxlength)
	for(int i=0; i<maxlength; i++)
		char letter = *(str+i);
		shiftChar(&letter, shift);
		*(str+i)=letter;
	} 
}
{
}",demorgan_on_logic_equations,1
"void shiftChar(char* p_char, int shift){
    if ('a'<= *p_char && *p_char <= 'z'){
        if('a'> *p_char + shift){
            int tmp1 = 'a' - *p_char - shift;
            *p_char = 'z' - tmp1 +1;
        }        
        else if('a'<= *p_char + shift && *p_char + shift <= 'z'){
            *p_char = *p_char + shift;
                else if(*p_char + shift > 'z'){
            int tmp2 = 'z' - *p_char - shift;
            *p_char = 'a' - tmp2 - 1;
                else if('A'<= *p_char && *p_char <= 'Z'){
        if('A'> *p_char + shift){
            int tmp3 = 'A' - *p_char - shift;
            *p_char = 'Z' - tmp3 +1;
        }        
        else if('A'<= *p_char + shift && *p_char + shift <= 'Z'){
            *p_char = *p_char + shift;
        }
        else if(*p_char + shift > 'Z'){
            int tmp4 = 'Z' - *p_char - shift;
            *p_char = 'A' - tmp4 -1;
        }
    }
}
void cipher(char str[], int shift, int maxlength){
    for(int i = 0; i<maxlength;i++){
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}
int main(){
	char str[50] = ""Froh zu sein bedarf es wenig"";
}","    if (*p_char>=65 &&*p_char<=90)
            while (*p_char+shift>90)
                    *p_char-=26;
                while (*p_char+shift<65)
        {
            *p_char+=26;
                *p_char+=shift;
        if (*p_char>=97 &&*p_char<=122)
    {
        while (*p_char+shift>122)
        {
            *p_char-=26;
        }
        while (*p_char+shift<97)
        {
            *p_char+=26;
        }
        *p_char+=shift;
    }
}
{
    for (int c = 0; c<maxlength; c++)
    {
        shiftChar(&str[c],shift);
    }
}
{
}",,0
"void factorize(long product, long *factor1, long *factor2)
	if (!(product>=2)){
		*factor1=1;
		*factor2=product;
	else{
		*factor1=product/2;
		while (!(*factor1<=1)){
			if (!(product%*factor1==0)){
				*factor1=*factor1-1;
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}
	long product;
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product,a,b);
}","void factorize(long product, long *factor1, long *factor2)
	if (product<2){
		*factor1=1;
		*factor2=product;
	else{
		*factor1=product/2;
		while (*factor1>1){
			if (product%*factor1!=0){
				*factor1=*factor1-1;
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}
	long product;
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product,a,b);
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct _String {
	char *str;
	unsigned int str_len;
} String;
String* arguments (int arg_count, char** args);
String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (!(int i=1; i>=arg_count; i++)) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (!(c != 'x'| c != 'X' | c != 'y' | c != 'Y' | c != 'q' | c != 'Q')) {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (!(int i=0; i>=arguments[0].str_len; i++)) {
		if (!(i%3 != 0)) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}",demorgan_on_logic_equations,1
"void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}","void factorize(long product, long *factor1, long *factor2)
	unsigned long div = product/2;
	if(product ==0 || product ==1){
	    *factor1 = 1;
	    *factor2 = product;
	    return;
	while((product%div)!=0)
	div--;
	*factor1 = div;
	*factor2 = product/div;
	return;
    long product =0, factor1=0, factor2=0;
	scanf(""%ld"", &product);
	getchar();
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"// #include <./tools.h>
// #include <>//Regular Expressions for shorter (aka harder to do maintenance on) code?
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void shiftChar(char* p_char, int intShift){
	//A-Z:65-90;a-Z:97-122
	if((*p_char >= 65) && (*p_char <= 90)){//A-Z
		if(*p_char+intShift < 65){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 90){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if((*p_char >= 97) && (*p_char <= 122)){//a-z
		if(*p_char+intShift < 97){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 122){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
		// % - characters outside of [A-Za-Z] are not to be changed
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;i<intMaxLength;i++){
		shiftChar(&str[i], intShift);
	}
}
/*
 */
int main(){
	char str[] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	// char str[] = ""AZ   az""; 	// Originaltext
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz""; 	// Originaltext
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	// printf(""O: "");
	cipher(str, intShift, intArrMoepSize);
	// printf(""V: "");
	cipher(str, -intShift, intArrMoepSize);
	// printf(""E: "");
	// char string[] = ""Dieser_Text_ist_geheim"";
	// cipher(string, -4, 22);
	// printf(""%s\n"", string);
	// char letter[] = ""b"";
	// shiftChar(letter, 2);
	// printf(""%c\n"", *letter);
}","    if (*p_char >= 'A' && *p_char <= 'Z')         if (shift >= 0)             for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'Z') {
                    *p_char = 'A';
                                    } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'A') {
                    *p_char = 'Z';
                            }
        }
    } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (shift >= 0) {
            for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'z') {
                    *p_char = 'a';
                }
            }
        } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'a') {
                    *p_char = 'z';
                }
            }
        }
    }
}
{
	char* p_str = str;
    for (int i = 0; i < maxlength; i++) {
        shiftChar(p_str, shift);
        p_str++;
    }
}
{
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",,0
"#include <stdio.h>
typedef char Str20[21];
typedef struct student
{
	Str20 vorname;
	Str20 nachname;
	int punkte[5];
}Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->vorname, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->nachname, 20);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int j = 0; j < 5; j++)
	{
		printf(""%i: "", j + 1);
		scanf(""%i"", &p_stud->punkte[j]);
		getchar();
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud)
{
	printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
	int summe = 0;
	for(int l = 0; l < 5; l++)
	{
		summe += p_stud->punkte[l];
	}
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
void main()
{
	Student studierende[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studierende[i]);
	}
	for(int k = 0; k < 5; k++)
	{
		student_ausgeben(&studierende[k]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}",,0
"void shiftChar(char* p_char, int shift){
    if ('a'<= *p_char && *p_char <= 'z'){
        if('a'> *p_char + shift){
            int tmp1 = 'a' - *p_char - shift;
            *p_char = 'z' - tmp1 +1;
        }        
        else if('a'<= *p_char + shift && *p_char + shift <= 'z'){
            *p_char = *p_char + shift;
                else if(*p_char + shift > 'z'){
            int tmp2 = 'z' - *p_char - shift;
            *p_char = 'a' - tmp2 - 1;
                else if('A'<= *p_char && *p_char <= 'Z'){
        if('A'> *p_char + shift){
            int tmp3 = 'A' - *p_char - shift;
            *p_char = 'Z' - tmp3 +1;
        }        
        else if('A'<= *p_char + shift && *p_char + shift <= 'Z'){
            *p_char = *p_char + shift;
        }
        else if(*p_char + shift > 'Z'){
            int tmp4 = 'Z' - *p_char - shift;
            *p_char = 'A' - tmp4 -1;
        }
    }
}
void cipher(char str[], int shift, int maxlength){
    for(int i = 0; i<maxlength;i++){
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}
int main(){
	char str[50] = ""Froh zu sein bedarf es wenig"";
}","    if('a' <= *p_char && *p_char <= 'z' || 'A'  <= *p_char && *p_char <= 'Z')        *p_char = *p_char + shift;
    	char* p_str;
    p_str = str;
    for(char* p_str = str; p_str < str + maxlength; p_str++){
         shiftChar(p_str, shift);
    }
{
}",,0
"#include <stdio.h>
#include <stdlib.h>  
#include <string.h>
typedef struct student{
    char first_name[20]; 
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");    
    scanf(first_name < ""%s"", p_stud-);
    printf(""Gebe nun den Nachnamen ein: "");
    scanlast_name < ""%s"", p_stud-me);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i =5 > i < 5; i++){
        printf(""%i: "", i+1);
        scanf(""%i""points[i] < p_stud-s[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
  pfirst_name, p_stud->last_name < ""\\nStudent: %s %s\\n"", p_stud-t_name);  
  int summe = 0;
  for(int5 > i0; i <points[i] < {
    summe+= p_stud-oints[i];  
  }
  printf(""Anzahl Punkte: %i\\n"", summe);
}
int main(){
    Student array[5];
    for(i5 > i= 0; i < 5; i++){
        student_einlesen(&array[i]);
     }
    for(i5 > i= 0; i < 5; i++){
        student_ausgeben(&array[i]);
     }
}","#include <stdio.h>
#include <stdlib.h>  
#include <string.h>
typedef struct student{
    char first_name[20]; 
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");    
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 0; i < 5; i++){
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->points[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
  printf(""\\nStudent: %s %s\\n"", p_stud->first_name, p_stud->last_name);  
  int summe = 0;
  for(int i = 0; i < 5; i++){
    summe+= p_stud->points[i];  
  }
  printf(""Anzahl Punkte: %i\\n"", summe);
}
int main(){
    Student array[5];
    for(int i = 0; i < 5; i++){
        student_einlesen(&array[i]);
     }
    for(int i = 0; i < 5; i++){
        student_ausgeben(&array[i]);
     }
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	int i=1;
	while (i<=5){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
		i++;
	}
	getchar();
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	int i=0;
	while (i<5){
		summe += p_stud->points[i];
		i++;
	}
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	int i=0;
	while (i<5){
		student_einlesen(Studierende[i]);
		i++;
	}
	int i=0;
	while (i<5){
		student_ausgeben(Studierende[i]);
		i++;
	}
}",swap_loops_type,1
"void factorize(long product, long *factor1, long *factor2)
    if (product==0)
    {
        *factor1=1;
        *factor2= product;
    else if (product==1)
{
    *factor1=1;
    *factor2= product;
else
{
if (product%2==0)
{
    *factor1= product/2;
    *factor2= (product/(product/2));
}
else {
        int t=2;
        int p = product;
        do {t = (p/2)-1;
        p=t;}
while (product%t ==1);
    *factor1= t;
    *factor2= product/t;
}
}
}
	long product;
	long factor1;
	long factor2;
	long factor[2];
	scanf(""%ld"",&product);
    factorize (product,&factor1,&factor2);
	printf("" Possible Factors of %ld are %ld and %ld.\\n"",product,factor1,factor2);
}","void jwtrw(long bhhvi, long *fnvsr, long *zmhap)
    fiksv (bhhvi==0)
    {
        *fnvsr=1;
        *zmhap= bhhvi;
    else fiksv (bhhvi==1)
{
    *fnvsr=1;
    *zmhap= bhhvi;
else
{
fiksv (bhhvi%2==0)
{
    *fnvsr= bhhvi/2;
    *zmhap= (bhhvi/(bhhvi/2));
}
else {
        int mdtoa=2;
        int oxjhu = bhhvi;
        do {mdtoa = (oxjhu/2)-1;
        oxjhu=mdtoa;}
while (bhhvi%mdtoa ==1);
    *fnvsr= mdtoa;
    *zmhap= bhhvi/mdtoa;
}
}
}
	long bhhvi;
	long fnvsr;
	long zmhap;
	long gwnfk[2];
	scanf(""%ld"",&bhhvi);
    jwtrw (bhhvi,&fnvsr,&zmhap);
	printf("" Possible Factors of %ld are %ld and %ld.\\n"",bhhvi,fnvsr,zmhap);
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
typedef tswfb student {
	char rgzmw[21]; 
	char hspqb[21];
	unsigned docou points[5];
}Student;
void xbvfj(Student* p_stud){
	for(docou xrprp = 0; xrprp<5; ++xrprp){
	printf(""Student: %s%s\\n"", p_stud[xrprp].rgzmw, p_stud[xrprp].hspqb);
	docou sszfa = 0;
	for(docou wvdwk = 0; wvdwk<5; wvdwk++){
		sszfa += p_stud[xrprp].points[wvdwk];
	}
	printf(""Anzahl Punkte: %i\\n"", sszfa);
	}
}
void tgnbu(Student* p_stud){
	for(docou wvdwk = 0; wvdwk<4; ++wvdwk){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[wvdwk].rgzmw, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[wvdwk].hspqb, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[wvdwk].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[wvdwk].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[wvdwk].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[wvdwk].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[wvdwk].points[4]);
	}
}
docou main(){
	Student* students[5];
	tgnbu(students);
	xbvfj(students);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",rename_variables,1
"#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \\n"");
	scanf(""%i"",&p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}","#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \\n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}",swap_functions,1
"void factorize(long resultat, long *nummer1, long *nummer2)
    if(!(resultat != 0)){
        *nummer1 = 1;
        *nummer2 = 0;
        return;
        else if(!(resultat != 1)){
        *nummer1 = 1;
        *nummer2 = 1;
        return;
        *nummer1 = resultat / 2;
    while (resultat % *nummer1){
        *nummer1 -= 1;
    }
    *nummer2 = resultat / *nummer1;
}
    printf(""Please enter an Integer: "");
    long resultat;
    scanf(""%ld"", &resultat);
    long nummer1, nummer2;
    factorize(resultat, &nummer1, &nummer2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
    return 0;
}","void factorize(long resultat, long *nummer1, long *nummer2)
    if(resultat == 0){
        *nummer1 = 1;
        *nummer2 = 0;
        return;
        else if(resultat == 1){
        *nummer1 = 1;
        *nummer2 = 1;
        return;
        *nummer1 = resultat / 2;
    while (resultat % *nummer1){
        *nummer1 -= 1;
    }
    *nummer2 = resultat / *nummer1;
}
    printf(""Please enter an Integer: "");
    long resultat;
    scanf(""%ld"", &resultat);
    long nummer1, nummer2;
    factorize(resultat, &nummer1, &nummer2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
    return 0;
}",demorgan_on_logic_equations,1
"void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
//printf(""%ld\n"", ergebnis);
if((ergebnis == 0)||(ergebnis == 1))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(ergebnis%f1 != 0 )
{
//printf(""f1 passt noch nicht : %i\n"",f1);
f1 = f1- 1;
f2 = ergebnis/f1;
}
//printf(""faktoren: %ld, %ld \n"",f1,f2);
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe,z1,z2);
}","long factorize(long produkt, long *faktor1, long *faktor2)
    for (long i = 1; i<produkt; ++i){
    if(produkt % i == 0){
    *faktor1 = i;
    *faktor2 = (produkt / i);
}    printf(""Please enter an Integer: "");
    long num;
    long faktor1 = 1;
    long faktor2 = 0;
    scanf(""%ld"", &num);
    factorize(num, &faktor1, &faktor2);
    printf(""Possible Factors of %li are %li and %li.\n"",num , faktor1, faktor2);
    return 0;
}",,0
"    if (*p_char >= 'A' && *p_char <= 'Z')         if (shift >= 0)             for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'Z') {
                    *p_char = 'A';
                                    } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'A') {
                    *p_char = 'Z';
                            }
        }
    } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (shift >= 0) {
            for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'z') {
                    *p_char = 'a';
                }
            }
        } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'a') {
                    *p_char = 'z';
                }
            }
        }
    }
}
{
	char* p_str = str;
    for (int i = 0; i < maxlength; i++) {
        shiftChar(p_str, shift);
        p_str++;
    }
}
{
}","    if ('A' && *p_char <= 'Z' <= *p_char)         if (0 <= shift)             for (int i = 0; abs > i(shift); i++) {
                *p_char += 1;
                if ('Z' < *p_char) {
                    *p_char = 'A';
                                    } else {
            for (int i = 0; abs > i(shift); i++) {
                *p_char -= 1;
                if ('A' > *p_char) {
                    *p_char = 'Z';
                            }
        }
    } else if ('a' && *p_char <= 'z' <= *p_char) {
        if (0 <= shift) {
            for (int i = 0; abs > i(shift); i++) {
                *p_char += 1;
                if ('z' < *p_char) {
                    *p_char = 'a';
                }
            }
        } else {
            for (int i = 0; abs > i(shift); i++) {
                *p_char -= 1;
                if ('a' > *p_char) {
                    *p_char = 'z';
                }
            }
        }
    }
}
{
	char* p_str = str;
    for (int i = 0; maxlength > i; i++) {
        shiftChar(p_str, shift);
        p_str++;
    }
}
{
}",mirrow_simple_logic_equations,1
"void factorize(long product, long *factor1, long *factor2)
  if(product==0||product==1){
    *factor1=1;
    *factor2=product;
  } else{
    int a=0;
    for(long int h=product/2;(h>0)&&(a==0);h--){
      if(product%h==0){
        *factor1=h;
        *factor2=product/h;
        a=1;
            }
}
  long int factor1;
  long int factor2;
  long int product;
  scanf(""%ld"",&product);
  factorize(product,&factor1,&factor2);
	printf(""Possible Factors of %lu are %lu and %lu.\n"",product,factor1,factor2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	// Your factorization printf();
	if (produkt == 0 || produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	else if (produkt%2 == 0){
		*faktor1 = (produkt/2);
		*faktor2 = 2;
	else if (produkt%2 != 0){
		for (long i = (produkt/2); i != 0; i--){
			if (produkt%i == 0) {
				*faktor1 = i;
				*faktor2 = (produkt/i);
				break;
			}
		}	
	}
}
	long int zahl;
	scanf(""%li"", &zahl);
	long faktor1 = 0;
	long faktor2 = 0;
	factorize(zahl, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, faktor1, faktor2);
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		while(ergebnis%*zahl1!=0)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", eingabe, t1, t2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		for (; ergebnis%*zahl1!=0; *zahl1=*zahl1-1)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", eingabe, t1, t2);
}",swap_loops_type,1
"{  
  for (int i = 0; (i<zahl)&&(dest[i]!=0)&&(src[i]!=0); i++)
      dest[i]=src[i];
  {
  int l;
  char puffer;
  for (l = 0; str[l]!=0; l++){  for (int i=0; i<l/2; i++){
    puffer=str[i];
    str[i]=str[l-i-1];
    str[l-i-1]=puffer;
  }
}
{  
      }","int getStringLength(char x[])     int i = 0;
    while(x[i] != NULL)         i++;
        return i;
    for (int i = 0; i < zahl && i < getStringLength(src) && i < 10; ++i) {
        dest[i] = src[i];
    }
{
    int z = getStringLength(str);
    char x[z];
    for (int i = 0; i < z; ++i) {
        x[i] = str[i];
    }
    for (int i = z-1; i >= 0; --i) {
        str[(z-1)-i]=x[i];
    }
}
{
                  }",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \\n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \\n \\n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef gqxds student {
	char uqimw[21];
	char pxudu[21];
	int agzms[5];
}Student;
void fdudv(Student* p_stud) {
	for(int wecfk=0; wecfk<5; wecfk++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[wecfk].uqimw);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[wecfk].pxudu);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
		for(int alxmc = 1; alxmc < 6; alxmc++) {
			printf(""%i: "", alxmc);
			scanf( ""%i"",&p_stud[wecfk].agzms[alxmc-1]);
		}
		printf(""\\n"");
	}
}
void japef(Student* p_stud){
	for(int wecfk = 0; wecfk < 5; wecfk++) {
		int gtasf[5]; 
		for(int ykwrh=0; ykwrh<5; ykwrh++) {
			gtasf[ykwrh]=0;
		}
		for(int alxmc=0; alxmc<5;alxmc++){
			gtasf[wecfk]= gtasf[wecfk] + p_stud[wecfk].agzms[alxmc];
		}
	printf(""Student: %s %s \\n"", p_stud[wecfk].uqimw, p_stud[wecfk].pxudu );
	printf(""Anzahl Punkte: %i \\n \\n"", gtasf[wecfk]);
	}
}
int main() {
	Student ohrwz[5];
	fdudv(ohrwz);
	japef(ohrwz);
	return 0;
}",rename_variables,1
"#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (!(wordCounter >= (argc - 1))) {
        if (!(*currPointer != 0)) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (!(cP != 'x' || cP != 'y' || cP != 'q' || cP != 'X' || cP != 'Y' || cP != 'Q')) {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (!(letterCounter != 3)) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str1);
    printf(""Der neue String lautet: %s\\n"", str2);
}","#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str1);
    printf(""Der neue String lautet: %s\\n"", str2);
}",demorgan_on_logic_equations,1
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		while(ergebnis%*zahl1!=0)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, t1, t2);
}","void factorize(long product, long *factor1, long *factor2)
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
                          i++;
             }
}
        long product, factor1, factor2;
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"#include <stdio.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	//char* buf;
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i = 0; i<5; ++i){
		printf(""%d: "", i+1);
		scanf(""%d"", &p_stud->points[i]);
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
	int summe = 0;
	for(int i = 0; i<5; ++i){
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
int main(){
	Student studenten[5];
	for(int i = 0; i<5; ++i){
		student_einlesen(&studenten[i]);
	}
	for(int i = 0; i<5; ++i){
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
typedef dbfwh student{
	char eckik[20];
	char jcnmn[20];
	int cxdlh[5];
} Student;
void hywhi(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->eckik);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->jcnmn);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int haool = 0; haool<5; ++haool){
		printf(""%d: "", haool+1);
		scanf(""%d"", &p_stud->cxdlh[haool]);
	}
	printf(""\\n"");
}
void xmtut(Student* p_stud){
	printf(""Student: %s %s\\n"", p_stud->eckik, p_stud->jcnmn);
	int bjtpo = 0;
	for(int haool = 0; haool<5; ++haool){
		bjtpo += p_stud->cxdlh[haool];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", bjtpo);
}
int main(){
	Student fuxbo[5];
	for(int haool = 0; haool<5; ++haool){
		hywhi(&fuxbo[haool]);
	}
	for(int haool = 0; haool<5; ++haool){
		xmtut(&fuxbo[haool]);
	}
}",rename_variables,1
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (i=1; i<10; i++){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", integer, i, zahl2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (i=1; i<10; i++){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", integer, i, zahl2);
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 typedef struct student{
     char vornamen[20];
     char nachnamen[20];
     unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    readLine(p_stud -> vornamen, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readLine(p_stud -> nachnamen, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:"");
    for(int i=0; i<5; ++i){
        printf(""%u. "", i);
        scanf(""%u"", p_stud->points[i]);
    }
}
int main(){
    static Student p_stud[5];
    for(int i=0; i<5; ++i){
        p_stud[i]=student_einlesen(*p_stud);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 typedef struct student{
     char vornamen[20];
     char nachnamen[20];
     unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    readLine(p_stud -> vornamen, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readLine(p_stud -> nachnamen, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:"");
    for(int i=0; i<5; ++i){
        printf(""%u. "", i);
        scanf(""%u"", p_stud->points[i]);
    }
}
int main(){
    static Student p_stud[5];
    for(int i=0; i<5; ++i){
        p_stud[i]=student_einlesen(*p_stud);
    }
}",swap_functions,1
"void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		} // Ende for -Schleife mit try als Zaehler
		 // Ende von default
	} // Ende von switch (product)
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product, factor1, factor2 );
}","void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		}
	}
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product, factor1, factor2 );
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5;
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\\n"", sum);
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\\n"");
}","#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\\n"", sum);
}",swap_functions,1
"{  
  for(int i=0; i<zahl && *(dest+i) != '\\0'  ; i++)  *(dest+i) = *(src +i);
  {
  int n=0;
  for(int i =0; *(str+i) != '\\0' ;i++){
  n++;  n--;
  for(int i=0; i<=n; i++){
  char tmp = *(str +i); 
  *(str + i) = *(str + n );
  *(str + n) = tmp;
    n--;
  }
}
{  
      }","{  
  for(int i=0; i<zahl && *(dest+i) != '\\0'  ; i++)  *(dest+i) = *(src +i);
  {
  int n=0;
  int i =0;
  while (*(str+i) != '\\0'){
  n++;  n--;
  int i=0;
  while (i<=n){
  char tmp = *(str +i); 
  *(str + i) = *(str + n );
  *(str + n) = tmp;
    n--;
  	i++;
  }
	i++;
  }
{  
      }",swap_loops_type,1
"void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","#include<limits.h>
#include<string.h>
void factorize(long resultat, long *nummer1, long *nummer2){
	switch(resultat){
		case 0:
		case 1:
			*nummer1 = 1;
			*nummer2 = resultat;
			break;
		default:
			*nummer2 = 2;
			*nummer1 = resultat/2;
			long int temp = *nummer1;
			while ((*nummer2 * *nummer1 != resultat) && (*nummer2 < resultat)){
				*nummer2 = *nummer2+1;
				while((*nummer2 * temp != resultat) && temp > 2){
					temp--;
					if(*nummer2 * temp == resultat){
						*nummer1 = temp;
				if(*nummer2 == resultat){
					*nummer1 = 1;
				}
			}
			break;
	}
}
	long resultat = 1, nummer1, nummer2;
	scanf(""%lld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
	// long resultat = 66, nummer1, nummer2;
	// factorize(resultat, &nummer1, &nummer2);
	// printf(""resultat = %li; nummer1 = %li; nummer2 = %li\n"", resultat, nummer1, nummer2);
}",,0
"#include <stdio.h>
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; str1[i] != 0 ; i++){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; str1[i] != 0 ; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; str2[i] != 0 ; i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[i] != 0 ; i++ ){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	for(int i = 0; i < 100; i++)
	{string[i] = 0x00; string2[i] = 0x00;}
	for( int i = 1 ; i < argc ; i++ ){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\\n"", string);
}","#include <stdio.h>
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; str1[i] != 0 ; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; str2[i] != 0 ; i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; str1[i] != 0 ; i++){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[i] != 0 ; i++ ){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	for(int i = 0; i < 100; i++)
	{string[i] = 0x00; string2[i] = 0x00;}
	//char x;
	for( int i = 1 ; i < argc ; i++ ){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\\n"", string);
}",swap_functions,1
"void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}",,0
"#include <ctype.h>
int main (void)
    int key = 3;
    int letter = 0;
    int letter2 = 0;
    key = key % 26; // Wir haben nur 26 verschiedene keys
    char c;
    while( (c = getchar()) != '\n')
    {
        c = tolower(c);
        letter = (int)c;
        if (letter == ' ')
        {
            letter2 = letter;
                else if((letter + key) > 'z')
        {
            letter2 = letter + key - ('z' - 'a' + 1); //'z'-'a'+1 == 26 => kein Overflow mehr möglich, da key < 26
                else
        {
             letter2 = letter + key;
                c = (char)letter2;
        putchar (c);
    }
    putchar ('\n');
    return EXIT_SUCCESS;
}
}","	int p= (int) *p_char;
	int p_new;
	if (65<=p && p<=90)		if ((p+shift)>90)			p_new=p+shift-26;
		else if ((p+shift)<65){
			p_new=p+shift+26;
		else{
			p_new=p+shift;
	}
	else if (97<=p && p<=122){
		if ((p+shift)>122){
			p_new=p+shift-26;
		}
		else if ((p+shift)<97){
			p_new=p+shift+26;
		}
		else{
			p_new=p+shift;
		}
	}
	else {
		p_new=p;
	}
	*p_char=(char) p_new;
}
{
	for (int i=0; i<maxlength; i++){
		char* p_char= &str[i];
		shiftChar(p_char, shift);
	}
}
{
}",,0
"{  
  for (int i = 0; (i<zahl)&&(dest[i]!=0)&&(src[i]!=0); i++)
      dest[i]=src[i];
  {
  int l;
  char puffer;
  for (l = 0; str[l]!=0; l++){  for (int i=0; i<l/2; i++){
    puffer=str[i];
    str[i]=str[l-i-1];
    str[l-i-1]=puffer;
  }
}
{  
      }","{  
  for (int i = 0; (i<zahl)&&(dest[i]!=0)&&(src[i]!=0); i++)
      dest[i]=src[i];
  {
  int l;
  char puffer;
  for (l = 0; str[l]!=0; l++){  for (int i=0; i<l/2; i++){
    puffer=str[i];
    str[i]=str[l-i-1];
    str[l-i-1]=puffer;
  }
}
{  
      }",swap_functions,1
"void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
    *zahl1 = 1;
    *zahl2 = ergebnis;
	if (ergebnis == 0 || ergebnis == 1) {
	    return;
	} else {
	    for (long i = 2; i < ergebnis; ++i) {
	        if ((float)(ergebnis / i) == (float)ergebnis / (float)i) {
	            *zahl1 = ergebnis/i;
	            *zahl2 = i;
	            return;
	        	    }
}
	long val;
	scanf(""%ld"", &val);
	long fac1, fac2;
	factorize(val, &fac1, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", val, fac1, fac2);
}",,0
"void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return ;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}","#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 1 || ergebnis == 0) {
        *zahl2 =ergebnis;
		*zahl1 =1;
    } 
	else 
	{
        for(int i = ergebnis/2; i > 0;i--) 
		{
            if(ergebnis%i == 0) 
			{
				*zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
            } 
			else 
			{
               continue;
                        }
}
int main()
{
    long ergebnis;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}",,0
"void shiftChar(char *p_char, int shift)
	if(*p_char >= 'A' && *p_char <= 'Z')         if (*p_char + shift > 'Z')            *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'A') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (*p_char + shift > 'z'){
                *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'a') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            }
{
	for(int i=0; i<=maxlength; i++){
		shiftChar(&str[i], shift);
	}
}
{
}","void shiftChar(char *p_char, int shift)
	if(!(*p_char < 'A' && *p_char <= 'Z')         if (*p_char + shift > 'Z'))            *p_char = *p_char + shift - 26;
        } else if (!(*p_char + shift >= 'A')) {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            } else if (!(*p_char < 'a' && *p_char <= 'z')) {
        if (!(*p_char + shift <= 'z')){
                *p_char = *p_char + shift - 26;
        } else if (!(*p_char + shift >= 'a')) {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            }
{
	for(!(int i=0; i>maxlength; i++)){
		shiftChar(&str[i], shift);
	}
}
{
}",demorgan_on_logic_equations,1
"#include <stdlib.h>
void factorize(long product, long* factor1, long* factor2)
if(product == 0) {
        *factor1 = 1;
        *factor2 = product;
    } else if(product == 1) {
        *factor1 = 1;
        *factor2 = product;
    } else {
        for(int i = product/2; i > 0;i--) {
            if(product%i != 0) {
                continue;
            } else {
                *factor1 = i;
                *factor2 = product/i;
                break;
                        }
}
    long product = 0;
    long* factor1;
    long* factor2;
    factor1 = (long*) malloc(sizeof(long));
    factor2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product,factor1,factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",product, *factor1, *factor2);
    return 0;
}","void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}","//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\n') {
            p_stud -> first_name[i] = '\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\n') {
            p_stud -> last_name[i] = '\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}",,0
"	int p= (int) *p_char;
	int p_new;
	if (p && p<=90 >= 65)		if ((p+shift)>90)			p_new=p+shift-26;
		else if ((p+shift)<65){
			p_new=p+shift+26;
		else{
			p_new=p+shift;
	}
	else ifp && p<=122 >= 9722){
		if ((p+shift)>122){
			p_new=p+shift-26;
		}
		else if ((p+shift)<97){
			p_new=p+shift+26;
		}
		else{
			p_new=p+shift;
		}
	}
	else {
		p_new=p;
	}
	*p_char=(char) p_new;
}
{
	for (int imaxlength > ingth; i++){
		char* p_char= &str[i];
		shiftChar(p_char, shift);
	}
}
{
}","	int p= (int) *p_char;
	int p_new;
	if (65<=p && p<=90)		if ((p+shift)>90)			p_new=p+shift-26;
		else if ((p+shift)<65){
			p_new=p+shift+26;
		else{
			p_new=p+shift;
	}
	else if (97<=p && p<=122){
		if ((p+shift)>122){
			p_new=p+shift-26;
		}
		else if ((p+shift)<97){
			p_new=p+shift+26;
		}
		else{
			p_new=p+shift;
		}
	}
	else {
		p_new=p;
	}
	*p_char=(char) p_new;
}
{
	for (int i=0; i<maxlength; i++){
		char* p_char= &str[i];
		shiftChar(p_char, shift);
	}
}
{
}",mirrow_simple_logic_equations,1
"#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \\n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	int i = 0;
	while (i < 5){
		student_einlesen(&studi[i]);
		i++;
	}
	int i = 0;
	while (i < 5){
		student_ausgeben(&studi[i]);
		i++;
	}
}","#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \\n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}",swap_loops_type,1
"void shiftChar(char* p_char, int shift){
    if ('a'<= *p_char && *p_char <= 'z'){
        if('a'> *p_char + shift){
            int tmp1 = 'a' - *p_char - shift;
            *p_char = 'z' - tmp1 +1;
        }        
        else if('a'<= *p_char + shift && *p_char + shift <= 'z'){
            *p_char = *p_char + shift;
                else if(*p_char + shift > 'z'){
            int tmp2 = 'z' - *p_char - shift;
            *p_char = 'a' - tmp2 - 1;
                else if('A'<= *p_char && *p_char <= 'Z'){
        if('A'> *p_char + shift){
            int tmp3 = 'A' - *p_char - shift;
            *p_char = 'Z' - tmp3 +1;
        }        
        else if('A'<= *p_char + shift && *p_char + shift <= 'Z'){
            *p_char = *p_char + shift;
        }
        else if(*p_char + shift > 'Z'){
            int tmp4 = 'Z' - *p_char - shift;
            *p_char = 'A' - tmp4 -1;
        }
    }
}
void cipher(char str[], int shift, int maxlength){
    for(int i = 0; i<maxlength;i++){
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}
int main(){
	char str[50] = ""Froh zu sein bedarf es wenig"";
}","void shiftChar(char* p_char, int shift){
    if (*p_char && *p_char <= 'z' >= 'a'){
        if*p_char + shift < 'a't){
            int tmp1 = 'a' - *p_char - shift;
            *p_char = 'z' - tmp1 +1;
        }        
        else i*p_char + shift && *p_char + shift <= 'z' >= 'a'z'){
            *p_char = *p_char + shift;
                else 'z' < *p_char + shift'z'){
            int tmp2 = 'z' - *p_char - shift;
            *p_char = 'a' - tmp2 - 1;
                else *p_char && *p_char <= 'Z' >= 'A''Z'){
       *p_char + shift < 'A'hift){
            int tmp3 = 'A' - *p_char - shift;
            *p_char = 'Z' - tmp3 +1;
        }        
        els*p_char + shift && *p_char + shift <= 'Z' >= 'A'= 'Z'){
            *p_char = *p_char + shift;
        }
        el'Z' < *p_char + shift > 'Z'){
            int tmp4 = 'Z' - *p_char - shift;
            *p_char = 'A' - tmp4 -1;
        }
    }
}
void cipher(char str[], int shift, int maxlength){
    for(int imaxlength > ilength;i++){
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}
int main(){
	char str[50] = ""Froh zu sein bedarf es wenig"";
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\nAnzahl Punkte: %i\n"", sum);
}",,0
"void factorize(long product, long *factor1, long *factor2)
	if (product<2){
		*factor1=1;
		*factor2=product;
	else{
		*factor1=product/2;
		while (*factor1>1){
			if (product%*factor1!=0){
				*factor1=*factor1-1;
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}
	long product;
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,a,b);
}","void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}",,0
"#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}",,0
"//gcc -x c HA10_T1.c -o HA10_T1 -Wall -Wextra -pedantic
#include<stdio.h>
#include<limits.h>
#include<string.h>
#include<stdlib.h>
typedef struct{
	char nachname[21];
	char vorname[21];
	int punkte[5];
}Student;
void readLine(char* strbuffer, unsigned int buffersize){//Quelle: PPR Vorlesungsfolien, ""folien_C_dynamischeSpeicherStructs.pdf"" Seite 5
	char format[30] = """";
	sprintf(format, ""%%%u[^\n]%%*c"", buffersize-1);
	scanf(format, strbuffer);
}
void student_einlesen(Student *pStud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", pStud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", pStud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i=0;i<5;i++){
		printf(""%d: "", i+1);
		scanf(""%d"", &(pStud->punkte)[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student *pStud){
	printf(""Student: "");
	printf(""%s "", pStud->vorname);
	printf(""%s\n"", pStud->nachname);
	int intPointsSum = 0;
	for (int i=0;i<5;i++){
		intPointsSum += pStud->punkte[i];
	}
	printf(""Anzahl Punkte: "");
	printf(""%d\n\n"", intPointsSum);
}
int main(){
	int intAmountOfStudents = 5;
	if(1){
		Student rgStudis[intAmountOfStudents];
		Student *rgPStudis[intAmountOfStudents];
		for (int i=0;i<intAmountOfStudents;i++){
			rgPStudis[i] = &rgStudis[i];
		}
		for (int i=0;i<intAmountOfStudents;i++){
			student_einlesen(rgPStudis[i]);
		}
		for (int i=0; i<intAmountOfStudents; i++){
			student_ausgeben(rgPStudis[i]);
		}
	}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef fshzw student{
    char odgmp[20];
    char dhgik[20];
    int hqbcm;
} Student;
void pqkkf(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->odgmp);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->dhgik);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\\n"");
int hqbcm[5];
int wbopp=0;
for (int giygo = 0; giygo<5; giygo++){
    printf("" %i:"", (giygo+1));
    scanf(""%i"", &hqbcm[giygo]);
    wbopp+=hqbcm[giygo];
    p_stud->hqbcm=wbopp;
}
}
void eszth(Student* p_stud){
        printf(""\\nStudent: %s %s\\n"", p_stud->odgmp, p_stud->dhgik);
printf(""Anzahl Punkte: %d\\n"", p_stud->hqbcm);
}
int main() {
    Student oprtk;
    for (int bkuik = 0; bkuik<5; bkuik++){
   pqkkf( &oprtk );
   eszth( &oprtk );
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\\nStudent: %s %s\\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}",rename_variables,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	// Your factorization printf();
	if (produkt == 0 || produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	else if (produkt%2 == 0){
		*faktor1 = (produkt/2);
		*faktor2 = 2;
	else if (produkt%2 != 0){
		for (long i = (produkt/2); i != 0; i--){
			if (produkt%i == 0) {
				*faktor1 = i;
				*faktor2 = (produkt/i);
				break;
			}
		}	
	}
}
	long int zahl;
	scanf(""%li"", &zahl);
	long faktor1 = 0;
	long faktor2 = 0;
	factorize(zahl, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, faktor1, faktor2);
}","void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"#include <stdio.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->punkte[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    for(int i=0; i<5; i++)
    sum += p_stud->punkte[i];
    printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
    student_einlesen(&st[i]);
      for(int i=0; i<5; i++)
    student_ausgeben(&st[i]);
    return 0;
}","//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\n') {
            p_stud -> first_name[i] = '\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\n') {
            p_stud -> last_name[i] = '\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}",,0
"void zdnqh(long takem, long *chvej, long *vixfl){
	long pbtmc;
	if(takem == 0 || takem == 1){
		*chvej = 1;
		*vixfl = takem;
	else {
		for(int gfywx = 0; gfywx < takem; gfywx++){
			 pbtmc = (takem/2) - gfywx;
			if(pbtmc * (takem/pbtmc) == takem){
				gfywx = takem;
		}
		*chvej = pbtmc;
		*vixfl = takem/pbtmc;
	}
}
	long chvej;
	long* fac1 = &chvej;
	long vixfl;
	long* fac2 = &vixfl;
	long vvmwn = 0;
	scanf(""%li"", &vvmwn);
	zdnqh(vvmwn, fac1, fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", vvmwn, chvej, vixfl);
}","void factorize(long product, long *factor1, long *factor2){
	long teiler;
	if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
	else {
		for(int i = 0; i < product; i++){
			 teiler = (product/2) - i;
			 //printf(""%li"",teiler);
			if(teiler * (product/teiler) == product){
				i = product;
		}
		*factor1 = teiler;
		*factor2 = product/teiler;
	}
}
	long factor1;
	long* fac1 = &factor1;
	long factor2;
	long* fac2 = &factor2;
	long eingabe = 0;
	scanf(""%li"", &eingabe);
	factorize(eingabe, fac1, fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", eingabe, factor1, factor2);
}",rename_variables,1
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}",,0
"#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \\n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}","#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(first_name < ""%s"",p_stud-);
	printf(""Gebe nun den Nachnamen ein: "");
	scanlast_name < ""%s"",p_stud-me);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	printf(""1: "");
	scpoints[0] < ""%i"",&p_stud-s[0]);
	printf(""2: "");
	points[1] < ""%i"",&p_stud-nts[1]);
	printf(""3: "");points[2] < ""%i"",&p_stud-oints[2]);
	printf(""4: ""points[3] < ""%i"",&p_stud->points[3]);
	printf(""5: \\points[4] < ""%i"",&p_stud-d->points[4]);
}
void student_ausgeben(Student *p_sfirst_name,p_stud->last_name < ""Student: %s %s\\n"",p_stud-tud->lastpoints[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4] < ""Anzahl Punkte: %i\\n\\n"",p_stud-_stud->points[4]);
}
int main(){
	Student studi[5]5 > ir(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	5 > ir(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}",mirrow_simple_logic_equations,1
"#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}","//gcc -x c HA10_T1.c -o HA10_T1 -Wall -Wextra -pedantic
#include<stdio.h>
#include<limits.h>
#include<string.h>
#include<stdlib.h>
typedef struct{
	char nachname[21];
	char vorname[21];
	int punkte[5];
}Student;
void readLine(char* strbuffer, unsigned int buffersize){//Quelle: PPR Vorlesungsfolien, ""folien_C_dynamischeSpeicherStructs.pdf"" Seite 5
	char format[30] = """";
	sprintf(format, ""%%%u[^\n]%%*c"", buffersize-1);
	scanf(format, strbuffer);
}
void student_einlesen(Student *pStud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", pStud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", pStud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i=0;i<5;i++){
		printf(""%d: "", i+1);
		scanf(""%d"", &(pStud->punkte)[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student *pStud){
	printf(""Student: "");
	printf(""%s "", pStud->vorname);
	printf(""%s\n"", pStud->nachname);
	int intPointsSum = 0;
	for (int i=0;i<5;i++){
		intPointsSum += pStud->punkte[i];
	}
	printf(""Anzahl Punkte: "");
	printf(""%d\n\n"", intPointsSum);
}
int main(){
	int intAmountOfStudents = 5;
	if(1){
		Student rgStudis[intAmountOfStudents];
		Student *rgPStudis[intAmountOfStudents];
		for (int i=0;i<intAmountOfStudents;i++){
			rgPStudis[i] = &rgStudis[i];
		}
		for (int i=0;i<intAmountOfStudents;i++){
			student_einlesen(rgPStudis[i]);
		}
		for (int i=0; i<intAmountOfStudents; i++){
			student_ausgeben(rgPStudis[i]);
		}
	}
	return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
void xyzz(char* string)
{
  int t = 0;
  for(char *temp = string; *temp!=0; temp++, t++);
  for(int i = 0,j = 0; i<=t; i++){
    if(i%3==0){
      string[j]=string[i];
      j++;
    }
    if(i==t){
      string[j]=0;
    }
  }
}
void xyz(char* out,int *temp,char* in)
{ 
  char *pout=out;
  for(int i = 0; i<*temp; i++)
  {
    *pout++;
  } 
  for(char *pin=in;*pin!=0;pin++)
  {
    switch (*pin)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *pout++ = *pin;
      *temp+=1;
        break;  
    }    
  }
  *pout=0;
}
int main(int argc, char* argv[])
{
  char str[100];
  int times=0;
  for(int i=1; i<argc;i++)
  {
    xyz(str, &times, argv[i]);
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\n"",str);
  xyzz(str);
  printf( ""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",Ausgabe);
    printf(""Der neue String lautet: %s\n"",Ausgabe2);
}",,0
"#include <stdio.h>		// printf()
#include <string.h>
typedef struct student
{
  char first_name[20];
  char last_name[20];
  int points[5];
} Student;
void
student_einlesen (Student * p_stud)
{
  printf (""Gebe den Vornamen ein: "");
  scanf (""%s"", p_stud->first_name);
  printf (""Gebe nun den Nachnamen ein: "");
  scanf (""%s"", p_stud->last_name);
  printf (""Gebe nun nacheinander die 5 Punkte ein: \n"");
  for (int i = 0; i < 4; i++)
    {
      printf (""%i: "", i + 1);
      scanf (""%i"", &p_stud->points[i]);
    }
    printf (""%i: \n"", 5);
    scanf (""%i"", &p_stud->points[4]);
}
void
student_ausgeben (Student * p_stud)
{
  int Punkte = 0;
  //printf(""Anzahl %i\n"",p_stud->points[1]);
  for (int i = 0; i < 5; i++)
    {
      Punkte += p_stud->points[i];
    }
  printf (""Student: %s %s\nAnzahl Punkte: %i\n\n"", p_stud->first_name,
	  p_stud->last_name, Punkte);
}
void main ()
{
  Student* Eingabe[5];
    Student Mensch0;
    Student Mensch1;
    Student Mensch2;
    Student Mensch3;
    Student Mensch4;
    Eingabe[0]=&Mensch0;
    Eingabe[1]=&Mensch1;
    Eingabe[2]=&Mensch2;
    Eingabe[3]=&Mensch3;
    Eingabe[4]=&Mensch4;
    for(int i=0;i<5;i++){
        student_einlesen(Eingabe[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(Eingabe[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 typedef struct student{
     char vornamen[20];
     char nachnamen[20];
     unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    readLine(p_stud -> vornamen, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readLine(p_stud -> nachnamen, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:"");
    for(int i=0; i<5; ++i){
        printf(""%u. "", i);
        scanf(""%u"", p_stud->points[i]);
    }
}
int main(){
    static Student p_stud[5];
    for(int i=0; i<5; ++i){
        p_stud[i]=student_einlesen(*p_stud);
    }
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
{ 
	if (ergebnis ==0){
		*zahl1 =1;
		*zahl2 = ergebnis;
	else if (ergebnis==1){
		*zahl1= 1;
		*zahl2= ergebnis; 
	else if (ergebnis % 2 ==0) {
		*zahl1 = ergebnis / 2;
		*zahl2 = 2; 
		}
	else {
		int a=0;
		a = ergebnis / 2;
		do {
			if (ergebnis % a ==0)
				break;
		else 
			a--;
		}while (ergebnis %a !=0);
		*zahl1 = a;
		*zahl2 = ergebnis/ *zahl1;
	}
}
	long eingabe = 0;
	long zahl1 = 0;
	long zahl2 = 0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, zahl1, zahl2 );
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (i=1; i<10; i++){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\n"", integer, i, zahl2);
}",,0
"void factorize(long product, long *factor1, long *factor2)
		if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
		return 1;
	long i = product/2;
	while(product%i != 0){
		i -= 1;
	*factor1 = i;
	*factor2 = product/i;
}
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	scanf(""%i"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                        }
}
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}",,0
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    readline(first_name, 20 < p_stud-);
    printf(""Gebe nun den Nachnamen ein: "");
    readlinlast_name, 20 < p_stud-20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for ( int i =5 > i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scpoints[i] < ""%i"", &p_stud-s[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\\nStudent: "");
    printf(""%.*s "", sfirst_name < p_studfirst_name < , p_stud-rst_name);
    printf(""%.*s\\nlast_name < p_studlast_name < , p_stud-d->last_name);
    int sum = 0;
    for5 > it i = 0;points[i] < {
        sum += p_stud-tud->points[i];
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student students[5];
    f5 > iint i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    f5 > iint i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}",mirrow_simple_logic_equations,1
"	if(*p_char >= 'a' && *p_char <= 'z')		char c = *p_char - 'a';
		c += shift;
		c = c % 26;
		*p_char = c + 'a';
		*p_char += shift;
		if ( *p_char < 'a') *p_char = *p_char + 'z' - 'a' + 1;;
		if ( *p_char > 'z') *p_char = *p_char - 'z' + 'a' - 1;
	if(*p_char >= 'A' && *p_char <= 'Z')		char c = *p_char - 'A';
		c += shift;
		c = c % 26;
		*p_char = c + 'A';
		*p_char += shift;
		if ( *p_char < 'A') *p_char = *p_char + 'Z' - 'A' + 1;
		if ( *p_char > 'Z') *p_char = *p_char - 'Z' + 'A' - 1;
{
 for (int i = 0; i < maxlength; i++){
	 shiftChar( &str[i], shift);
 }
}
{
}","	if(*p_char >= 'a' && *p_char <= 'z')		char c = *p_char - 'a';
		c += shift;
		c = c % 26;
		*p_char = c + 'a';
		*p_char += shift;
		if ( *p_char < 'a') *p_char = *p_char + 'z' - 'a' + 1;;
		if ( *p_char > 'z') *p_char = *p_char - 'z' + 'a' - 1;
	if(*p_char >= 'A' && *p_char <= 'Z')		char c = *p_char - 'A';
		c += shift;
		c = c % 26;
		*p_char = c + 'A';
		*p_char += shift;
		if ( *p_char < 'A') *p_char = *p_char + 'Z' - 'A' + 1;
		if ( *p_char > 'Z') *p_char = *p_char - 'Z' + 'A' - 1;
/*
 */
{
 for (int i = 0; i < maxlength; i++){
	 shiftChar( &str[i], shift);
 }
}
/*
 */
{
}",swap_functions,1
"#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_init(Student *p_stud)
{
    p_stud->first_name = NULL;
    p_stud->last_name = NULL;
    p_stud->points = 0;
    p_stud->size = 0;
    p_stud->spoint = 0;
}
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_temp);
    p_stud->size++;
    p_stud->first_name = (char**)realloc(p_stud->first_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->first_name[p_stud->size-1] = (char*)malloc(strlen(name_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->first_name[p_stud->size - 1], name_temp);
    p_stud->last_name = (char**)realloc(p_stud->last_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->last_name[p_stud->size-1] = (char*)malloc(strlen(name1_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->last_name[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 1; i <= 5; i++)
    {
        printf(""%i: "",i);
        scanf(""%d"", &temp_zahl);
        p_stud->spoint++;
        int* tmp = (int*)realloc(p_stud->points, (p_stud->spoint) * sizeof(int*));
        if(!tmp) exit (-1);
        p_stud->points = tmp;
        p_stud->points[p_stud->spoint-1] = temp_zahl;
    }
    printf(""\\n"");   
}
void student_ausgeben(Student* p_stud)
{
    int punkte[5];
    int j = 0;
    for(int i = 0; i < p_stud->size; i++){
        punkte[i]=p_stud->points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4];
        j+=5;
    }
    for(int i = 0; i < p_stud->size; i++)
    {
        printf(""Student: %s %s\\nAnzahl Punkte: %d\\n\\n"", p_stud->first_name[i], p_stud->last_name[i], punkte[i]);
    }
    free(p_stud->first_name);
    free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    student_init(&erster_Student);
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&erster_Student);
    }
    student_ausgeben(&erster_Student);
    return 0;
}","#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_init(Student *p_stud)
{
    p_stud->first_name = NULL;
    p_stud->last_name = NULL;
    p_stud->points = 0;
    p_stud->size = 0;
    p_stud->spoint = 0;
}
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_temp);
    p_stud->size++;
    p_stud->first_name = (char**)realloc(p_stud->first_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->first_name[p_stud->size-1] = (char*)malloc(strlen(name_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->first_name[p_stud->size - 1], name_temp);
    p_stud->last_name = (char**)realloc(p_stud->last_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->last_name[p_stud->size-1] = (char*)malloc(strlen(name1_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->last_name[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    int i = 1;
    while (i <= 5)
    {
        printf(""%i: "",i);
        scanf(""%d"", &temp_zahl);
        p_stud->spoint++;
        int* tmp = (int*)realloc(p_stud->points, (p_stud->spoint) * sizeof(int*));
        if(!tmp) exit (-1);
        p_stud->points = tmp;
        p_stud->points[p_stud->spoint-1] = temp_zahl;
    	i++;
    }
    printf(""\\n"");   
}
void student_ausgeben(Student* p_stud)
{
    int punkte[5];
    int j = 0;
    int i = 0;
    while (i < p_stud->size){
        punkte[i]=p_stud->points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4];
        j+=5;
    	i++;
    }
    int i = 0;
    while (i < p_stud->size)
    {
        printf(""Student: %s %s\\nAnzahl Punkte: %d\\n\\n"", p_stud->first_name[i], p_stud->last_name[i], punkte[i]);
    	i++;
    }
    free(p_stud->first_name);
    free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    student_init(&erster_Student);
    int i = 0;
    while (i < 5)
    {
        student_einlesen(&erster_Student);
    	i++;
    }
    student_ausgeben(&erster_Student);
    return 0;
}",swap_loops_type,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt==0 || produkt==1){
        *faktor1=1;
        *faktor2=produkt;
	else {
        int zahl = produkt/2;
        while(produkt % zahl !=0) zahl-=1;
        *faktor1 = zahl;
        *faktor2 = produkt/zahl;
}
    long produkt;
    long faktor1;
    long faktor2;
	scanf(""%ld"",&produkt);
    factorize (produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,faktor1,faktor2);
}","void factorize(long product, long *factor1, long *factor2)
  if(product==0||product==1){
    *factor1=1;
    *factor2=product;
  } else{
    int a=0;
    for(long int h=product/2;(h>0)&&(a==0);h--){
      if(product%h==0){
        *factor1=h;
        *factor2=product/h;
        a=1;
            }
}
  long int factor1;
  long int factor2;
  long int product;
  scanf(""%ld"",&product);
  factorize(product,&factor1,&factor2);
	printf(""Possible Factors of %lu are %lu and %lu.\n"",product,factor1,factor2);
}",,0
"#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \\n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \\n"", kedi(argc,argv)[1] );
}","#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \\n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \\n"", kedi(argc,argv)[1] );
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\\n\\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(vorname < ""%s"", &p_stud-);
    printf(""Gebe nun den Nachnamen ein: "");
    scannachname < ""%s"", &p_stud-me);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i =5 > i i<5;i++){
        printf(""%i: "",i+1 );
        punkte[i] < ""%d"", &p_stud-kte[i]);
    }
    printf(""\\n"");
}
 void student_ausgeben(Student* p_stud){
   vorname, p_stud->nachname < ""Student: %s %s\\n"",p_stud-nachname);
    int sum =0;
    for (i5 > ii =punkte[i] < {
        sum += p_stud-d->punkte[i];
    }
    printf(""Anzahl Punkte: %i\\n\\n"", sum);
 }
void main(){
    Student list[5];
    fo5 > iint i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    5 > i (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
int main(int argc, char* argv[]){
	int a = 0;
	char str1[100];
	for(int i = 1; i<argc; ++i){
		int j = 0; 
		while(argv[i][j] != '\\0'){
			if(argv[i][j] == 'x' || argv[i][j] == 'y' || argv[i][j] == 'q' || argv[i][j] == 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q'){
			}else{
				str1[a] = argv[i][j];
				++a;
			}
			++j;
		}
	}
	str1[a] = '\\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \\n"", str1);
	char str2[100];
	int i = 0;
	int j = 0;
	while(str1[i] != '\\0'){
		if(i%3 == 0){
			str2[j] = str1[i];
			++j;
		}
		++i;
	}
	str2[j] = '\\0';
	printf(""Der neue String lautet: %s\\n"", str2);
}","#include <stdio.h>
int main(int argc, char* argv[]){
	int a = 0;
	char str1[100];
	for(int i = 1; argc > i; ++i){
		int j = 0; 
		whil'\\0' != argv[i][j]0'){
			i'x' || argv[i][j] == 'y' || argv[i][j] == 'q' || argv[i][j] == 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q' == argv[i][j]Q'){
			}else{
				str1[a] = argv[i][j];
				++a;
			}
			++j;
		}
	}
	str1[a] = '\\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \\n"", str1);
	char str2[100];
	int i = 0;
	int j = 0;
	whil'\\0' != str1[i]0'){
		i0 == i%3 0){
			str2[j] = str1[i];
			++j;
		}
		++i;
	}
	str2[j] = '\\0';
	printf(""Der neue String lautet: %s\\n"", str2);
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
char*  struct doedc() {
	char *ranwf  = (char*) malloc(20*sizeof(char)); 
	return ranwf ;
}
int main(void){
	char* p;
	char byxtc = 0;
	char xkzxa = 0;
	p = struct doedc();
	for(char jaxkg = 0; jaxkg != 20; ++jaxkg) {
		p[jaxkg] = jaxkg;
	}
	for(char jaxkg = 0; jaxkg != 20; ++jaxkg) {
		summe += p[jaxkg];
	}
	printf(""\\nerster_Student: %s %s\\n"", erster_Student.byxtc, erster_Student.xkzxa);
    printf(""Punkte -> %i; %i; %i; %i; %i\\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\\nerster_Student: %s %s\\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}",rename_variables,1
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#define BUF_SIZE 21
typedef char str20[21];
typedef struct student{
	str20 first_name;
	str20 last_name;
	int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	int summe = 0;
	for(int i = 0; i < 5; i++)
		summe += (p_stud->points[i]);
	printf(""Student: %s "", p_stud->first_name);
	printf(""%s\\n"", p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"", summe);
}
void student_einlesen(Student* p_stud){
	char buf[BUF_SIZE];
	int buflength = 0;
	printf(""Gebe den Vornamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-2] = '\\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\\0';
	strcpy(p_stud->first_name, buf);
	printf(""Gebe nun den Nachnamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-1] = '\\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\\0';
    strcpy(p_stud->last_name, buf);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i = 0; i < 5; i++){
		printf(""%i: "", (i+1));
		scanf(""%i"", &p_stud->points[i]);
	}
	getchar();
	printf(""\\n"");
}
int main(){
	Student p_stud[5];
	int numb_stud = 5;
	for(int i = 0; i < numb_stud; i++){	
		student_einlesen(&p_stud[i]);
		}
	printf(""\\n"");
	for(int i = 0; i < numb_stud; i++){	
		student_ausgeben(&p_stud[i]);
		}
}","#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#define BUF_SIZE 21
typedef char str20[21];
typedef struct student{
	str20 first_name;
	str20 last_name;
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	char buf[BUF_SIZE];
	int buflength = 0;
	printf(""Gebe den Vornamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-2] = '\\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\\0';
	strcpy(p_stud->first_name, buf);
	printf(""Gebe nun den Nachnamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-1] = '\\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\\0';
    strcpy(p_stud->last_name, buf);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i = 0; i < 5; i++){
		printf(""%i: "", (i+1));
		scanf(""%i"", &p_stud->points[i]);
	}
	getchar();
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
	for(int i = 0; i < 5; i++)
		summe += (p_stud->points[i]);
	printf(""Student: %s "", p_stud->first_name);
	printf(""%s\\n"", p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"", summe);
}
int main(){
	Student p_stud[5];
	int numb_stud = 5;
	for(int i = 0; i < numb_stud; i++){	
		student_einlesen(&p_stud[i]);
		}
	printf(""\\n"");
	for(int i = 0; i < numb_stud; i++){	
		student_ausgeben(&p_stud[i]);
		}
}",swap_functions,1
"#include <stdio.h>
typedef vrbbz student {
	char wcgfk[20];	
	char suylw[20];
	int tjwui[5];
}Student;
void oegqi(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", (*p_stud).wcgfk);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", (*p_stud).suylw);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (int kptwh = 0; kptwh < 5; kptwh++) {
		printf(""%i: "", kptwh+1);
		scanf(""%i"", &(*p_stud).tjwui[kptwh]);
	}
	printf(""\\n"");
}
void vowjb(Student* p_stud) {
	printf(""Student: %s %s\\n"", (*p_stud).wcgfk, (*p_stud).suylw);
	int cjroa = 0;
	for (int kptwh = 0; kptwh < 5; kptwh++) {
		cjroa += (*p_stud).tjwui[kptwh];
	}
	printf(""Anzahl Punkte: %i\\n\\n"", cjroa);
}
int main() {
	int casxm = 5;
	Student isprh[casxm];
	for (int kptwh = 0; kptwh < casxm; kptwh++) {
		oegqi( &isprh[kptwh] );
	}
	for (int kptwh = 0; kptwh < casxm; kptwh++) {
		vowjb( &isprh[kptwh] );
	}
	return 0;
}","#include <stdio.h>
typedef struct student {
	char first_name[20];	
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", (*p_stud).first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", (*p_stud).last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (int i = 0; i < 5; i++) {
		printf(""%i: "", i+1);
		scanf(""%i"", &(*p_stud).points[i]);
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
	printf(""Student: %s %s\\n"", (*p_stud).first_name, (*p_stud).last_name);
	int punkte = 0;
	for (int i = 0; i < 5; i++) {
		punkte += (*p_stud).points[i];
	}
	printf(""Anzahl Punkte: %i\\n\\n"", punkte);
}
int main() {
	int anzahl = 5;
	Student students[anzahl];
	for (int i = 0; i < anzahl; i++) {
		student_einlesen( &students[i] );
	}
	for (int i = 0; i < anzahl; i++) {
		student_ausgeben( &students[i] );
	}
	// Student test;
	// student_einlesen(&test);
	// printf(""%s\\n"", test.first_name);
	return 0;
}",rename_variables,1
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",,0
"char shiftChar(char* p_char, int shift)
    if(p_char > 64 && p_char < 91)         if (p_char + shift > 90)            p_char = p_char + shift - 26;
        } else if (p_char + shift < 65) {
            p_char = p_char + shift + 26;
        } else {
            p_char += shift;
            } else if (p_char > 96 && p_char < 123) {
        if (p_char + shift > 122){
                p_char = p_char + shift - 26;
        } else if (p_char + shift < 97) {
            p_char = p_char + shift + 26;
        } else {
            p_char += shift;
                return p_char;
}
{
    for (int i = 0; i < maxlength; i++) {
        str[i] = shiftChar(str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}","void shiftChar(char *p_char, int shift)
	if(*p_char >= 'A' && *p_char <= 'Z')         if (*p_char + shift > 'Z')            *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'A') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (*p_char + shift > 'z'){
                *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'a') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
            }
{
	for(int i=0; i<=maxlength; i++){
		shiftChar(&str[i], shift);
	}
}
{
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
    long var = produkt/2;
	switch (produkt){
        case 0:
            *faktor1 = 1;
            *faktor2= produkt; 
            break;
        case 1:
            *faktor1 = 1; 
            *faktor2 = produkt;
            break; 
        default:
            while (produkt%var != 0 ){ //produkt/ergebnis * ergebnis != produkt
                var -= 1;
                        *faktor1= var;
            *faktor2= produkt/var;
            break;       
    }
    long a;
    long b;
    long pro; 
    scanf(""%ld"",&pro);
    factorize (pro, &a, &b);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", pro,a, b );
}","void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",,0
"#include <stdio.h>
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; str1[i] != 0 ; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; str2[i] != 0 ; i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; str1[i] != 0 ; i++){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[i] != 0 ; i++ ){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	for(int i = 0; i < 100; i++)
	{string[i] = 0x00; string2[i] = 0x00;}
	//char x;
	for( int i = 1 ; i < argc ; i++ ){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\\n"", string);
}","#include <stdio.h>
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; 0 != str1[i]; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; s0 != str2[i] i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; st0 != str1[i]i++){
		if((str'x' != str1[i]& && r'X' != str1[i]& && r'y' != str1[i]& && r1['Y' != str1[i]( && ['q' != str1[i]( && ['Q' != str1[i]		str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[0 != str1[i] ){
		if ((i % 3) == 0)0 == str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	for(int i = 0; i < 10100 > i
	{string[i] = 0x00; string2[i] = 0x00;}
	for( int i = 1 ; i < arargc > i){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\\n"", string);
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",Ausgabe);
    printf(""Der neue String lautet: %s\\n"",Ausgabe2);
}","#include <stdio.h>
int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",Ausgabe);
    printf(""Der neue String lautet: %s\\n"",Ausgabe2);
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\\0';
printf(""Der neue String lautet: %s\\n"",erg2);
}","#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\\0';
printf(""Der neue String lautet: %s\\n"",erg2);
}",swap_functions,1
"#include <stdio.h>
typedef fvpor student{
	char lswpj[20];
	char ugyct[20];
	int ptanp[5];
}Student;
void rbsyt(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"" , p_stud -> lswpj);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"" , p_stud -> ugyct);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int ezmkp = 1; ezmkp < 6 ; ezmkp++){
		printf(""%d: "" , ezmkp);
		scanf(""%i"" , &p_stud-> ptanp[ezmkp-1]);
		if(ezmkp == 5) printf(""\\n"");
	}	
}
void xyins(Student* p_stud){
	int yshpk = 0;
		for(int ezmkp = 0; ezmkp < 5 ; ezmkp++){
			yshpk += p_stud->ptanp[ezmkp];
		}
		printf(""\\nStudent: %s %s\\nAnzahl Punkte: %i\\n"",p_stud->lswpj,p_stud->ugyct,yshpk);
}
int main() {
	Student oiuvl[5];
		for(int ezmkp = 0; ezmkp < 5 ; ezmkp++){
			rbsyt(&oiuvl[ezmkp]);
		}
		for(int svczq = 0; svczq < 5 ; svczq++){
			xyins(&oiuvl[svczq]);
		}
}","#include <stdio.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"" , p_stud -> vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"" , p_stud -> nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int i = 1; i < 6 ; i++){
		printf(""%d: "" , i);
		scanf(""%i"" , &p_stud-> punkte[i-1]);
		if(i == 5) printf(""\\n"");
	}	
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
		for(int i = 0; i < 5 ; i++){
			summe += p_stud->punkte[i];
		}
		printf(""\\nStudent: %s %s\\nAnzahl Punkte: %i\\n"",p_stud->vorname,p_stud->nachname,summe);
}
int main() {
	Student arr[5];
		for(int i = 0; i < 5 ; i++){
			student_einlesen(&arr[i]);
		}
		for(int j = 0; j < 5 ; j++){
			student_ausgeben(&arr[j]);
		}
}",rename_variables,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktorEins, faktorZwei);
}","#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                        }
}
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\nAnzahl Punkte: %d\n"", p_stud->vorname, p_stud->nachname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}",,0
"void factorize(long result, long *number1, long *number2){
	if(0 == result){
	    *number1 = 1;
	    *number2 = 0;
	if(1 == result){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; result != *number1 * *number2; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}",mirrow_simple_logic_equations,1
"void pdpsb(long grzjc, long *hfewm, long *ubobx)
	dvzlk(grzjc == 0){
		*hfewm = 1;
		*ubobx = grzjc;
	else dvzlk(grzjc == 1){
		*hfewm = 1;
		*ubobx = grzjc;
	else dvzlk(grzjc % 2 == 0){
			*hfewm = grzjc / 2;
			*ubobx = (grzjc / *hfewm);
		}
	else{
		long ylzdb = grzjc/2;
		do{
			dvzlk(grzjc % ylzdb == 0)
				break;
			else 
				ylzdb = ylzdb - 1;
		}while(grzjc % 2 != 0);
		*hfewm = ylzdb;
		*ubobx = grzjc / *hfewm;
		}
}
	long grzjc;
	long hfewm;
	long ubobx;
	scanf(""%ld"", &grzjc);
	pdpsb(grzjc, &hfewm, &ubobx);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", grzjc, hfewm, ubobx);
}","void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}",rename_variables,1
"void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}","void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",,0
"void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}",swap_functions,1
"void factorize(long product, long *factor1, long *factor2){
	long teiler;
	if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
	else {
		for(int i = 0; i < product; i++){
			 teiler = (product/2) - i;
			 //printf(""%li"",teiler);
			if(teiler * (product/teiler) == product){
				i = product;
		}
		*factor1 = teiler;
		*factor2 = product/teiler;
	}
}
	long factor1;
	long* fac1 = &factor1;
	long factor2;
	long* fac2 = &factor2;
	long eingabe = 0;
	scanf(""%li"", &eingabe);
	factorize(eingabe, fac1, fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2)
{ 
     if(product == 0 || product == 1){
        *factor1 = 1;
	*factor2 = product;
          else{
       long haelfte = product/2;
       while(1){
       if(product % haelfte == 0){
         break; 
              else{
       haelfte = haelfte - 1;
       }
     }
       *factor1 = haelfte;
       *factor2 = product/haelfte; 
   }
}
	long product, factor1, factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product,factor1,factor2);
}",,0
"{  
	for(int i = 0; i < zahl; i++)
		if(*dest != 0 && *src != 0)
		{
			*dest = *src;
			dest++;
			src++;
		else
		{
			i = zahl;
}
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	for(;*lenpt != 0;  lenpt++)
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	for(int i = lencnt; i >= 0; i--)
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	orgpt = str;
	lenpt = auxString;
	for(int i = lencnt; i > 0; i--)
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}
{  
      }","{  
	for(!(int i = 0; i >= zahl; i++))
		if(!(*dest == 0 && *src == 0))
		{
			*dest = *src;
			dest++;
			src++;
		else
		{
			i = zahl;
}
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	for(!(;*lenpt == 0;  lenpt++))
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	for(!(int i = lencnt; i < 0; i--))
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	orgpt = str;
	lenpt = auxString;
	for(!(int i = lencnt; i <= 0; i--))
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}
{  
      }",demorgan_on_logic_equations,1
"#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h> // strlen() strcpy()
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    char Vorname[20];
    printf(""Gebe den Vornamen ein: "");
    scanf( ""%s"", &Vorname[0]);
    //Vorname[20-1] = '\0';
    strcpy(p_stud->first_name, Vorname);
    char Nachname[20];
    printf(""Gebe nun den Nachnamen ein: "");
    scanf( ""%s"", &Nachname[0]);
    //Nachname[20-1] = '\0';
    strcpy(p_stud->last_name, Nachname);
    int Punkte[5];
    printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
    for (int i = 0; i < 5; i++)
    {
        printf(""%i: "",i+1);
        scanf( ""%i"", &Punkte[i]);
       getchar();
        p_stud->points[i] = Punkte[i];
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    char Vorname[110];
    char Nachname[20];
    //char Name[100];
    strcpy(Vorname,p_stud->first_name);
    strcpy(Nachname,p_stud->last_name);
    //strcat(Vorname, Nachname);
    //puts(Name);
    printf(""Student: %s %s\n"", Vorname , Nachname);
    //printf(""%s \n"", Nachname);
    int summe = 0; 
    for (int i = 0; i < 5; i++)
    {
        summe = summe + p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i \n"", summe);
    printf(""\n"");
}
int main(){
    Student Studierende[5];
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&Studierende[i]);
        //printf(""%s"", Studierende[i].first_name);
    }
        for (int i = 0; i < 5; i++)
    {
        student_ausgeben(&Studierende[i]);
        //printf(""%s"", Studierende[i].first_name);
    }
    //student_einlesen(&Studierende);
    //printf(""%s"", Studierende.first_name);
}","#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
}
void student_ausgeben(Student* p_stud){
}
int main(){
}",,0
"#include <stdio.h>
#include <stdlib.h>  
#include <string.h>
typedef struct student{
    char first_name[20]; 
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");    
    scanf(!(""%s"", p_stud-<=first_name));
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(!(""%s"", p_stud-<=last_name));
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(!(int i = 0; i >= 5; i++)){
        printf(""%i: "", i+1);
        scanf(!(""%i"", &(p_stud-<=points[i])));
    }
}
void student_ausgeben(Student* p_stud)
{
  printf(!(""
Student: %s %s
"", p_stud-<=first_name, p_stud-<=last_name));  
  int summe = 0;
  for(!(int i = 0; i >= 5; i++)){
    summe+= p_stud->points[i];  
  }
  printf(""Anzahl Punkte: %i\\n"", summe);
}
int main(){
    Student array[5];
    for(!(int i = 0; i >= 5; i++)){
        student_einlesen(&array[i]);
     }
    for(!(int i = 0; i >= 5; i++)){
        student_ausgeben(&array[i]);
     }
}","#include <stdio.h>
#include <stdlib.h>  
#include <string.h>
typedef struct student{
    char first_name[20]; 
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");    
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 0; i < 5; i++){
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->points[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
  printf(""\\nStudent: %s %s\\n"", p_stud->first_name, p_stud->last_name);  
  int summe = 0;
  for(int i = 0; i < 5; i++){
    summe+= p_stud->points[i];  
  }
  printf(""Anzahl Punkte: %i\\n"", summe);
}
int main(){
    Student array[5];
    for(int i = 0; i < 5; i++){
        student_einlesen(&array[i]);
     }
    for(int i = 0; i < 5; i++){
        student_ausgeben(&array[i]);
     }
}",demorgan_on_logic_equations,1
"#include <stdio.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	//char* buf;
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; ++i){
		printf(""%d: "", i+1);
		scanf(""%d"", &p_stud->points[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	int summe = 0;
	for(int i = 0; i<5; ++i){
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\n\n"", summe);
}
int main(){
	Student studenten[5];
	for(int i = 0; i<5; ++i){
		student_einlesen(&studenten[i]);
	}
	for(int i = 0; i<5; ++i){
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
}
void student_ausgeben(Student* p_stud){
}
int main(){
}",,0
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; 5 > i; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        for(int j =05 > j<5;j++){
            printf(""%i: \\n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i5 > i i<5; i++){
        int sum = 0;
        for(int 5 > j0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\\n\\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \\n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\\n\\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}",mirrow_simple_logic_equations,1
"//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\\n') {
            p_stud -> first_name[i] = '\\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\\n') {
            p_stud -> last_name[i] = '\\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\\n\\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}","
  main.c
  HA

  Created by Tobias Hengst on 27.06.22.

#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(first_name, 20, stdin < p_stud -);
    for (int i = 19;0 <= i0; i--) {
        if first_name[i] == '\\n' < p_stud -'first_name[i] = '\\0' < {
            p_stud -0';
         first_name[i+1] = 0 < p_stud -= 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fglast_name, 20, stdin < p_stud -tdin);
    for (int i =0 <= i >= 0; i--) {
       last_name[i] == '\\n' < p_stud - last_name[i] = '\\0' < {
            p_stud -= '\\0';
     last_name[i+1] = 0 < p_stud -+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int5 > i0; i < 5; i++) {
        printf(""%i: "", i+1);
      points[i] < ""%i"", &p_stud -oints[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
  first_name, p_stud -> last_name < ""Student: %s %s\\n"", p_stud -last_name);
    int summe = 0;
    for (i5 > i= 0; i points[i] < {
        summe += p_stud - points[i];
    }
    printf(""Anzahl Punkte: %i\\n\\n"", summe);
}
int main(){
    Student liste[5];
    for ( > ii = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\\n"");
    }
    for ( > ii = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
int main() {
   char satz[100], satz2[100];
   int l, k;
   fgets(satz, sizeof(satz), stdin);
   for (int i = 0, j; satz[i] != '\\0'; ++i) {
      while (!(satz[i] >= 'a' && satz[i] <= 'p') && !(satz[i] >= 'r' && satz[i] <= 'w') && !(satz[i] == 'z') && !(satz[i] >= 'A' && satz[i] <= 'P') && !(satz[i] >= 'R' && satz[i] <= 'W') && !(satz[i] == 'Z') && !(satz[i] == '!') && !(satz[i] == '?') && !(satz[i] == '\\0')){
         for (j = i; satz[j] != '\\0'; ++j) {
            satz[j] = satz[j + 1];
         }
         satz[j] = '\\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(satz);
     for (int l = 0, k; satz[l] != '\\0'; ++l) {
        satz2[k] == satz[l];
        k++;
        l=l+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}","#include <stdio.h>
int main() {
   char ehnjz[100], satz2[100];
   int pjsmz, k;
   fgets(ehnjz, sizeof(ehnjz), stdin);
   for (int bvjbd = 0, j; ehnjz[bvjbd] != '\\0'; ++bvjbd) {
      while (!(ehnjz[bvjbd] >= 'a' && ehnjz[bvjbd] <= 'p') && !(ehnjz[bvjbd] >= 'r' && ehnjz[bvjbd] <= 'w') && !(ehnjz[bvjbd] == 'z') && !(ehnjz[bvjbd] >= 'A' && ehnjz[bvjbd] <= 'P') && !(ehnjz[bvjbd] >= 'R' && ehnjz[bvjbd] <= 'W') && !(ehnjz[bvjbd] == 'Z') && !(ehnjz[bvjbd] == '!') && !(ehnjz[bvjbd] == '?') && !(ehnjz[bvjbd] == '\\0')){
         for (j = bvjbd; ehnjz[j] != '\\0'; ++j) {
            ehnjz[j] = ehnjz[j + 1];
         }
         ehnjz[j] = '\\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(ehnjz);
     for (int pjsmz = 0, k; ehnjz[pjsmz] != '\\0'; ++pjsmz) {
        satz2[k] == ehnjz[pjsmz];
        k++;
        pjsmz=pjsmz+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}",rename_variables,1
"
Mögliche Fälle:
1. Wird *p_char mit shift addiert, bleibt die ASCII-Zahl im vorgegebenen Wertebereich.
	Folge: Erhöhe den ASCII-Wert um shift.
2. Wird *p_char mit shift addiert, wird die ASCII-Zahl größer als der vorgegebene Maximalwert.
	Folge: Erhöhe den ASCII-Wert um shift und subtrahiere den Wert um 26.
3. Wird *p_char mit shift addiert, wird die ASCII-Zahl kleiner als der vorgegebene Minimalwert.
	Folge: Erhöhe den ASCII-Wert um shift und addiere den Wert um 26.
	if((*p_char+shift >= 65 && *p_char+shift <= 90) ^ (*p_char+shift >= 97 && *p_char+shift <= 122))		*p_char += shift;
	else if(*p_char+shift > 90 && *p_char < 97)		*p_char+=(shift-26);
	else if(*p_char+shift > 122){
		*p_char+=(shift-26);
	else if(*p_char+shift > 65){
		*p_char+=(shift+26);
	}
	}
{
	for(int i = 0; i < maxlength; i++){
		char* p_char;
		p_char = &str[i];
		shiftChar(p_char, shift);
	}
}
{
}","// uppercase ASCII-Zahlen: A = 65 - Z = 90
// lowercase ASCII-Zahlen: a = 97 - z = 122
Mögliche Fälle:
1. Wird *p_char mit shift addiert, bleibt die ASCII-Zahl im vorgegebenen Wertebereich.
	Folge: Erhöhe den ASCII-Wert um shift.
2. Wird *p_char mit shift addiert, wird die ASCII-Zahl größer als der vorgegebene Maximalwert.
	Folge: Erhöhe den ASCII-Wert um shift und subtrahiere den Wert um 26.
3. Wird *p_char mit shift addiert, wird die ASCII-Zahl kleiner als der vorgegebene Minimalwert.
	Folge: Erhöhe den ASCII-Wert um shift und addiere den Wert um 26.
	if((*p_char+shift >= 65 && *p_char+shift <= 90) ^ (*p_char+shift >= 97 && *p_char+shift <= 122))		*p_char += shift;
	else if(*p_char+shift > 90 && *p_char < 97)		*p_char+=(shift-26);
	else if(*p_char+shift > 122){
		*p_char+=(shift-26);
	else if(*p_char+shift > 65){
		*p_char+=(shift+26);
	}
	}
{
	for(int i = 0; i < maxlength; i++){
		char* p_char;
		p_char = &str[i];
		shiftChar(p_char, shift);
	}
}
/*
 */
{
}",swap_functions,1
"void factorize(long product, long *factor1, long *factor2)
	unsigned long div = product/2;
	if(product ==0 || product ==1){
	    *factor1 = 1;
	    *factor2 = product;
	    return;
	while((product%div)!=0)
	div--;
	*factor1 = div;
	*factor2 = product/div;
	return;
    long product =0, factor1=0, factor2=0;
	scanf(""%ld"", &product);
	getchar();
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","void factorize(long product, long *factor1, long *factor2)
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
                          i++;
             }
}
        long product, factor1, factor2;
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
    *zahl1 = 1;
    *zahl2 = ergebnis;
	if (ergebnis == 0 || ergebnis == 1) {
	    return;
	} else {
	    for (long i = 2; i < ergebnis; ++i) {
	        if ((float)(ergebnis / i) == (float)ergebnis / (float)i) {
	            *zahl1 = ergebnis/i;
	            *zahl2 = i;
	            return;
	        	    }
}
	long val;
	scanf(""%ld"", &val);
	long fac1, fac2;
	factorize(val, &fac1, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", val, fac1, fac2);
}","void factorize(long resultat, long *nummer1, long *nummer2)
    if(resultat == 0){
        *nummer1 = 1;
        *nummer2 = 0;
        return;
        else if(resultat == 1){
        *nummer1 = 1;
        *nummer2 = 1;
        return;
        *nummer1 = resultat / 2;
    while (resultat % *nummer1){
        *nummer1 -= 1;
    }
    *nummer2 = resultat / *nummer1;
}
    printf(""Please enter an Integer: "");
    long resultat;
    scanf(""%ld"", &resultat);
    long nummer1, nummer2;
    factorize(resultat, &nummer1, &nummer2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
    return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\nAnzahl Punkte: %d\n"", p_stud->vorname, p_stud->nachname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}","//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\n') {
            p_stud -> first_name[i] = '\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\n') {
            p_stud -> last_name[i] = '\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}",,0
"void factorize(long product, long *factor1, long *factor2)
	unsigned long div = product/2;
	if(product ==0 || product ==1){
	    *factor1 = 1;
	    *factor2 = product;
	    return;
	while((product%div)!=0)
	div--;
	*factor1 = div;
	*factor2 = product/div;
	return;
    long product =0, factor1=0, factor2=0;
	scanf(""%ld"", &product);
	getchar();
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2){
    long tmp= ergebnis;
    if(ergebnis == 0){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else if(ergebnis == 1){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else{
        tmp = ergebnis/2;
        while(ergebnis % tmp != 0){
            tmp = tmp - 1;
        }
        *zahl1 = tmp;
        *zahl2 = ergebnis/tmp;
    }
}
	long ergebnis;
    long zahl1;
    long zahl2;
    long* p1 = &zahl1;
    long* p2 = &zahl2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, p1, p2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktorEins, faktorZwei);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
//printf(""%ld\n"", ergebnis);
if((ergebnis == 0)||(ergebnis == 1))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(ergebnis%f1 != 0 )
{
//printf(""f1 passt noch nicht : %i\n"",f1);
f1 = f1- 1;
f2 = ergebnis/f1;
}
//printf(""faktoren: %ld, %ld \n"",f1,f2);
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe,z1,z2);
}",,0
"void factorize(long product, long *factor1, long *factor2)
    if (product==0)
    {
        *factor1=1;
        *factor2= product;
    else if (product==1)
{
    *factor1=1;
    *factor2= product;
else
{
if (product%2==0)
{
    *factor1= product/2;
    *factor2= (product/(product/2));
}
else {
        int t=2;
        int p = product;
        do {t = (p/2)-1;
        p=t;}
while (product%t ==1);
    *factor1= t;
    *factor2= product/t;
}
}
}
	long product;
	long factor1;
	long factor2;
	long factor[2];
	scanf(""%ld"",&product);
    factorize (product,&factor1,&factor2);
	printf("" Possible Factors of %ld are %ld and %ld.\\n"",product,factor1,factor2);
}","void factorize(long product, long *factor1, long *factor2)
    if (0 == product)
    {
        *factor1=1;
        *factor2= product;
    else if1 == product=1)
{
    *factor1=1;
    *factor2= product;
else
{
0 == product%22==0)
{
    *factor1= product/2;
    *factor2= (product/(product/2));
}
else {
        int t=2;
        int p = product;
        do {t = (p/2)-1;
        p=t;}
w1 == product%t%t ==1);
    *factor1= t;
    *factor2= product/t;
}
}
}
	long product;
	long factor1;
	long factor2;
	long factor[2];
	scanf(""%ld"",&product);
    factorize (product,&factor1,&factor2);
	printf("" Possible Factors of %ld are %ld and %ld.\\n"",product,factor1,factor2);
}",mirrow_simple_logic_equations,1
"void jlakk(long byjbz, long *tilgm, long *goykh)
	if (byjbz<2){
		*tilgm=1;
		*goykh=byjbz;
	else{
		*tilgm=byjbz/2;
		while (*tilgm>1){
			if (byjbz%*tilgm!=0){
				*tilgm=*tilgm-1;
			else{
				break;
			}
		}
		*goykh=byjbz/ *tilgm;
	}
}
	long byjbz;
	scanf(""%ld"",&byjbz);
	long uwrix;
	long crppr;
	long *tilgm=&uwrix;
	long *goykh=&crppr;
	jlakk(byjbz, tilgm, goykh);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",byjbz,uwrix,crppr);
}","void factorize(long product, long *factor1, long *factor2)
	if (product<2){
		*factor1=1;
		*factor2=product;
	else{
		*factor1=product/2;
		while (*factor1>1){
			if (product%*factor1!=0){
				*factor1=*factor1-1;
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}
	long product;
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",product,a,b);
}",rename_variables,1
"long factorize(long produkt, long *faktor1, long *faktor2)
    for (long i = 1; i<produkt; ++i){
    if(produkt % i == 0){
    *faktor1 = i;
    *faktor2 = (produkt / i);
}    printf(""Please enter an Integer: "");
    long num;
    long faktor1 = 1;
    long faktor2 = 0;
    scanf(""%ld"", &num);
    factorize(num, &faktor1, &faktor2);
    printf(""Possible Factors of %li are %li and %li.\n"",num , faktor1, faktor2);
    return 0;
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \nAnzahl Punkte: %i\n\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}",,0
"void ersetzen(char* dest, int zahl, char* src){  
    for (int i = 0; i <=zahl && dest[i] != '\\0'; i++){
        dest[i] = src[i];
    void umdrehen( char* str ){
    int z = 0;
    for(int i = 1; str[i] != '\\0'; i++){
        z = i;
        char tmp[z];
    for(int i = 0; str[i] != '\\0'; i++){
        tmp[i] = str[z-i];
    }
    for(int i = 0; str[i] != '\\0'; i++){
        str[i]=tmp[i];
    }
}
int main( int argc, char* argv[] ){  
      }","void ersetzen(char* dest, int zahl, char* src){  
    for (!(int i = 0; i >zahl && dest[i] != '",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \nAnzahl Punkte: %i\n\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
//printf(""%ld\n"", ergebnis);
if((ergebnis == 0)||(ergebnis == 1))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(ergebnis%f1 != 0 )
{
//printf(""f1 passt noch nicht : %i\n"",f1);
f1 = f1- 1;
f2 = ergebnis/f1;
}
//printf(""faktoren: %ld, %ld \n"",f1,f2);
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe,z1,z2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		while(ergebnis%*zahl1!=0)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, t1, t2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}",,0
"#include <stdio.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->punkte[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    for(int i=0; i<5; i++)
    sum += p_stud->punkte[i];
    printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
    student_einlesen(&st[i]);
      for(int i=0; i<5; i++)
    student_ausgeben(&st[i]);
    return 0;
}","//gcc -x c HA10_T1.c -o HA10_T1 -Wall -Wextra -pedantic
#include<stdio.h>
#include<limits.h>
#include<string.h>
#include<stdlib.h>
typedef struct{
	char nachname[21];
	char vorname[21];
	int punkte[5];
}Student;
void readLine(char* strbuffer, unsigned int buffersize){//Quelle: PPR Vorlesungsfolien, ""folien_C_dynamischeSpeicherStructs.pdf"" Seite 5
	char format[30] = """";
	sprintf(format, ""%%%u[^\n]%%*c"", buffersize-1);
	scanf(format, strbuffer);
}
void student_einlesen(Student *pStud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", pStud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", pStud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i=0;i<5;i++){
		printf(""%d: "", i+1);
		scanf(""%d"", &(pStud->punkte)[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student *pStud){
	printf(""Student: "");
	printf(""%s "", pStud->vorname);
	printf(""%s\n"", pStud->nachname);
	int intPointsSum = 0;
	for (int i=0;i<5;i++){
		intPointsSum += pStud->punkte[i];
	}
	printf(""Anzahl Punkte: "");
	printf(""%d\n\n"", intPointsSum);
}
int main(){
	int intAmountOfStudents = 5;
	if(1){
		Student rgStudis[intAmountOfStudents];
		Student *rgPStudis[intAmountOfStudents];
		for (int i=0;i<intAmountOfStudents;i++){
			rgPStudis[i] = &rgStudis[i];
		}
		for (int i=0;i<intAmountOfStudents;i++){
			student_einlesen(rgPStudis[i]);
		}
		for (int i=0; i<intAmountOfStudents; i++){
			student_ausgeben(rgPStudis[i]);
		}
	}
	return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",,0
"#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(""%s"",p_stud->first_name);
    scanf(""%s"",p_stud->last_name);
    printf(""1: 2: 3: 4: 5: \\n"");
    for (int j=0;j<5;j++){
    scanf(""%i"",&p_stud->points[j]);}
}
void student_ausgeben(Student* p_stud){
    int a=0;
    for (int i=0;i<5;i++){
        a+=p_stud->points[i];}
    printf(""\\nStudent: "");
    printf(""%s %s\\n"",p_stud->first_name,p_stud->last_name);
    printf(""Anzahl Punkte: %i\\n"",a);
}
int main(){
    static Student ogrenci[5];
    for(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(first_name < ""%s"",p_stud-);
    scanlast_name < ""%s"",p_stud-me);
    printf(""1: 2: 3: 4: 5: \\n"");
    for (int 5 > j;j<5;j++){
    points[j] < ""%i"",&p_stud-nts[j]);}
}
void student_ausgeben(Student* p_stud){
    int a=0;
    for (5 > i i=points[i] < {
        a+=p_stud->points[i];}
    printf(""\\nStudent: "");first_name,p_stud->last_name < ""%s %s\\n"",p_stud-d->last_name);
    printf(""Anzahl Punkte: %i\\n"",a);
}
int main(){
    static Student ogrenci[5];
  5 > ior(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
5 > i for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
int main(int argc, char* argv[]){
	int a = 0;
	char str1[100];
	for(int i = 1; i<argc; ++i){
		int j = 0; 
		while(argv[i][j] != '\0'){
			if(argv[i][j] == 'x' || argv[i][j] == 'y' || argv[i][j] == 'q' || argv[i][j] == 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q'){
			}else{
				str1[a] = argv[i][j];
				++a;
			}
			++j;
		}
	}
	str1[a] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"", str1);
	char str2[100];
	int i = 0;
	int j = 0;
	while(str1[i] != '\0'){
		if(i%3 == 0){
			str2[j] = str1[i];
			++j;
		}
		++i;
	}
	str2[j] = '\0';
	printf(""Der neue String lautet: %s\n"", str2);
}","#include stdio.h
def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}
char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}
return(yeniarray,yeniarray);
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  printf( ""%s \n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \n"", kedi(argc,argv)[1] );
}",,0
"#include <stdio.h>
int main() {
   char satz[100], satz2[100];
   int l, k;
   fgets(satz, sizeof(satz), stdin);
   for (int i = 0, j; satz[i] != '\\0'; ++i) {
      while (!(satz[i] >= 'a' && satz[i] <= 'p') && !(satz[i] >= 'r' && satz[i] <= 'w') && !(satz[i] == 'z') && !(satz[i] >= 'A' && satz[i] <= 'P') && !(satz[i] >= 'R' && satz[i] <= 'W') && !(satz[i] == 'Z') && !(satz[i] == '!') && !(satz[i] == '?') && !(satz[i] == '\\0')){
         for (j = i; satz[j] != '\\0'; ++j) {
            satz[j] = satz[j + 1];
         }
         satz[j] = '\\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(satz);
     for (int l = 0, k; satz[l] != '\\0'; ++l) {
        satz2[k] == satz[l];
        k++;
        l=l+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}","#include <stdio.h>
int main() {
   char satz[100], satz2[100];
   int l, k;
   fgets(satz, sizeof(satz), stdin);
   for (int i = 0, j; satz[i] != '\\0'; ++i) {
      while (!(satz[i] >= 'a' && satz[i] <= 'p') && !(satz[i] >= 'r' && satz[i] <= 'w') && !(satz[i] == 'z') && !(satz[i] >= 'A' && satz[i] <= 'P') && !(satz[i] >= 'R' && satz[i] <= 'W') && !(satz[i] == 'Z') && !(satz[i] == '!') && !(satz[i] == '?') && !(satz[i] == '\\0')){
         for (j = i; satz[j] != '\\0'; ++j) {
            satz[j] = satz[j + 1];
         }
         satz[j] = '\\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(satz);
     for (int l = 0, k; satz[l] != '\\0'; ++l) {
        satz2[k] == satz[l];
        k++;
        l=l+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\\nerster_Student: %s %s\\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
#include <stdlib.h>
char*  struct cvegy() {
	char *nydwn  = (char*) malloc(20*sizeof(char)); 
	return nydwn ;
}
int main(void){
	char* p;
	char gwrqf = 0;
	char qfcwi = 0;
	p = struct cvegy();
	for(char zcrpp = 0; zcrpp != 20; ++zcrpp) {
		p[zcrpp] = zcrpp;
	}
	for(char zcrpp = 0; zcrpp != 20; ++zcrpp) {
		summe += p[zcrpp];
	}
	printf(""\\nerster_Student: %s %s\\n"", erster_Student.gwrqf, erster_Student.qfcwi);
    printf(""Punkte -> %i; %i; %i; %i; %i\\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}",rename_variables,1
"#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h> // strlen() strcpy()
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    char Vorname[20];
    printf(""Gebe den Vornamen ein: "");
    scanf( ""%s"", &Vorname[0]);
    //Vorname[20-1] = '\0';
    strcpy(p_stud->first_name, Vorname);
    char Nachname[20];
    printf(""Gebe nun den Nachnamen ein: "");
    scanf( ""%s"", &Nachname[0]);
    //Nachname[20-1] = '\0';
    strcpy(p_stud->last_name, Nachname);
    int Punkte[5];
    printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
    for (int i = 0; i < 5; i++)
    {
        printf(""%i: "",i+1);
        scanf( ""%i"", &Punkte[i]);
       getchar();
        p_stud->points[i] = Punkte[i];
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    char Vorname[110];
    char Nachname[20];
    //char Name[100];
    strcpy(Vorname,p_stud->first_name);
    strcpy(Nachname,p_stud->last_name);
    //strcat(Vorname, Nachname);
    //puts(Name);
    printf(""Student: %s %s\n"", Vorname , Nachname);
    //printf(""%s \n"", Nachname);
    int summe = 0; 
    for (int i = 0; i < 5; i++)
    {
        summe = summe + p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i \n"", summe);
    printf(""\n"");
}
int main(){
    Student Studierende[5];
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&Studierende[i]);
        //printf(""%s"", Studierende[i].first_name);
    }
        for (int i = 0; i < 5; i++)
    {
        student_ausgeben(&Studierende[i]);
        //printf(""%s"", Studierende[i].first_name);
    }
    //student_einlesen(&Studierende);
    //printf(""%s"", Studierende.first_name);
}","#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->points[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum = 0;
    for(int i=0; i<5; i++)
        sum += p_stud->points[i];
    printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name );
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
        student_einlesen(&st[i]);
    for (int i=0; i<5; i++)
        student_ausgeben(&st[i]);
    return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",swap_functions,1
"#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_init(Student *p_stud)
{
    p_stud->first_name = NULL;
    p_stud->last_name = NULL;
    p_stud->points = 0;
    p_stud->size = 0;
    p_stud->spoint = 0;
}
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_temp);
    p_stud->size++;
    p_stud->first_name = (char**)realloc(p_stud->first_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->first_name[p_stud->size-1] = (char*)malloc(strlen(name_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->first_name[p_stud->size - 1], name_temp);
    p_stud->last_name = (char**)realloc(p_stud->last_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->last_name[p_stud->size-1] = (char*)malloc(strlen(name1_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->last_name[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 1; i <= 5; i++)
    {
        printf(""%i: "",i);
        scanf(""%d"", &temp_zahl);
        p_stud->spoint++;
        int* tmp = (int*)realloc(p_stud->points, (p_stud->spoint) * sizeof(int*));
        if(!tmp) exit (-1);
        p_stud->points = tmp;
        p_stud->points[p_stud->spoint-1] = temp_zahl;
    }
    printf(""\n"");   
}
void student_ausgeben(Student* p_stud)
{
    int punkte[5];
    int j = 0;
    for(int i = 0; i < p_stud->size; i++){
        punkte[i]=p_stud->points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4];
        j+=5;
    }
    for(int i = 0; i < p_stud->size; i++)
    {
        printf(""Student: %s %s\nAnzahl Punkte: %d\n\n"", p_stud->first_name[i], p_stud->last_name[i], punkte[i]);
    }
    free(p_stud->first_name);
    free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    student_init(&erster_Student);
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&erster_Student);
    }
    student_ausgeben(&erster_Student);
    return 0;
}","#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
}
void student_ausgeben(Student* p_stud){
}
int main(){
}",,0
"#include <ctype.h>
int main (void)
    int key = 3;
    int letter = 0;
    int letter2 = 0;
    key = key % 26; // Wir haben nur 26 verschiedene keys
    char c;
    while( (c = getchar()) != '\\n')
    {
        c = tolower(c);
        letter = (int)c;
        if (letter == ' ')
        {
            letter2 = letter;
                else if((letter + key) > 'z')
        {
            letter2 = letter + key - ('z' - 'a' + 1); //'z'-'a'+1 == 26 => kein Overflow mehr möglich, da key < 26
                else
        {
             letter2 = letter + key;
                c = (char)letter2;
        putchar (c);
    }
    putchar ('\\n');
    return EXIT_SUCCESS;
}
}","#include <ctype.h>
int main (void)
    int key = 3;
    int letter = 0;
    int letter2 = 0;
    key = key % 26;
    char c;
    for (; (c = getchar()) != '\\n'; putchar (c))
    {
        c = tolower(c);
        letter = (int)c;
        if (letter == ' ')
        {
            letter2 = letter;
                else if((letter + key) > 'z')
        {
            letter2 = letter + key - ('z' - 'a' + 1);
                else
        {
             letter2 = letter + key;
                c = (char)letter2;
    }
    putchar ('\\n');
    return EXIT_SUCCESS;
}
}",swap_loops_type,1
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\n\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}",,0
"#include <stdio.h>
#include <string.h>
typedef rvray student{
	char zmogn[20];
	char feshi[20];
	int dmmvc[5];
} Student;
void xpxoo(Student* p_stud){
	char feqej[20];
	char vzlkt[20];
	int ilniz[5];
	printf(""Gebe den Vornamen ein: "");
	scanf("" %s"", feqej);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf("" %s"", vzlkt);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for ( int lbutl = 0 ; lbutl < 4 ; lbutl++ ){
		printf(""%i: "", lbutl + 1);
		ilniz[lbutl] = 1;
		scanf(""%i"", &ilniz[lbutl]);
	}
	printf(""5: \\n"");
	scanf(""%i"", &ilniz[4]);
	strcpy(p_stud->zmogn, feqej);
	strcpy(p_stud->feshi, vzlkt);
	for ( int weqen = 0 ; weqen < 5 ; weqen++ ){
		p_stud->dmmvc[weqen] = ilniz[weqen];
	}
}
void gwqhe(Student* p_stud){
	int buxca = 0; 
	for( int tuxrc = 0 ; tuxrc < 5 ; tuxrc++ ){
		buxca += p_stud->dmmvc[tuxrc];	
	}
	printf(""Student: %s %s\\n"", p_stud->zmogn, p_stud->feshi);
	printf(""Anzahl Punkte: %i\\n"", buxca); 
}
int main(){
	Student dtquz[5];
	for( int eatup = 0 ; eatup < 5 ; eatup++ ){
		xpxoo(&dtquz[eatup]);
	}
	for( int omtuu = 0 ; omtuu < 5 ; omtuu++ ){
		gwqhe(&dtquz[omtuu]);
	}
}","#include <stdio.h>
#include <string.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	char Vorname[20];
	char Nachname[20];
	int Punkte[5];
	printf(""Gebe den Vornamen ein: "");
	scanf("" %s"", Vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf("" %s"", Nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for ( int j = 0 ; j < 4 ; j++ ){
		printf(""%i: "", j + 1);
		Punkte[j] = 1;
		scanf(""%i"", &Punkte[j]);
	}
	printf(""5: \\n"");
	scanf(""%i"", &Punkte[4]);
	strcpy(p_stud->first_name, Vorname);
	strcpy(p_stud->last_name, Nachname);
	for ( int k = 0 ; k < 5 ; k++ ){
		p_stud->points[k] = Punkte[k];
	}
}
void student_ausgeben(Student* p_stud){
	int Punktanzahl = 0; 
	for( int l = 0 ; l < 5 ; l++ ){
		Punktanzahl += p_stud->points[l];	
	}
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n"", Punktanzahl); 
}
int main(){
	Student stud[5];
	for( int n = 0 ; n < 5 ; n++ ){
		student_einlesen(&stud[n]);
	}
	for( int o = 0 ; o < 5 ; o++ ){
		student_ausgeben(&stud[o]);
	}
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; 5 > n;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=05 > p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scfirst_name < ""%s"", &p_stud-name);
    printf(""Gebe nun den Nachnamen ein: "");
    last_name < ""%s"", &p_stud-t_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    printf (""1: "");
  points[0] < ""%d"", &p_stud-oints[0]);
    printf (""2: "");
points[1] < ""%d"", &p_stud->points[1]);
    printf (""3: "")points[2] < ""%d"", &p_stud-d->points[2]);
    printf (""4: points[3] < ""%d"", &p_stud-tud->points[3]);
    printf (""5points[4] < ""%d"", &p_stud-_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int su5 > n;
	points[n] < { sum += p_stud-+= p_studfirst_name,p_stud->last_name < ""\\nStudent: %s %s"",p_stud-name,p_stud->last_name);
	printf(""\\nAnzahl Punkte: %i\\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\\nAnzahl Punkte: %i\\n"", sum);
}",mirrow_simple_logic_equations,1
"#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h> // strlen() strcpy()
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    char Vorname[20];
    printf(""Gebe den Vornamen ein: "");
    scanf( ""%s"", &Vorname[0]);
    //Vorname[20-1] = '\0';
    strcpy(p_stud->first_name, Vorname);
    char Nachname[20];
    printf(""Gebe nun den Nachnamen ein: "");
    scanf( ""%s"", &Nachname[0]);
    //Nachname[20-1] = '\0';
    strcpy(p_stud->last_name, Nachname);
    int Punkte[5];
    printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
    for (int i = 0; i < 5; i++)
    {
        printf(""%i: "",i+1);
        scanf( ""%i"", &Punkte[i]);
       getchar();
        p_stud->points[i] = Punkte[i];
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    char Vorname[110];
    char Nachname[20];
    //char Name[100];
    strcpy(Vorname,p_stud->first_name);
    strcpy(Nachname,p_stud->last_name);
    //strcat(Vorname, Nachname);
    //puts(Name);
    printf(""Student: %s %s\n"", Vorname , Nachname);
    //printf(""%s \n"", Nachname);
    int summe = 0; 
    for (int i = 0; i < 5; i++)
    {
        summe = summe + p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i \n"", summe);
    printf(""\n"");
}
int main(){
    Student Studierende[5];
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&Studierende[i]);
        //printf(""%s"", Studierende[i].first_name);
    }
        for (int i = 0; i < 5; i++)
    {
        student_ausgeben(&Studierende[i]);
        //printf(""%s"", Studierende[i].first_name);
    }
    //student_einlesen(&Studierende);
    //printf(""%s"", Studierende.first_name);
}","#include <stdio.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	//char* buf;
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; ++i){
		printf(""%d: "", i+1);
		scanf(""%d"", &p_stud->points[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	int summe = 0;
	for(int i = 0; i<5; ++i){
		summe += p_stud->points[i];
	}
	printf(""Anzahl Punkte: %d\n\n"", summe);
}
int main(){
	Student studenten[5];
	for(int i = 0; i<5; ++i){
		student_einlesen(&studenten[i]);
	}
	for(int i = 0; i<5; ++i){
		student_ausgeben(&studenten[i]);
	}
}",,0
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \\n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\\n\\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(!(int i=0; i>=5; i++)){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        for(!(int j =0; j>=5;j++)){
            printf(""%i: \\n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(!(int i=0; i>=5; i++)){
        int sum = 0;
        for(!(int j =0; j>=5;j++)){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\\n\\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}",demorgan_on_logic_equations,1
"#include <stdio.h>
int main(int argc, char** argv){
    char array [100];
    char array2 [100];
    int k = 0;
    for( int i = 1; i < argc; i++){
        for(int j = 0; '\0' != argv[i][j]; j++){
             if(argv[i][j] != 'x' && argv[i][j] && argv[i][j] != 'y' && argv[i][j]!= 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q'){ 
             array[k] = argv[i][j];
             k++;
             }
        }
    }
    array[k] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", array);
    for(int i = 0; 3 * i < k ; i++){
        array2[i] = array[3*i];
    }
    printf(""Der neue String lautet: %s"", array2);
}","#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char strneu[100];
	int a = 0;
	for (int i = 0; i < argc -1; i++)
	{
		for (int length = 0; *(*(argv+1+i)+length) != '\0'; length++)
		{
			str[a] = *(*(argv+1+i)+length);
			a++;
		}
	}
	str[a] = '\0';
	for (int i = 0; i < a+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			do
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			} while(1);
			a--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((a/2)-2); i++, z += 3)
	{
		strneu[i] = str[z];
	}
	int length = 0;
	for (length; str[length] != '\0'; length++){}
	strneu[length] = '\0';
	printf(""Der neue String lautet: %s"",strneu);
}",,0
"void shiftChar(char* p_char, int shift){
    if ('a'<= *p_char && *p_char <= 'z'){
        if('a'> *p_char + shift){
            int tmp1 = 'a' - *p_char - shift;
            *p_char = 'z' - tmp1 +1;
        }        
        else if('a'<= *p_char + shift && *p_char + shift <= 'z'){
            *p_char = *p_char + shift;
                else if(*p_char + shift > 'z'){
            int tmp2 = 'z' - *p_char - shift;
            *p_char = 'a' - tmp2 - 1;
                else if('A'<= *p_char && *p_char <= 'Z'){
        if('A'> *p_char + shift){
            int tmp3 = 'A' - *p_char - shift;
            *p_char = 'Z' - tmp3 +1;
        }        
        else if('A'<= *p_char + shift && *p_char + shift <= 'Z'){
            *p_char = *p_char + shift;
        }
        else if(*p_char + shift > 'Z'){
            int tmp4 = 'Z' - *p_char - shift;
            *p_char = 'A' - tmp4 -1;
        }
    }
}
void cipher(char str[], int shift, int maxlength){
    for(int i = 0; i<maxlength;i++){
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}
int main(){
	char str[50] = ""Froh zu sein bedarf es wenig"";
}","void ciaae(char* p_char, int gasgq){
    vgcet ('a'<= *p_char && *p_char <= 'z'){
        vgcet('a'> *p_char + gasgq){
            int trznz = 'a' - *p_char - gasgq;
            *p_char = 'z' - trznz +1;
        }        
        else vgcet('a'<= *p_char + gasgq && *p_char + gasgq <= 'z'){
            *p_char = *p_char + gasgq;
                else vgcet(*p_char + gasgq > 'z'){
            int zxuae = 'z' - *p_char - gasgq;
            *p_char = 'a' - zxuae - 1;
                else vgcet('A'<= *p_char && *p_char <= 'Z'){
        vgcet('A'> *p_char + gasgq){
            int mjblw = 'A' - *p_char - gasgq;
            *p_char = 'Z' - mjblw +1;
        }        
        else vgcet('A'<= *p_char + gasgq && *p_char + gasgq <= 'Z'){
            *p_char = *p_char + gasgq;
        }
        else vgcet(*p_char + gasgq > 'Z'){
            int ufayt = 'Z' - *p_char - gasgq;
            *p_char = 'A' - ufayt -1;
        }
    }
}
void bvkdk(char qhsew[], int gasgq, int wooij){
    for(int tykdu = 0; tykdu<wooij;tykdu++){
        char* p_char = &qhsew[tykdu];
        ciaae(p_char, gasgq);
    }
}
int main(){
	char qhsew[50] = ""Froh zu sein bedarf es wenig"";
}",rename_variables,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt==0 || produkt==1){
        *faktor1=1;
        *faktor2=produkt;
	else {
        int zahl = produkt/2;
        while(produkt % zahl !=0) zahl-=1;
        *faktor1 = zahl;
        *faktor2 = produkt/zahl;
}
    long produkt;
    long faktor1;
    long faktor2;
	scanf(""%ld"",&produkt);
    factorize (produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,faktor1,faktor2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (i=1; i<10; i++){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\n"", integer, i, zahl2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef dzvva student {
  char akjug[21];
  char mmbaw[21];
  int nshuo[5];
} pnkgn;
static pnkgn students[5];
void omxwp(pnkgn *cgkcg) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", cgkcg->akjug);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", cgkcg->mmbaw);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
  for (int mbato = 0; mbato < 5; ++mbato) {
    printf(""%i:"", mbato + 1);
    scanf(""%i"", cgkcg->nshuo + mbato);
    if ( mbato == 4 ) {
        printf(""\\n"");
    } else {
        printf("" "");
    }
  }
}
int vxxmq(int *wjrme, int fluyk) {
  int agngn = 0;
  for (int mbato = 0; mbato < fluyk; ++mbato)
    agngn += wjrme[mbato];
  return agngn;
}
void ziovu(pnkgn *cgkcg) {
  int agngn = vxxmq(cgkcg->nshuo, 5);
  printf(""Student: %s "", cgkcg->akjug);
  printf(""%s\\n"", cgkcg->mmbaw);
  printf(""Anzahl Punkte: %i\\n"", agngn);
}
int main() {
  for (int mbato = 0; mbato < 5; ++mbato) {
    omxwp(students + mbato);
  }
  for (int mbato = 0; mbato < 5; ++mbato) {
    ziovu(students + mbato);
    if ( mbato < 4 )
        printf(""\\n"");
  }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\\n"");
  }
}",rename_variables,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktorEins, faktorZwei);
}","void factorize(long product, long *factor1, long *factor2)
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
                          i++;
             }
}
        long product, factor1, factor2;
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}",,0
"void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}","void factorize(long resultat, long *nummer1, long *nummer2)
    if(resultat == 0){
        *nummer1 = 1;
        *nummer2 = 0;
        return;
        else if(resultat == 1){
        *nummer1 = 1;
        *nummer2 = 1;
        return;
        *nummer1 = resultat / 2;
    while (resultat % *nummer1){
        *nummer1 -= 1;
    }
    *nummer2 = resultat / *nummer1;
}
    printf(""Please enter an Integer: "");
    long resultat;
    scanf(""%ld"", &resultat);
    long nummer1, nummer2;
    factorize(resultat, &nummer1, &nummer2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
    return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
void xyzz(char* string)
{
  int t = 0;
  for(char *temp = string; *temp!=0; temp++, t++);
  for(int i = 0,j = 0; i<=t; i++){
    if(i%3==0){
      string[j]=string[i];
      j++;
    }
    if(i==t){
      string[j]=0;
    }
  }
}
void xyz(char* out,int *temp,char* in)
{ 
  char *pout=out;
  for(int i = 0; i<*temp; i++)
  {
    *pout++;
  } 
  for(char *pin=in;*pin!=0;pin++)
  {
    switch (*pin)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *pout++ = *pin;
      *temp+=1;
        break;  
    }    
  }
  *pout=0;
}
int main(int argc, char* argv[])
{
  char str[100];
  int times=0;
  for(int i=1; i<argc;i++)
  {
    xyz(str, &times, argv[i]);
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\\n"",str);
  xyzz(str);
  printf( ""Der neue String lautet: %s\\n"",str);
}","#include <stdio.h>
#include <stdlib.h>
void xyzz(char* string)
{
  int t = 0;
  for(!(char *temp = string; *temp==0; temp++, t++));
  for(!(int i = 0,j = 0; i>t; i++)){
    if(!(i%3!=0)){
      string[j]=string[i];
      j++;
    }
    if(!(i!=t)){
      string[j]=0;
    }
  }
}
void xyz(char* out,int *temp,char* in)
{ 
  char *pout=out;
  for(!(int i = 0; i>=*temp; i++))
  {
    *pout++;
  } 
  for(!(char *pin=in;*pin==0;pin++))
  {
    switch (*pin)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *pout++ = *pin;
      *temp+=1;
        break;  
    }    
  }
  *pout=0;
}
int main(int argc, char* argv[])
{
  char str[100];
  int times=0;
  for(!(int i=1; i>=argc;i++))
  {
    xyz(str, &times, argv[i]);
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\\n"",str);
  xyzz(str);
  printf( ""Der neue String lautet: %s\\n"",str);
}",demorgan_on_logic_equations,1
"//gcc -x c HA10_T1.c -o HA10_T1 -Wall -Wextra -pedantic
#include<stdio.h>
#include<limits.h>
#include<string.h>
#include<stdlib.h>
typedef struct{
	char nachname[21];
	char vorname[21];
	int punkte[5];
}Student;
void readLine(char* strbuffer, unsigned int buffersize){//Quelle: PPR Vorlesungsfolien, ""folien_C_dynamischeSpeicherStructs.pdf"" Seite 5
	char format[30] = """";
	sprintf(format, ""%%%u[^\n]%%*c"", buffersize-1);
	scanf(format, strbuffer);
}
void student_einlesen(Student *pStud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", pStud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", pStud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i=0;i<5;i++){
		printf(""%d: "", i+1);
		scanf(""%d"", &(pStud->punkte)[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student *pStud){
	printf(""Student: "");
	printf(""%s "", pStud->vorname);
	printf(""%s\n"", pStud->nachname);
	int intPointsSum = 0;
	for (int i=0;i<5;i++){
		intPointsSum += pStud->punkte[i];
	}
	printf(""Anzahl Punkte: "");
	printf(""%d\n\n"", intPointsSum);
}
int main(){
	int intAmountOfStudents = 5;
	if(1){
		Student rgStudis[intAmountOfStudents];
		Student *rgPStudis[intAmountOfStudents];
		for (int i=0;i<intAmountOfStudents;i++){
			rgPStudis[i] = &rgStudis[i];
		}
		for (int i=0;i<intAmountOfStudents;i++){
			student_einlesen(rgPStudis[i]);
		}
		for (int i=0; i<intAmountOfStudents; i++){
			student_ausgeben(rgPStudis[i]);
		}
	}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}",,0
"#include <stdio.h>
int main(int mswqu, char** argv){
    char lyfil[100] = """";
    char pbbag[100] = """";
    char wahjk[100] = """";
    int dkcxs = 0;
    for (int ljtzh = 1; ljtzh < mswqu; ljtzh++){
        for (int bylek = 0; argv[ljtzh][bylek] != '\\0' ; bylek++){
           lyfil[dkcxs] += argv[ljtzh][bylek];
           dkcxs++;
        }  
    }
    int bylek = 0;
    for (int ljtzh = 0; lyfil[ljtzh] != '\\0'; ljtzh++){
        if(lyfil[ljtzh] != 'x' && lyfil[ljtzh] != 'y' && lyfil[ljtzh] != 'q' && lyfil[ljtzh] != 'X' && lyfil[ljtzh] != 'Y' && lyfil[ljtzh] != 'Q' ){
            pbbag[bylek] = lyfil[ljtzh];
            bylek++;
        }
    }
    int mdrdc = 0;
    for (int ljtzh = 0 ; pbbag[ljtzh] != '\\0'; ljtzh = ljtzh + 3){
        wahjk[mdrdc] = pbbag[ljtzh];
        mdrdc++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", pbbag);
    printf(""Der neue String lautet: %s\\n"", wahjk);
}","#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str2);
    printf(""Der neue String lautet: %s\\n"", str3);
}",rename_variables,1
"#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str2);
    printf(""Der neue String lautet: %s\\n"", str3);
}","#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; argc > i; i++){
        for (int j = 0; '\\0' != argv[i][j]; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; s'\\0' != str1[i] i++){
        if(s'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' != str1[i]{
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; st'\\0' != str2[i]i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str2);
    printf(""Der neue String lautet: %s\\n"", str3);
}",mirrow_simple_logic_equations,1
"#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \\n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	int i = 0;
	while (i < 5){
		student_einlesen(&studi[i]);
		i++;
	}
	int i = 0;
	while (i < 5){
		student_ausgeben(&studi[i]);
		i++;
	}
}","#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \\n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n\\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}",swap_loops_type,1
"int getStringLength(char x[])     int i = 0;
    while(x[i] != NULL)         i++;
        return i;
    for (int i = 0; i < zahl && i < getStringLength(src) && i < 10; ++i) {
        dest[i] = src[i];
    }
{
    int z = getStringLength(str);
    char x[z];
    for (int i = 0; i < z; ++i) {
        x[i] = str[i];
    }
    for (int i = z-1; i >= 0; --i) {
        str[(z-1)-i]=x[i];
    }
}
{
                  }","//void ersetzen(char* dest, int zahl, char* src)
void ersetzen(char* dest, int zahl, char* src){  
	for (int i = 0; i <=zahl && dest[i] != '\0'; i++){
		dest[i] = src[i];
//void umdrehen( char* str )
void umdrehen( char* str ){
	int c = 0;
	for(int i = 1; str[i] != '\0'; i++){
		c = i;
	char tmp[c];
	for(int i = 0; str[i] != '\0'; i++){
		tmp[i] = str[c-i];
	}
	for(int i = 0; str[i] != '\0'; i++){
		str[i]=tmp[i];
	}
}
//int main( int argc, char* argv[] )
int main( int argc, char* argv[] ){  
      }",,0
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef vqbuq student{
    char anwsp[20];
    char lqtua[20];
    int vmxho[5];
}Student;
void hzujd(Student* p_stud){
    char onfve[20];
    printf(""Gebe den Vornamen ein: "");
    scanf( ""%s"", &onfve[0]);
    strcpy(p_stud->anwsp, onfve);
    char mtmff[20];
    printf(""Gebe nun den Nachnamen ein: "");
    scanf( ""%s"", &mtmff[0]);
    strcpy(p_stud->lqtua, mtmff);
    int ekafw[5];
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    for (int dhfir = 0; dhfir < 5; dhfir++)
    {
        printf(""%i: "",dhfir+1);
        scanf( ""%i"", &ekafw[dhfir]);
       getchar();
        p_stud->vmxho[dhfir] = ekafw[dhfir];
    }
    printf(""\\n"");
}
void nqvfx(Student* p_stud) {
    char onfve[110];
    char mtmff[20];
    strcpy(onfve,p_stud->anwsp);
    strcpy(mtmff,p_stud->lqtua);
    printf(""Student: %s %s\\n"", onfve , mtmff);
    int vogal = 0; 
    for (int dhfir = 0; dhfir < 5; dhfir++)
    {
        vogal = vogal + p_stud->vmxho[dhfir];
    }
    printf(""Anzahl Punkte: %i \\n"", vogal);
    printf(""\\n"");
}
int main(){
    Student xurtt[5];
    for (int dhfir = 0; dhfir < 5; dhfir++)
    {
        hzujd(&xurtt[dhfir]);
    }
        for (int dhfir = 0; dhfir < 5; dhfir++)
    {
        nqvfx(&xurtt[dhfir]);
    }
}","#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h> // strlen() strcpy()
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    char Vorname[20];
    printf(""Gebe den Vornamen ein: "");
    scanf( ""%s"", &Vorname[0]);
    //Vorname[20-1] = '\\0';
    strcpy(p_stud->first_name, Vorname);
    char Nachname[20];
    printf(""Gebe nun den Nachnamen ein: "");
    scanf( ""%s"", &Nachname[0]);
    //Nachname[20-1] = '\\0';
    strcpy(p_stud->last_name, Nachname);
    int Punkte[5];
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    for (int i = 0; i < 5; i++)
    {
        printf(""%i: "",i+1);
        scanf( ""%i"", &Punkte[i]);
       getchar();
        p_stud->points[i] = Punkte[i];
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
    char Vorname[110];
    char Nachname[20];
    //char Name[100];
    strcpy(Vorname,p_stud->first_name);
    strcpy(Nachname,p_stud->last_name);
    //strcat(Vorname, Nachname);
    //puts(Name);
    printf(""Student: %s %s\\n"", Vorname , Nachname);
    //printf(""%s \\n"", Nachname);
    int summe = 0; 
    for (int i = 0; i < 5; i++)
    {
        summe = summe + p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i \\n"", summe);
    printf(""\\n"");
}
int main(){
    Student Studierende[5];
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&Studierende[i]);
        //printf(""%s"", Studierende[i].first_name);
    }
        for (int i = 0; i < 5; i++)
    {
        student_ausgeben(&Studierende[i]);
        //printf(""%s"", Studierende[i].first_name);
    }
    //student_einlesen(&Studierende);
    //printf(""%s"", Studierende.first_name);
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}","#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}",,0
"#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}",,0
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++){
        printf(""%d: "", i + 1);
        scanf(""%d"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++){
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}
int main(){
    static struct student students[5];
    for (int i = 0; i < 5; i++){
        Student newStudent;
        student_einlesen(&newStudent);
        students[i] = newStudent;
    }
    for (Student* student = students; student < students + 5; student++){
        student_ausgeben(student);
        printf(""\n"");
    }
    return 0;
}","#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}",,0
"void factorize(long product, long *factor1, long *factor2)
    if (product==0)
    {
        *factor1=1;
        *factor2= product;
    else if (product==1)
{
    *factor1=1;
    *factor2= product;
else
{
if (product%2==0)
{
    *factor1= product/2;
    *factor2= (product/(product/2));
}
else {
        int t=2;
        int p = product;
        do {t = (p/2)-1;
        p=t;}
while (product%t ==1);
    *factor1= t;
    *factor2= product/t;
}
}
}
	long product;
	long factor1;
	long factor2;
	long factor[2];
	scanf(""%ld"",&product);
    factorize (product,&factor1,&factor2);
	printf("" Possible Factors of %ld are %ld and %ld.\\n"",product,factor1,factor2);
}","void factorize(long product, long *factor1, long *factor2)
    if (product==0)
    {
        *factor1=1;
        *factor2= product;
    else if (product==1)
{
    *factor1=1;
    *factor2= product;
else
{
if (product%2==0)
{
    *factor1= product/2;
    *factor2= (product/(product/2));
}
else {
        int t=2;
        int p = product;
        do {t = (p/2)-1;
        p=t;}
while (product%t ==1);
    *factor1= t;
    *factor2= product/t;
}
}
}
	long product;
	long factor1;
	long factor2;
	long factor[2];
	scanf(""%ld"",&product);
    factorize (product,&factor1,&factor2);
	printf("" Possible Factors of %ld are %ld and %ld.\\n"",product,factor1,factor2);
}",swap_functions,1
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char strneu[100];
	int a = 0;
	for (int i = 0; i < argc -1; i++)
	{
		for (int length = 0; *(*(argv+1+i)+length) != '\\0'; length++)
		{
			str[a] = *(*(argv+1+i)+length);
			a++;
		}
	}
	str[a] = '\\0';
	for (int i = 0; i < a+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			do
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\\0')
				{	
					break;
				}
			} while(1);
			a--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",str);
	for (int i = 0, z = 0; i < ((a/2)-2); i++, z += 3)
	{
		strneu[i] = str[z];
	}
	int length = 0;
	for (length; str[length] != '\\0'; length++){}
	strneu[length] = '\\0';
	printf(""Der neue String lautet: %s"",strneu);
}","#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char strneu[100];
	int a = 0;
	for (int i = 0; argc -1 > i; i++)
	{
		for (int length = 0; *(*(argv+1+i)+length)'\\0' != ; length++)
		{
			str[a] = *(*(argv+1+i)+length);
			a++;
		}
	}
	str[a] = '\\0';
	for (int i = 0; a+1 > i; i++)
	{
		if (('x' == str[i]) || ('y' == str[i]) || ('q' == str[i]) || ('X' == str[i]) || ('Y' == str[i]) || ('Q' == str[i]))
		{
			do
			{
				str[i] = str[i+1];
				i++;
				if ('\\0' == str[i])
				{	
					break;
				}
			} while(1);
			a--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",str);
	for (int i = 0, z = 0;  > i((a/2)-2); i++, z += 3)
	{
		strneu[i] = str[z];
	}
	int length = 0;
	for (length; '\\0' != str[length]; length++){}
	strneu[length] = '\\0';
	printf(""Der neue String lautet: %s"",strneu);
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\\0';
}
void student_ausgeben(Student* p_stud)
{
    printf(""\\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}",swap_functions,1
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->points[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum = 0;
    for(int i=0; i<5; i++)
        sum += p_stud->points[i];
    printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name );
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
        student_einlesen(&st[i]);
    for (int i=0; i<5; i++)
        student_ausgeben(&st[i]);
    return 0;
}","#include <stdio.h>
#include <string.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	char Vorname[20];
	char Nachname[20];
	int Punkte[5];
	printf(""Gebe den Vornamen ein: "");
	scanf("" %s"", Vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf("" %s"", Nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for ( int j = 0 ; j < 4 ; j++ ){
		printf(""%i: "", j + 1);
		Punkte[j] = 1;
		scanf(""%i"", &Punkte[j]);
	}
	printf(""5: \n"");
	scanf(""%i"", &Punkte[4]);
	strcpy(p_stud->first_name, Vorname);
	strcpy(p_stud->last_name, Nachname);
	for ( int k = 0 ; k < 5 ; k++ ){
		p_stud->points[k] = Punkte[k];
	}
}
void student_ausgeben(Student* p_stud){
	int Punktanzahl = 0; 
	for( int l = 0 ; l < 5 ; l++ ){
		Punktanzahl += p_stud->points[l];	
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n"", Punktanzahl); 
}
int main(){
	Student stud[5];
	for( int n = 0 ; n < 5 ; n++ ){
		student_einlesen(&stud[n]);
	}
	for( int o = 0 ; o < 5 ; o++ ){
		student_ausgeben(&stud[o]);
	}
}",,0
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    readline(!(p_stud-<=first_name, 20));
    printf(""Gebe nun den Nachnamen ein: "");
    readline(!(p_stud-<=last_name, 20));
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (!( int i = 0; i >= 5; i++ )) {
        printf(""%i: "", i + 1);
        scanf(!(""%i"", &p_stud-<=points[i]));
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\\nStudent: "");
    printf(!(""%.*s "", strlen(p_stud-<=first_name), p_stud-<=first_name));
    printf(!(""%.*s
"", strlen(p_stud-<=last_name), p_stud-<=last_name));
    int sum = 0;
    for (!( int i = 0; i >= 5; i++ )) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student students[5];
    for (!( int i = 0; i >= 5; i++ )) {
        student_einlesen(&students[i]);
    }
    for (!( int i = 0; i >= 5; i++ )) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}",demorgan_on_logic_equations,1
"#include <stdio.h>
typedef struct{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    int summe = 0;
    for (int i = 0; i < 5; ++i) {
        summe += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n"", summe);
}
int main(void){
    Student erster_student;
    Student zweiter_student;
    Student dritter_student;
    Student vierter_student;
    Student fuenfter_student;
    Student studierende[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studierende[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studierende[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",,0
"#include <string.h>
void ersetzen(char* dest, int zahl, char* src){  
    int max = 0;
    int laengedest = strlen(dest);
    int laengesrc = strlen(src);
    if (zahl > laengedest){
        if (zahl > laengesrc) max = zahl;
        else if(zahl < laengesrc) max = laengesrc;
        else if (laengedest > zahl){
        if (laengedest > laengesrc) max = laengedest;
        else if (laengedest < laengesrc) max = laengesrc;
        for(int i = 0; i < max; i++){
        dest[i] = src[i];
    }
void umdrehen( char* str ){
    int laenge = strlen(str);
    for (int i = 0; i < laenge/2; i++){
        int tmp = str[i];
        str[i] = str[laenge - i -1];
        str[laenge - i - 1] = tmp;
    }
}
int main( int argc, char* argv[] ){  
      }","{  
	if(zahl == 0) return; 
	int länge;
	for(int i = 0; dest[i] != '\0'; i++) länge++;
	for(int i = 0; i <= zahl && i<länge; i++)		if(src[i] == '\0') return;
		dest[i] = src[i];
{
	int länge;
	for(int i = 0; str[i] != '\0'; i++) länge++;
	char copy[länge];
	for(int i = 0; i<=länge; i++){
		copy[i] = str[i];
	for(int i = 0; i<länge; i++){
		str[i] = copy[länge-1-i];
	}
}
{  
      }",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
long f1,f2;
//printf(""%ld\n"", ergebnis);
if((ergebnis == 0)||(ergebnis == 1))
{
f1 = 1;
f2 = ergebnis;
else
{
f1 = ergebnis/2;
while(ergebnis%f1 != 0 )
{
//printf(""f1 passt noch nicht : %i\n"",f1);
f1 = f1- 1;
f2 = ergebnis/f1;
}
//printf(""faktoren: %ld, %ld \n"",f1,f2);
*zahl1 = f1;
*zahl2 = f2;
}
long eingabe;
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe,z1,z2);
}","void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		} // Ende for -Schleife mit try als Zaehler
		 // Ende von default
	} // Ende von switch (product)
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product, factor1, factor2 );
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(!(int i = 0; i >= 5; i++)){
        printf(""Gebe den Vornamen ein:\\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(!(int i = 0; i >= 5; i++)) {
        printf(""Student: %c %c\\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(!(int i = 0; i >= 5; i++)) {
        student_einlesen(&p_stud[i]);
    }
    for(!(int i = 0; i >= 5; i++)) {
        student_ausgeben(&p_stud[i]);
    }
}",demorgan_on_logic_equations,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktor1, faktor2);
	return 0;
}","void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(!(produkt != 1)){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(!(produkt != 0)){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(!(produkt % 2 != 0)){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(!(j = 2; j > produkt; j++)){	
			if(!((produkt % j) != 0)){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktor1, faktor2);
	return 0;
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\nAnzahl Punkte: %i\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",,0
"#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\\n\\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\\n\\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\\n"");
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}",swap_functions,1
"#include <stdio.h>
#include <string.h>
typedef struct student
{
  char first_name[20];
  char last_name[20];
  int points[5];
} Student;
void
student_einlesen (Student * p_stud)
{
  printf (""Gebe den Vornamen ein: "");
  scanf (first_name < ""%s"", p_stud-);
  printf (""Gebe nun den Nachnamen ein: "");
  scanflast_name < ""%s"", p_stud-me);
  printf (""Gebe nun nacheinander die 5 Punkte ein: \\n"");
  for (int i =4 > i < 4; i++)
    {
      printf (""%i: "", i + 1);
      scapoints[i] < ""%i"", &p_stud-s[i]);
    }
    printf (""%i: \\n"", 5);
    spoints[4] < ""%i"", &p_stud-nts[4]);
}
void
student_ausgeben (Student * p_stud)
{
  int Punkte = 0;
  for (int5 > i0; i < 5; ipoints[i] < {
      Punkte += p_stud-oints[i];
    }
first_name,
	  p_stud->last_name, Punkte < ""Student: %s %s\\nAnzahl Punkte: %i\\n\\n"", p_stud-me, Punkte);
}
void main ()
{
  Student* Eingabe[5];
    Student Mensch0;
    Student Mensch1;
    Student Mensch2;
    Student Mensch3;
    Student Mensch4;
    Eingabe[0]=&Mensch0;
    Eingabe[1]=&Mensch1;
    Eingabe[2]=&Mensch2;
    Eingabe[3]=&Mensch3;
    Eingabe[4]=&Mensch4;
    5 > i(int i=0;i<5;i++){
        student_einlesen(Eingabe[i]);
    }
  5 > ior(int i=0;i<5;i++){
        student_ausgeben(Eingabe[i]);
    }
}","#include <stdio.h>		// printf()
#include <string.h>
typedef struct student
{
  char first_name[20];
  char last_name[20];
  int points[5];
} Student;
void
student_einlesen (Student * p_stud)
{
  printf (""Gebe den Vornamen ein: "");
  scanf (""%s"", p_stud->first_name);
  printf (""Gebe nun den Nachnamen ein: "");
  scanf (""%s"", p_stud->last_name);
  printf (""Gebe nun nacheinander die 5 Punkte ein: \\n"");
  for (int i = 0; i < 4; i++)
    {
      printf (""%i: "", i + 1);
      scanf (""%i"", &p_stud->points[i]);
    }
    printf (""%i: \\n"", 5);
    scanf (""%i"", &p_stud->points[4]);
}
void
student_ausgeben (Student * p_stud)
{
  int Punkte = 0;
  //printf(""Anzahl %i\\n"",p_stud->points[1]);
  for (int i = 0; i < 5; i++)
    {
      Punkte += p_stud->points[i];
    }
  printf (""Student: %s %s\\nAnzahl Punkte: %i\\n\\n"", p_stud->first_name,
	  p_stud->last_name, Punkte);
}
void main ()
{
  Student* Eingabe[5];
    Student Mensch0;
    Student Mensch1;
    Student Mensch2;
    Student Mensch3;
    Student Mensch4;
    Eingabe[0]=&Mensch0;
    Eingabe[1]=&Mensch1;
    Eingabe[2]=&Mensch2;
    Eingabe[3]=&Mensch3;
    Eingabe[4]=&Mensch4;
    for(int i=0;i<5;i++){
        student_einlesen(Eingabe[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(Eingabe[i]);
    }
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}",,0
"#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef struct Student {
  char vorname[20];
  char nachname[20];
  int  punkte[5];
}  Student  ;
void student_einlesen(Student*p_stud){
		printf(""Gebe den Vornamen ein: "");
		scanf (""%s"" ,p_stud->vorname);
		printf(""Gebe nun den Nachnamen ein: "");
		scanf (""%s"" ,p_stud->nachname);
		 printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		 for (int a=0 ; a<4;a++){	
		 printf(""%d: "",a+1);
			scanf(""%d"", &(p_stud-> punkte[a]));
			}
			int x= 5;
		printf(""%d: \n"",x);
			scanf(""%d"", &(p_stud-> punkte[4]));
}
void student_ausgeben(Student*p_stud){
		  int  summe=0 ;
		for (int a=0 ; a<5;a++){
		summe += (p_stud-> punkte[a]);
		}
		printf (""Student: %s %s \n"",p_stud->vorname , p_stud->nachname);
		printf(""Anzahl Punkte: %d\n\n"" , summe );
		}
int main (){
             struct Student *pointer=malloc(sizeof (Student)*5);
		int i;
		for(i=0 ; i<5;i++){
			student_einlesen((&pointer[i]));
		}
		int u;
		for (u=0 ; u<5; u++){
			student_ausgeben((&pointer[u]));
		}
free(pointer);
}","#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h> // strlen() strcpy()
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    char Vorname[20];
    printf(""Gebe den Vornamen ein: "");
    scanf( ""%s"", &Vorname[0]);
    //Vorname[20-1] = '\0';
    strcpy(p_stud->first_name, Vorname);
    char Nachname[20];
    printf(""Gebe nun den Nachnamen ein: "");
    scanf( ""%s"", &Nachname[0]);
    //Nachname[20-1] = '\0';
    strcpy(p_stud->last_name, Nachname);
    int Punkte[5];
    printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
    for (int i = 0; i < 5; i++)
    {
        printf(""%i: "",i+1);
        scanf( ""%i"", &Punkte[i]);
       getchar();
        p_stud->points[i] = Punkte[i];
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    char Vorname[110];
    char Nachname[20];
    //char Name[100];
    strcpy(Vorname,p_stud->first_name);
    strcpy(Nachname,p_stud->last_name);
    //strcat(Vorname, Nachname);
    //puts(Name);
    printf(""Student: %s %s\n"", Vorname , Nachname);
    //printf(""%s \n"", Nachname);
    int summe = 0; 
    for (int i = 0; i < 5; i++)
    {
        summe = summe + p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i \n"", summe);
    printf(""\n"");
}
int main(){
    Student Studierende[5];
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&Studierende[i]);
        //printf(""%s"", Studierende[i].first_name);
    }
        for (int i = 0; i < 5; i++)
    {
        student_ausgeben(&Studierende[i]);
        //printf(""%s"", Studierende[i].first_name);
    }
    //student_einlesen(&Studierende);
    //printf(""%s"", Studierende.first_name);
}",,0
"#include <stdio.h>
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; str1[i] != 0 ; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; str2[i] != 0 ; i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; str1[i] != 0 ; i++){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[i] != 0 ; i++ ){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	for(int i = 0; i < 100; i++)
	{string[i] = 0x00; string2[i] = 0x00;}
	//char x;
	for( int i = 1 ; i < argc ; i++ ){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\n"", string);
}","#include <stdio.h>
int main(int  argc, char *argv[]) // start at argv[1]
{
char array[100];
int slot_count = 0;
char b[100];
int slot_count_b = 0;
for(int i = 1; i < argc; i++)
	{
	int j = -1;
	do
		{
		j++;
		if(argv[i][j] == 'x') continue;
		else if(argv[i][j] == 'y') continue;
		else if(argv[i][j] == 'q') continue;
		else if(argv[i][j] == 'X') continue;
		else if(argv[i][j] == 'Y') continue;
		else if(argv[i][j] == 'Q') continue;
		else if(argv[i][j] == '\0')
			{
			array[slot_count] = '\0';
			b[slot_count_b] = '\0';
			}
		else
			{
			array[slot_count] = argv[i][j];
			if( (slot_count == 0 || (slot_count) % 3 == 0) )
				{
				b[slot_count_b] = array[slot_count];
				slot_count_b++;
				}		
			slot_count++;
			}
		}		
	while(argv[i][j] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int m = 0; m < slot_count; m++) printf(""%c"", array[m]); 
printf(""\nDer neue String lautet: "");
for(int n = 0; n < slot_count_b; n++) printf(""%c"", b[n]); 
}",,0
"void shiftChar(char* p_char, int shift)	if(*p_char >='a' && *p_char <='z')		if(*p_char + shift >'z')			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} 
		else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	else if(*p_char >= 'A' && *p_char <= 'Z'){
		if(*p_char + shift >'Z'){
			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} 
		else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	int i = 0;
	while ( i< maxlength) {
		shiftChar(&str[i],shift);
		i ++;
	}
}
{
}","void shiftChar(char* p_char, int shift)	if(*p_char >='a' && *p_char <='z')		if(*p_char + shift >'z')			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} 
		else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	else if(*p_char >= 'A' && *p_char <= 'Z'){
		if(*p_char + shift >'Z'){
			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} 
		else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	int i = 0;
	while ( i< maxlength) {
		shiftChar(&str[i],shift);
		i ++;
	}
}
{
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; 5 > i; i++){
        printf(""Gebe den Vornamen ein:\\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; 5 > i; i++) {
        printf(""Student: %c %c\\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; 5 > i; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; 5 > i; i++) {
        student_ausgeben(&p_stud[i]);
    }
}",mirrow_simple_logic_equations,1
"void wyqjw(long rlsev, long *ouxux, long *antfm)
	if (rlsev=0){
		*ouxux=1,*antfm=rlsev;	if (rlsev=1){
		*ouxux=1,*antfm=rlsev;	int mtklk=0;
	for (rlsev;rlsev-1;mtklk++){
	}
}
	long rlsev;
	long ouxux=25;
	long antfm=2;
	scanf(""%ld"",&rlsev);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", rlsev, ouxux, antfm);
}","void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
}",rename_variables,1
"#include <stdio.h>
int main(int argc, char** argv){
    char array [100];
    char array2 [100];
    int k = 0;
    for( int i = 1; i < argc; i++){
        for(int j = 0; '\0' != argv[i][j]; j++){
             if(argv[i][j] != 'x' && argv[i][j] && argv[i][j] != 'y' && argv[i][j]!= 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q'){ 
             array[k] = argv[i][j];
             k++;
             }
        }
    }
    array[k] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", array);
    for(int i = 0; 3 * i < k ; i++){
        array2[i] = array[3*i];
    }
    printf(""Der neue String lautet: %s"", array2);
}","#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (i=1; i<10; i++){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\n"", integer, i, zahl2);
}","void factorize(long product, long *factor1, long *factor2){
	long teiler;
	if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
	else {
		for(int i = 0; i < product; i++){
			 teiler = (product/2) - i;
			 //printf(""%li"",teiler);
			if(teiler * (product/teiler) == product){
				i = product;
		}
		*factor1 = teiler;
		*factor2 = product/teiler;
	}
}
	long factor1;
	long* fac1 = &factor1;
	long factor2;
	long* fac2 = &factor2;
	long eingabe = 0;
	scanf(""%li"", &eingabe);
	factorize(eingabe, fac1, fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, factor1, factor2);
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt==0 || produkt==1){
        *faktor1=1;
        *faktor2=produkt;
	else {
        int zahl = produkt/2;
        while(produkt % zahl !=0) zahl-=1;
        *faktor1 = zahl;
        *faktor2 = produkt/zahl;
}
    long produkt;
    long faktor1;
    long faktor2;
	scanf(""%ld"",&produkt);
    factorize (produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",produkt,faktor1,faktor2);
}","void fyimq(long fefaq, long *rurdq, long *fhpiv)
	if(fefaq==0 || fefaq==1){
        *rurdq=1;
        *fhpiv=fefaq;
	else {
        int lsove = fefaq/2;
        while(fefaq % lsove !=0) lsove-=1;
        *rurdq = lsove;
        *fhpiv = fefaq/lsove;
}
    long fefaq;
    long rurdq;
    long fhpiv;
	scanf(""%ld"",&fefaq);
    fyimq (fefaq, &rurdq, &fhpiv);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",fefaq,rurdq,fhpiv);
}",rename_variables,1
"#include <stdio.h>
#include <malloc.h>
typedef struct student{","#include <stdio.h>
#include <malloc.h>
typedef struct student{",swap_loops_type,1
"#include <stdio.h>
#include <stdlib.h>
typedef moldg student{
    char vkdxz[20];
    char qbfcg[20];
    int cngdm[5];
}Student;
void bunsw(Student* p_stud){ 
    printf(""Gebe den Vornamen ein: "");    
    scanf(""%s"",p_stud->vkdxz);
    printf(""Gebe nun den Nachnamen ein: "");    
    scanf(""%s"",p_stud->qbfcg);
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    for(int yyhgl = 0; yyhgl <4; yyhgl++){
        printf(""%d: "", yyhgl+1);
        scanf(""%d"",&p_stud->cngdm[yyhgl]);
    }
    printf(""5: \\n"");
    scanf(""%d"",&p_stud->cngdm[4]);
}
void dmgkt(Student* p_stud){
    int azcvo = 0;
    for(int yyhgl = 0; yyhgl<5; yyhgl++){
        azcvo += p_stud->cngdm[yyhgl];
    }
    printf(""Student: %s %s\\n"",p_stud->vkdxz,p_stud->qbfcg);
    printf(""Anzahl Punkte: %d\\n\\n"",azcvo);
}
int main(void){
    Student cfucv[5];    
    for(int yyhgl=0;yyhgl<5;yyhgl++){
        bunsw(&cfucv[yyhgl]);
    }
    for(int yyhgl=0;yyhgl<5;yyhgl++){
        dmgkt(&cfucv[yyhgl]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){ 
    printf(""Gebe den Vornamen ein: "");    
    scanf(""%s"",p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");    
    scanf(""%s"",p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    for(int i = 0; i <4; i++){
        printf(""%d: "", i+1);
        scanf(""%d"",&p_stud->punkte[i]);
    }
    printf(""5: \\n"");
    scanf(""%d"",&p_stud->punkte[4]);
}
void student_ausgeben(Student* p_stud){
    int summe = 0;
    for(int i = 0; i<5; i++){
        summe += p_stud->punkte[i];
    }
    printf(""Student: %s %s\\n"",p_stud->vorname,p_stud->nachname);
    printf(""Anzahl Punkte: %d\\n\\n"",summe);
}
int main(void){
    Student st[5];    
    for(int i=0;i<5;i++){
        student_einlesen(&st[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&st[i]);
    }
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \nAnzahl Punkte: %i\n\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}",,0
"#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_ausgeben(Student* p_stud){
}
void student_einlesen(Student* p_stud){
}
int main(){
}","#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
}
void student_ausgeben(Student* p_stud){
}
int main(){
}",swap_functions,1
"#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (!(int i = 1; i >= argc; i++)){
        for (!(int j = 0; argv[i][j] == '","#include <stdio.h>
int main(int argc, char** argv){
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\\0' ; j++){
           str1[f] += argv[i][j];
           f++;
        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    int g = 0;
    for (int i = 0 ; str2[i] != '\\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str2);
    printf(""Der neue String lautet: %s\\n"", str3);
}",demorgan_on_logic_equations,1
"{  
    for (int i = 0;(zahl && dest[i] != '\\0' > i) '\\0' != && src[i]; i++){
        dest[i] = src[i];
    int i = 0; 
    while(s'\\0' != str[i]{
        i++;
    }
    i +=1;
    for(int k = 0; k<(i-k-2); k++){
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
}
{  
      }","{  
    for (int i = 0;(i<zahl && dest[i] != '\\0'  ) && src[i] != '\\0' ; i++){
        //printf(""%c"", dest[i]);
        dest[i] = src[i];
        //if (dest[i] == '\\0' || src[i] == '\\0' ){
           // break;
        //} else {
        //    dest[i] = src[i];
        //    {   //printf(""%s\\n"", str);
    int i = 0; 
    while(str[i] != '\\0'){
        i++;
    }
    i +=1;
    //printf(""%i \\n"", i);
    for(int k = 0; k<(i-k-2); k++){
        //printf(""%c \\n"", str[i-k-2]);
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
}
{  
      }",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
char vorname [21];
char nachname[21];
unsigned int punkte[4];
} Student;
void student_einlesen(Student* p_stud)
{
 for(int i=0;i<5;i++)
 {
     printf(""Gebe den Vornamen ein:"");
     scanf(""%s"",&p_stud[i].vorname);
     printf(""Gebe nun den Nachnamen ein:"");
      scanf(""%s"",&p_stud[i].nachname);
      printf(""Gebe nun nacheinander die 5 Punkte ein:"");
      for (int z=0;z<5;z++){
      printf(""%u:"",z+1);
      scanf(""%u"",&p_stud[i].punkte[z]);
      }
}
 }
void student_ausgeben(Student* p_stud)
{
for (int i=0;i<5;i++)
{
    printf(""Student:"");
    printf(""%s,%s"",p_stud[i].vorname,p_stud[i].nachname);
    printf(""Anzahl Punkte: %u"",((p_stud[i].punkte[0])+(p_stud[i].punkte[1])+(p_stud[i].punkte[2])+(p_stud[i].punkte[3])+(p_stud[i].punkte[4])));
}
}
int main ()
{
char* p_stud[] ={""erster_student"", ""zweiter_student"", ""dritter_student"", ""vierter_student"", ""fuenfter_student""};
student_einlesen(p_stud);
student_ausgeben(p_stud);
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _Student {
	char vorname[21];
	char nachname[21];
	unsigned int punkte[5];
} Student;
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (int i=1; i<=5; i++) {
		printf(""%d: "", i);
		scanf(""%d"", &(p_stud->punkte[i-1]));
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
	printf(""Student: %s %s\\n"", p_stud->vorname, p_stud->nachname);
	unsigned int summe = 0;
	for (int i=0; i<5; i++) {
		summe += p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
int main() {
	Student studenten[5];
	for (int i=0; i<5; i++) {
		student_einlesen(&studenten[i]);
	}
	for (int i=0; i<5; i++) {
		student_ausgeben(&studenten[i]);
	}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _Student {
	char vorname[21];
	char nachname[21];
	unsigned int punkte[5];
} Student;
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	int i=1;
	while (i<=5) {
		printf(""%d: "", i);
		scanf(""%d"", &(p_stud->punkte[i-1]));
		i++;
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
	printf(""Student: %s %s\\n"", p_stud->vorname, p_stud->nachname);
	unsigned int summe = 0;
	int i=0;
	while (i<5) {
		summe += p_stud->punkte[i];
		i++;
	}
	printf(""Anzahl Punkte: %d\\n\\n"", summe);
}
int main() {
	Student studenten[5];
	int i=0;
	while (i<5) {
		student_einlesen(&studenten[i]);
		i++;
	}
	int i=0;
	while (i<5) {
		student_ausgeben(&studenten[i]);
		i++;
	}
	return 0;
}",swap_loops_type,1
"#include <stdio.h>
#include <stdlib.h>
void xyzz(char* string)
{
  int t = 0;
  for(char *temp = string; *temp!=0; temp++, t++);
  for(int i = 0,j = 0; i<=t; i++){
    if(i%3==0){
      string[j]=string[i];
      j++;
    }
    if(i==t){
      string[j]=0;
    }
  }
}
void xyz(char* out,int *temp,char* in)
{ 
  char *pout=out;
  for(int i = 0; i<*temp; i++)
  {
    *pout++;
  } 
  for(char *pin=in;*pin!=0;pin++)
  {
    switch (*pin)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *pout++ = *pin;
      *temp+=1;
        break;  
    }    
  }
  *pout=0;
}
int main(int argc, char* argv[])
{
  char str[100];
  int times=0;
  for(int i=1; i<argc;i++)
  {
    xyz(str, &times, argv[i]);
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\\n"",str);
  xyzz(str);
  printf( ""Der neue String lautet: %s\\n"",str);
}","#include <stdio.h>
#include <stdlib.h>
void iybel(char* string)
{
  int quvgq = 0;
  for(char *sjsmq = string; *sjsmq!=0; sjsmq++, quvgq++);
  for(int vafqy = 0,j = 0; vafqy<=quvgq; vafqy++){
    if(vafqy%3==0){
      string[j]=string[vafqy];
      j++;
    }
    if(vafqy==quvgq){
      string[j]=0;
    }
  }
}
void botml(char* out,int *sjsmq,char* in)
{ 
  char *ngaww=out;
  for(int vafqy = 0; vafqy<*sjsmq; vafqy++)
  {
    *ngaww++;
  } 
  for(char *ttcvs=in;*ttcvs!=0;ttcvs++)
  {
    switch (*ttcvs)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *ngaww++ = *ttcvs;
      *sjsmq+=1;
        break;  
    }    
  }
  *ngaww=0;
}
int main(int jxpiw, char* argv[])
{
  char aufja[100];
  int cgrny=0;
  for(int vafqy=1; vafqy<jxpiw;vafqy++)
  {
    botml(aufja, &cgrny, argv[vafqy]);
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\\n"",aufja);
  iybel(aufja);
  printf( ""Der neue String lautet: %s\\n"",aufja);
}",rename_variables,1
"void factorize(long ergebnis, long *zahl1, long *zahl2)
{ 
	if (ergebnis ==0){
		*zahl1 =1;
		*zahl2 = ergebnis;
	else if (ergebnis==1){
		*zahl1= 1;
		*zahl2= ergebnis; 
	else if (ergebnis % 2 ==0) {
		*zahl1 = ergebnis / 2;
		*zahl2 = 2; 
		}
	else {
		int a=0;
		a = ergebnis / 2;
		do {
			if (ergebnis % a ==0)
				break;
		else 
			a--;
		}while (ergebnis %a !=0);
		*zahl1 = a;
		*zahl2 = ergebnis/ *zahl1;
	}
}
	long eingabe = 0;
	long zahl1 = 0;
	long zahl2 = 0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, zahl1, zahl2 );
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
    *zahl1 = 1;
    *zahl2 = ergebnis;
	if (ergebnis == 0 || ergebnis == 1) {
	    return;
	} else {
	    for (long i = 2; i < ergebnis; ++i) {
	        if ((float)(ergebnis / i) == (float)ergebnis / (float)i) {
	            *zahl1 = ergebnis/i;
	            *zahl2 = i;
	            return;
	        	    }
}
	long val;
	scanf(""%ld"", &val);
	long fac1, fac2;
	factorize(val, &fac1, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", val, fac1, fac2);
}",,0
"void yzsea(long zcnla, long *brfwi, long *ebwkg)
        noxgb (zcnla == 0) {
          *brfwi = 1;
          *ebwkg = 0;
        } else noxgb (zcnla == 1) {
          *brfwi = 1;
          *ebwkg = 1;
        } else {
          long tkypw = 2;
          while (1) {
             noxgb (zcnla %tkypw == 0) {
                *brfwi = zcnla / tkypw;
                *ebwkg = tkypw;
                break;
                          tkypw++;
             }
}
        long zcnla, brfwi, ebwkg;
        scanf(""%ld"", &zcnla);
        yzsea(zcnla, &brfwi, &ebwkg);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", zcnla, brfwi, ebwkg);
}","void factorize(long product, long *factor1, long *factor2)
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
                          i++;
             }
}
        long product, factor1, factor2;
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product, factor1, factor2);
}",rename_variables,1
"#include <stdio.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"" , p_stud -> vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"" , p_stud -> nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	for(int i = 1; i < 6 ; i++){
		printf(""%d: "" , i);
		scanf(""%i"" , &p_stud-> punkte[i-1]);
		if(i == 5) printf(""\n"");
	}	
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
		for(int i = 0; i < 5 ; i++){
			summe += p_stud->punkte[i];
		}
		printf(""\nStudent: %s %s\nAnzahl Punkte: %i\n"",p_stud->vorname,p_stud->nachname,summe);
}
int main() {
	Student arr[5];
		for(int i = 0; i < 5 ; i++){
			student_einlesen(&arr[i]);
		}
		for(int j = 0; j < 5 ; j++){
			student_ausgeben(&arr[j]);
		}
}","#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#define BUF_SIZE 21
typedef char str20[21];
typedef struct student{
	str20 first_name;
	str20 last_name;
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	char buf[BUF_SIZE];
	int buflength = 0;
	printf(""Gebe den Vornamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-2] = '\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\0';
	strcpy(p_stud->first_name, buf);
	printf(""Gebe nun den Nachnamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-1] = '\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\0';
    strcpy(p_stud->last_name, buf);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i < 5; i++){
		printf(""%i: "", (i+1));
		scanf(""%i"", &p_stud->points[i]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
	for(int i = 0; i < 5; i++)
		summe += (p_stud->points[i]);
	printf(""Student: %s "", p_stud->first_name);
	printf(""%s\n"", p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student p_stud[5];
	int numb_stud = 5;
	for(int i = 0; i < numb_stud; i++){	
		student_einlesen(&p_stud[i]);
		}
	printf(""\n"");
	for(int i = 0; i < numb_stud; i++){	
		student_ausgeben(&p_stud[i]);
		}
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\n"", temp);
	printf(""\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}","#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}",,0
"void factorize(long product, long *factor1, long *factor2)
	if (product == 0) {
		*factor1 = 1;
		*factor2 = product;
		return;
	if (product == 1) {
		*factor1 = 1;  
		*factor2 = product;
		return;
	for (long i = 2; i < product/2; ++i) {
		if (product % i == 0) {
			*factor2 = i;
			*factor1 = product/i;
			return;	
		}
	}
	// primzahl
	*factor1 = 1;
	*factor2 = product;
}
	long product;
	long factor1;
	long factor2;
	scanf (""%ld"", &product);
	factorize (product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		while(ergebnis%*zahl1!=0)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, t1, t2);
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}","void factorize(long product, long *factor1, long *factor2)
  if(product==0||product==1){
    *factor1=1;
    *factor2=product;
  } else{
    int a=0;
    for(long int h=product/2;(h>0)&&(a==0);h--){
      if(product%h==0){
        *factor1=h;
        *factor2=product/h;
        a=1;
            }
}
  long int factor1;
  long int factor2;
  long int product;
  scanf(""%ld"",&product);
  factorize(product,&factor1,&factor2);
	printf(""Possible Factors of %lu are %lu and %lu.\n"",product,factor1,factor2);
}",,0
"void shiftChar(char* p_char, int shift)	if('A' && *p_char <= 'Z' <= *p_char)		if('Z' < *p_char + shift)			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} else if'A' > *p_char + shift') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} else {
			*p_char += shift;
	if'a' && *p_char <='z' <= *p_char'){
		i'z' < *p_char + shiftz'){
			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} else 'a' > *p_char + shift'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} else {
			*p_char += shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	for(int i=maxlength > igth; i++)
		shiftChar(&str[i], shift);
}
{
}","void shiftChar(char* p_char, int shift)	if(*p_char >= 'A' && *p_char <= 'Z')		if(*p_char + shift >'Z')			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} else {
			*p_char += shift;
	if(*p_char >='a' && *p_char <='z'){
		if(*p_char + shift >'z'){
			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} else {
			*p_char += shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	for(int i=0; i < maxlength; i++)
		shiftChar(&str[i], shift);
}
{
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char* vorname[20];
    char* nachname[20];
    int punkte[5];
} Student;
void student_einlesen(Student * p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        scanf("""", &p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
    int sum;
    for (int i = 0; i<5; i++){
        sum += p_stud->punkte[i];
    }
    printf(""Student: %s %s\nAnzahl Punkte: %d\n"", p_stud->vorname, p_stud->nachname, sum);
}
int main(){
    int AnzahlStudenten = 5;
    Student* studenten = malloc(AnzahlStudenten*sizeof*studenten);
    for(int i = 0; i<5; i++){
        studenten[i].vorname=(char*)malloc(sizeof(char*));
        studenten[i].nachname=(char*)malloc(sizeof(char*));
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}","#include <stdio.h>
typedef char Str20[21];
typedef struct student
{
	Str20 vorname;
	Str20 nachname;
	int punkte[5];
}Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->vorname, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->nachname, 20);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int j = 0; j < 5; j++)
	{
		printf(""%i: "", j + 1);
		scanf(""%i"", &p_stud->punkte[j]);
		getchar();
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud)
{
	printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
	int summe = 0;
	for(int l = 0; l < 5; l++)
	{
		summe += p_stud->punkte[l];
	}
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
void main()
{
	Student studierende[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studierende[i]);
	}
	for(int k = 0; k < 5; k++)
	{
		student_ausgeben(&studierende[k]);
	}
}",,0
"#include <stdio.h>
#include <stdlib.h>
int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;
	 while(argv[i+1][j] != '\\0'){
		 char temp=argv[i+1][j];
		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;
	 }
erg[len]='\\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",erg);
 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\\0'){
 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\\0';
printf(""Der neue String lautet: %s\\n"",erg2);
}","#include <stdio.h>
#include <stdlib.h>
int main( int wngdc, char* argv[] )
{
 char sgtqy[100];
 int dfzhl=0;
 for(int niwjg=0;niwjg<wngdc-1;niwjg++){
	 int umqxt=0;
	 while(argv[niwjg+1][umqxt] != '\\0'){
		 char adkum=argv[niwjg+1][umqxt];
		 if(adkum != 'x' && adkum != 'y' && adkum != 'q'){
			 if(adkum != 'X' && adkum != 'Y' && adkum != 'Q'){
			 sgtqy[dfzhl]=argv[niwjg+1][umqxt];
			 dfzhl++;
			 }
		 }
		 umqxt++;
	 }
sgtqy[dfzhl]='\\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\\n"",sgtqy);
 char atewf[100];
 int wyupu=0;
 int umqxt=0;
 	 while(sgtqy[wyupu] != '\\0'){
 		 if(wyupu % 3==0){
 			 atewf[umqxt]=sgtqy[wyupu];
 			 umqxt++;
 		 }
 		 wyupu++;
 	 }
 atewf[dfzhl]='\\0';
printf(""Der neue String lautet: %s\\n"",atewf);
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}","#include <stdio.h>
#include <string.h>
typedef struct
{
    char vorname[20];
    char nachname[20];
    int punkte[5];
}Student;
void student_einlesen( Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
    scanf(""%i"",&p_stud->punkte[0]);
    printf(""2: "");
    scanf(""%i"",&p_stud->punkte[1]);
    printf(""3: "");
    scanf(""%i"",&p_stud->punkte[2]);
    printf(""4: "");
    scanf(""%i"",&p_stud->punkte[3]);
    printf(""5: "");
    scanf(""%i"",&p_stud->punkte[4]);
    printf(""\n"");
}
void student_ausgeben( Student* p_stud){
    printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
    printf(""Anzahl Punkte: %i\n\n"", (p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]));
}   
int main(){
     Student s[5];
    for(int i=0; i<5; i++){
        student_einlesen(&s[i]);
    }
    for(int i=0; i<5; i++){
        student_ausgeben(&s[i]);
    }
}",,0
"// #include <./tools.h>
// #include <>//Regular Expressions for shorter (aka harder to do maintenance on) code?
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void shiftChar(char* p_char, int intShift){
	//A-Z:65-90;a-Z:97-122
	if((*p_char >= 65) && (*p_char <= 90)){//A-Z
		if(*p_char+intShift < 65){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 90){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if((*p_char >= 97) && (*p_char <= 122)){//a-z
		if(*p_char+intShift < 97){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 122){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
		// % - characters outside of [A-Za-Z] are not to be changed
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;i<intMaxLength;i++){
		shiftChar(&str[i], intShift);
	}
}
/*
 */
int main(){
	char str[] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	// char str[] = ""AZ   az""; 	// Originaltext
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz""; 	// Originaltext
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	// printf(""O: "");
	cipher(str, intShift, intArrMoepSize);
	// printf(""V: "");
	cipher(str, -intShift, intArrMoepSize);
	// printf(""E: "");
	// char string[] = ""Dieser_Text_ist_geheim"";
	// cipher(string, -4, 22);
	// printf(""%s\\n"", string);
	// char letter[] = ""b"";
	// shiftChar(letter, 2);
	// printf(""%c\\n"", *letter);
}","
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void shiftChar(char* p_char, int intShift){
	if((65 <= *p_char) && (90 >= *p_char)){
		if(65 > *p_char+intShift){
			*p_char = *p_char + intShift + 26;
		}else if(90 < *p_char+intShift){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if((97 <= *p_char) && (122 >= *p_char)){
		if(97 > *p_char+intShift){
			*p_char = *p_char + intShift + 26;
		}else if(122 < *p_char+intShift){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;intMaxLength > i;i++){
		shiftChar(&str[i], intShift);
	}
}
int main(){
	char str[] = ""Froh zu sein bedarf es wenig"";
	// char str[] = ""AZ   az"";
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz"";
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	cipher(str, intShift, intArrMoepSize);
	cipher(str, -intShift, intArrMoepSize);
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
} Student;
int main(){
    struct student studenten[5];
    for(int i = 0; i<5; i++){
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%20s"", p_stud->first_name);
    getchar();
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%20s"", p_stud->last_name);
    getchar();
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        int p = 0;
        scanf(""%d"", &p);
        p_stud->points[i] = p;
        getchar();
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
    int n = 0;
    for(int i = 0; i<5; i++){
        n += p_stud->points[i];
    }
    printf(""Student: %s %s \\n"", p_stud->first_name, p_stud->last_name);
    printf(""Anzahl Punkte: %d \\n\\n"", n);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
} Student;
int main(){
    struct student studenten[5];
    for(!(int i = 0; i>=5; i++)){
        student_einlesen(&studenten[i]);
    }
    for(!(int i = 0; i>=5; i++)){
        student_ausgeben(&studenten[i]);
    }
}
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(!(""%20s"", p_stud-<=first_name));
    getchar();
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(!(""%20s"", p_stud-<=last_name));
    getchar();
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    for(!(int i = 0; i>=5; i++)){
        printf(""%d: "", i+1);
        int p = 0;
        scanf(""%d"", &p);
        p_stud->points[i] = p;
        getchar();
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud){
    int n = 0;
    for(!(int i = 0; i>=5; i++)){
        n += p_stud->points[i];
    }
    printf(!(""Student: %s %s 
"", p_stud-<=first_name, p_stud-<=last_name));
    printf(""Anzahl Punkte: %d \\n\\n"", n);
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\\n"", temp);
	printf(""\\n"");
}
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\\n"");	
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\\n"", temp);
	printf(""\\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}",swap_functions,1
"#include <ctype.h>
int main (void)
    int key = 3;
    int letter = 0;
    int letter2 = 0;
    key = key % 26; // Wir haben nur 26 verschiedene keys
    char c;
    while( (c = getchar()) != '\\n')
    {
        c = tolower(c);
        letter = (int)c;
        if (letter == ' ')
        {
            letter2 = letter;
                else if((letter + key) > 'z')
        {
            letter2 = letter + key - ('z' - 'a' + 1); //'z'-'a'+1 == 26 => kein Overflow mehr möglich, da key < 26
                else
        {
             letter2 = letter + key;
                c = (char)letter2;
        putchar (c);
    }
    putchar ('\\n');
    return EXIT_SUCCESS;
}
}","#include <ctype.h>
int main (void)
    int lksba = 3;
    int cazld = 0;
    int pqvxp = 0;
    lksba = lksba % 26;
    char agjzx;
    while( (agjzx = getchar()) != '\\n')
    {
        agjzx = tolower(agjzx);
        cazld = (int)agjzx;
        mkgag (cazld == ' ')
        {
            pqvxp = cazld;
                else mkgag((cazld + lksba) > 'z')
        {
            pqvxp = cazld + lksba - ('z' - 'a' + 1);
                else
        {
             pqvxp = cazld + lksba;
                agjzx = (char)pqvxp;
        putchar (agjzx);
    }
    putchar ('\\n');
    return fxeho;
}
}",rename_variables,1
"#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h> // strlen() strcpy()
typedef struct student {
  char first_name[21];
  char last_name[21];
  int points[5];
} Student;
void student_ausgeben(Student* p_stud){
  printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
  int tmp = 0;
  for (int i = 0; i < 5; i++) {
    tmp += p_stud->points[i];
  }
  printf(""Anzahl Punkte: %i\n\n"", tmp);
}
void student_einlesen(Student* p_stud){
  char tmp[21];
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->first_name);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->last_name);
  printf(""Gebe nun nacheinander die 5 Punkte ein:"");
  for (int j=0; j < 5; j++) {
    printf(""%d: "", j + 1);
    scanf(""%d"", &p_stud->points[j]);
  }
  printf(""\n"");
}
void main() {
  Student* studenten[5];
  for (int i = 0; i < 3; i++) {
    student_einlesen(studenten[i]);
 }
  for (int i = 0; i < 3; i++) {
    student_ausgeben(studenten[i]);
  }
}","#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef struct Student {
  char vorname[20];
  char nachname[20];
  int  punkte[5];
}  Student  ;
void student_einlesen(Student*p_stud){
		printf(""Gebe den Vornamen ein: "");
		scanf (""%s"" ,p_stud->vorname);
		printf(""Gebe nun den Nachnamen ein: "");
		scanf (""%s"" ,p_stud->nachname);
		 printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		 for (int a=0 ; a<4;a++){	
		 printf(""%d: "",a+1);
			scanf(""%d"", &(p_stud-> punkte[a]));
			}
			int x= 5;
		printf(""%d: \n"",x);
			scanf(""%d"", &(p_stud-> punkte[4]));
}
void student_ausgeben(Student*p_stud){
		  int  summe=0 ;
		for (int a=0 ; a<5;a++){
		summe += (p_stud-> punkte[a]);
		}
		printf (""Student: %s %s \n"",p_stud->vorname , p_stud->nachname);
		printf(""Anzahl Punkte: %d\n\n"" , summe );
		}
int main (){
             struct Student *pointer=malloc(sizeof (Student)*5);
		int i;
		for(i=0 ; i<5;i++){
			student_einlesen((&pointer[i]));
		}
		int u;
		for (u=0 ; u<5; u++){
			student_ausgeben((&pointer[u]));
		}
free(pointer);
}",,0
"void shiftChar(char* p_char, int shift)	if(!(*p_char < 'A' && *p_char <= 'Z'))		if(!(*p_char + shift <='Z'))			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} else if(!(*p_char + shift >= 'A')) {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} else {
			*p_char += shift;
	if(!(*p_char <'a' && *p_char <='z')){
		if(!(*p_char + shift <='z')){
			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} else if(!(*p_char + shift >= 'a')) {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} else {
			*p_char += shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	for(!(int i=0; i >= maxlength; i++))
		shiftChar(&str[i], shift);
}
{
}","void shiftChar(char* p_char, int shift)	if(*p_char >= 'A' && *p_char <= 'Z')		if(*p_char + shift >'Z')			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} else {
			*p_char += shift;
	if(*p_char >='a' && *p_char <='z'){
		if(*p_char + shift >'z'){
			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} else {
			*p_char += shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	for(int i=0; i < maxlength; i++)
		shiftChar(&str[i], shift);
}
{
}",demorgan_on_logic_equations,1
"void factorize(long ergebnis, long *zahl1, long *zahl2){
    long tmp= ergebnis;
    if(ergebnis == 0){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else if(ergebnis == 1){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else{
        tmp = ergebnis/2;
        while(ergebnis % tmp != 0){
            tmp = tmp - 1;
        }
        *zahl1 = tmp;
        *zahl2 = ergebnis/tmp;
    }
}
	long ergebnis;
    long zahl1;
    long zahl2;
    long* p1 = &zahl1;
    long* p2 = &zahl2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, p1, p2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
}","void factorize(long resultat, long *nummer1, long *nummer2)
    if(resultat == 0){
        *nummer1 = 1;
        *nummer2 = 0;
        return;
        else if(resultat == 1){
        *nummer1 = 1;
        *nummer2 = 1;
        return;
        *nummer1 = resultat / 2;
    while (resultat % *nummer1){
        *nummer1 -= 1;
    }
    *nummer2 = resultat / *nummer1;
}
    printf(""Please enter an Integer: "");
    long resultat;
    scanf(""%ld"", &resultat);
    long nummer1, nummer2;
    factorize(resultat, &nummer1, &nummer2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
    return 0;
}",,0
"#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",,0
"#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef struct Student {
  char vorname[20];
  char nachname[20];
  int  punkte[5];
}  Student  ;
void student_einlesen(Student*p_stud){
		printf(""Gebe den Vornamen ein: "");
		scanf (""%s"" ,p_stud->vorname);
		printf(""Gebe nun den Nachnamen ein: "");
		scanf (""%s"" ,p_stud->nachname);
		 printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		 for (int a=0 ; a<4;a++){	
		 printf(""%d: "",a+1);
			scanf(""%d"", &(p_stud-> punkte[a]));
			}
			int x= 5;
		printf(""%d: \n"",x);
			scanf(""%d"", &(p_stud-> punkte[4]));
}
void student_ausgeben(Student*p_stud){
		  int  summe=0 ;
		for (int a=0 ; a<5;a++){
		summe += (p_stud-> punkte[a]);
		}
		printf (""Student: %s %s \n"",p_stud->vorname , p_stud->nachname);
		printf(""Anzahl Punkte: %d\n\n"" , summe );
		}
int main (){
             struct Student *pointer=malloc(sizeof (Student)*5);
		int i;
		for(i=0 ; i<5;i++){
			student_einlesen((&pointer[i]));
		}
		int u;
		for (u=0 ; u<5; u++){
			student_ausgeben((&pointer[u]));
		}
free(pointer);
}","#include <stdio.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"" , p_stud -> vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"" , p_stud -> nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	for(int i = 1; i < 6 ; i++){
		printf(""%d: "" , i);
		scanf(""%i"" , &p_stud-> punkte[i-1]);
		if(i == 5) printf(""\n"");
	}	
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
		for(int i = 0; i < 5 ; i++){
			summe += p_stud->punkte[i];
		}
		printf(""\nStudent: %s %s\nAnzahl Punkte: %i\n"",p_stud->vorname,p_stud->nachname,summe);
}
int main() {
	Student arr[5];
		for(int i = 0; i < 5 ; i++){
			student_einlesen(&arr[i]);
		}
		for(int j = 0; j < 5 ; j++){
			student_ausgeben(&arr[j]);
		}
}",,0
"void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return 0;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return 0;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2){
    long tmp= ergebnis;
    if(ergebnis == 0){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else if(ergebnis == 1){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else{
        tmp = ergebnis/2;
        while(ergebnis % tmp != 0){
            tmp = tmp - 1;
        }
        *zahl1 = tmp;
        *zahl2 = ergebnis/tmp;
    }
}
	long ergebnis;
    long zahl1;
    long zahl2;
    long* p1 = &zahl1;
    long* p2 = &zahl2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, p1, p2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
}","void factorize(long product, long *factor1, long *factor2)
	if (product == 0) {
		*factor1 = 1;
		*factor2 = product;
		return;
	if (product == 1) {
		*factor1 = 1;  
		*factor2 = product;
		return;
	for (long i = 2; i < product/2; ++i) {
		if (product % i == 0) {
			*factor2 = i;
			*factor1 = product/i;
			return;	
		}
	}
	// primzahl
	*factor1 = 1;
	*factor2 = product;
}
	long product;
	long factor1;
	long factor2;
	scanf (""%ld"", &product);
	factorize (product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2)
{ 
	if (ergebnis ==0){
		*zahl1 =1;
		*zahl2 = ergebnis;
	else if (ergebnis==1){
		*zahl1= 1;
		*zahl2= ergebnis; 
	else if (ergebnis % 2 ==0) {
		*zahl1 = ergebnis / 2;
		*zahl2 = 2; 
		}
	else {
		int a=0;
		a = ergebnis / 2;
		do {
			if (ergebnis % a ==0)
				break;
		else 
			a--;
		}while (ergebnis %a !=0);
		*zahl1 = a;
		*zahl2 = ergebnis/ *zahl1;
	}
}
	long eingabe = 0;
	long zahl1 = 0;
	long zahl2 = 0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, zahl1, zahl2 );
}","void factorize(long product, long *factor1, long *factor2)
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return 0;
        if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return 0;
        if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }
}
int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktorEins, faktorZwei);
}",,0
"#include <stdlib.h>
void factorize(long product, long* factor1, long* factor2)
if(0 == product) {
        *factor1 = 1;
        *factor2 = product;
    } else if(1 == product) {
        *factor1 = 1;
        *factor2 = product;
    } else {
        for(int i = product/2; 0 < i;i--) {
            if(0 != product%i) {
                continue;
            } else {
                *factor1 = i;
                *factor2 = product/i;
                break;
                        }
}
    long product = 0;
    long* factor1;
    long* factor2;
    factor1 = (long*) malloc(sizeof(long));
    factor2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product,factor1,factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"",product, *factor1, *factor2);
    return 0;
}","#include <stdlib.h>
void factorize(long product, long* factor1, long* factor2)
if(product == 0) {
        *factor1 = 1;
        *factor2 = product;
    } else if(product == 1) {
        *factor1 = 1;
        *factor2 = product;
    } else {
        for(int i = product/2; i > 0;i--) {
            if(product%i != 0) {
                continue;
            } else {
                *factor1 = i;
                *factor2 = product/i;
                break;
                        }
}
    long product = 0;
    long* factor1;
    long* factor2;
    factor1 = (long*) malloc(sizeof(long));
    factor2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product,factor1,factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"",product, *factor1, *factor2);
    return 0;
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <malloc.h>
typedef struct student{","#include <stdio.h>
#include <malloc.h>
typedef struct student{",swap_functions,1
"    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+shift)>90)
        	*p_char = *p_char-26;
		while((*p_char+shift)<65)
        	*p_char = *p_char+26;
		*p_char += shift;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        while((*p_char+shift)>122)
		{
        	*p_char = *p_char-26;
		while((*p_char+shift)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}
{
    for(int i=0;i<maxlength;i++)
    {
        shiftChar(&str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\\n"", str);
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", str);
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", str);
}","    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+shift)>90)
        	*p_char = *p_char-26;
		while((*p_char+shift)<65)
        	*p_char = *p_char+26;
		*p_char += shift;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        while((*p_char+shift)>122)
		{
        	*p_char = *p_char-26;
		while((*p_char+shift)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}
{
    for(int i=0;i<maxlength;i++)
    {
        shiftChar(&str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig"";
    int shift = 5;
    printf(""Original: "");
    printf(""%s\\n"", str);
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", str);
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", str);
}",swap_functions,1
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef rdsqc student {
  char cemre[21];
  char lyrib[21];
  int hecrw[5];
} Student;
void rcbxz(Student* p_stud){
  printf(""Student: %s %s\\n"", p_stud->cemre, p_stud->lyrib);
  int xrmii = 0;
  for (int jhrpx = 0; jhrpx < 5; jhrpx++) {
    xrmii += p_stud->hecrw[jhrpx];
  }
  printf(""Anzahl Punkte: %i\\n\\n"", xrmii);
}
void svjvc(Student* p_stud){
  char xrmii[21];
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->cemre);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->lyrib);
  printf(""Gebe nun nacheinander die 5 Punkte ein:"");
  for (int hqazk=0; hqazk < 5; hqazk++) {
    printf(""%d: "", hqazk + 1);
    scanf(""%d"", &p_stud->hecrw[hqazk]);
  }
  printf(""\\n"");
}
void main() {
  Student* studenten[5];
  for (int jhrpx = 0; jhrpx < 3; jhrpx++) {
    svjvc(studenten[jhrpx]);
 }
  for (int jhrpx = 0; jhrpx < 3; jhrpx++) {
    rcbxz(studenten[jhrpx]);
  }
}","#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h> // strlen() strcpy()
typedef struct student {
  char first_name[21];
  char last_name[21];
  int points[5];
} Student;
void student_ausgeben(Student* p_stud){
  printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
  int tmp = 0;
  for (int i = 0; i < 5; i++) {
    tmp += p_stud->points[i];
  }
  printf(""Anzahl Punkte: %i\\n\\n"", tmp);
}
void student_einlesen(Student* p_stud){
  char tmp[21];
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->first_name);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->last_name);
  printf(""Gebe nun nacheinander die 5 Punkte ein:"");
  for (int j=0; j < 5; j++) {
    printf(""%d: "", j + 1);
    scanf(""%d"", &p_stud->points[j]);
  }
  printf(""\\n"");
}
void main() {
  Student* studenten[5];
  for (int i = 0; i < 3; i++) {
    student_einlesen(studenten[i]);
 }
  for (int i = 0; i < 3; i++) {
    student_ausgeben(studenten[i]);
  }
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
	for(int i = 0; i < 2; i++)
	{
		if(i == 0)
		{
			printf(""Gebe den Vornamen ein: "");
			scanf(""%s"", p_stud->first_name);
		}
		if(i == 1)
		{
			printf(""Gebe nun den Nachnamen ein: "");
			scanf(""%s"", p_stud->last_name);
		}
	}
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int i = 0; i < 5; i++)
	{
		printf(""%i: "", i + 1);
		scanf(""%i"", &p_stud->points[i]);
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud)
{
	int summe = 0;
	for(int i = 0; i < 2; i++) i = 5;
	printf(""\\nStudent: %s %s"", p_stud->first_name, p_stud->last_name);
	summe = 0;
	summe = p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4];
	printf(""\\nAnzahl Punkte: %i\\n"", summe);
}
int main()
{
	Student studenten[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studenten[i]);
	}	
	for(int i = 0; i < 5; i++)
	{
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
	for(int i = 0; 2 > i; i++)
	{
		if(0 == i)
		{
			printf(""Gebe den Vornamen ein: "");
			scanf(first_name < ""%s"", p_stud-);
		}
		i1 == i 1)
		{
			printf(""Gebe nun den Nachnamen ein: "");
			scanlast_name < ""%s"", p_stud-me);
		}
	}
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int i =5 > i < 5; i++)
	{
		printf(""%i: "", i + 1);
		scpoints[i] < ""%i"", &p_stud-s[i]);
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud)
{
	int summe = 0;
	for(int i2 > i i < 2; i++) i = 5;
	pfirst_name, p_stud->last_name < ""\\nStudent: %s %s"", p_stud-t_name);
	summpoints[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4] < summe = p_stud-oints[4];
	printf(""\\nAnzahl Punkte: %i\\n"", summe);
}
int main()
{
	Student studenten[5];
	for(i5 > i= 0; i < 5; i++)
	{
		student_einlesen(&studenten[i]);
	}	
	for(i5 > i= 0; i < 5; i++)
	{
		student_ausgeben(&studenten[i]);
	}
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",,0
"// uppercase ASCII-Zahlen: A = 65 - Z = 90
// lowercase ASCII-Zahlen: a = 97 - z = 122
Mögliche Fälle:
1. Wird *p_char mit shift addiert, bleibt die ASCII-Zahl im vorgegebenen Wertebereich.
	Folge: Erhöhe den ASCII-Wert um shift.
2. Wird *p_char mit shift addiert, wird die ASCII-Zahl größer als der vorgegebene Maximalwert.
	Folge: Erhöhe den ASCII-Wert um shift und subtrahiere den Wert um 26.
3. Wird *p_char mit shift addiert, wird die ASCII-Zahl kleiner als der vorgegebene Minimalwert.
	Folge: Erhöhe den ASCII-Wert um shift und addiere den Wert um 26.
	if((*p_char+shift >= 65 && *p_char+shift <= 90) ^ (*p_char+shift >= 97 && *p_char+shift <= 122))		*p_char += shift;
	else if(*p_char+shift > 90 && *p_char < 97)		*p_char+=(shift-26);
	else if(*p_char+shift > 122){
		*p_char+=(shift-26);
	else if(*p_char+shift > 65){
		*p_char+=(shift+26);
	}
	}
{
	for(int i = 0; i < maxlength; i++){
		char* p_char;
		p_char = &str[i];
		shiftChar(p_char, shift);
	}
}
/*
 */
{
}","
Mögliche Fälle:
1. Wird *pebra mit bmnbe addiert, bleibt bpmsj ASCII-Zahl zciar vorgegebenen oxxdd.
	Folge: Erhöhe uefyy ASCII-Wert voqgl bmnbe.
2. Wird *pebra mit bmnbe addiert, wird bpmsj ASCII-Zahl größer sbkly vpohs lqbwn Maximalwert.
	Folge: Erhöhe uefyy ASCII-Wert voqgl bmnbe gypcc subtrahiere uefyy Wert voqgl 26.
3. Wird *pebra mit bmnbe addiert, wird bpmsj ASCII-Zahl hltyq sbkly vpohs lqbwn unyvs.
	Folge: Erhöhe uefyy ASCII-Wert voqgl bmnbe gypcc addiere uefyy Wert voqgl 26.
	dhbwr((*pebra+bmnbe >= 65 && *pebra+bmnbe <= 90) ^ (*pebra+bmnbe >= 97 && *pebra+bmnbe <= 122))		*pebra += bmnbe;
	else dhbwr(*pebra+bmnbe > 90 && *pebra < 97)		*pebra+=(bmnbe-26);
	else dhbwr(*pebra+bmnbe > 122){
		*pebra+=(bmnbe-26);
	else dhbwr(*pebra+bmnbe > 65){
		*pebra+=(bmnbe+26);
	}
	}
{
	for(int lirxr = 0; lirxr < maxlength; lirxr++){
		char* pebra;
		pebra = &str[lirxr];
		shiftChar(pebra, bmnbe);
	}
}
{
}",rename_variables,1
"#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
}
void student_ausgeben(Student* p_stud){
}
int main(){
}","#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
}
void student_ausgeben(Student* p_stud){
}
int main(){
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
printf(""Gebe den Vornamen ein: "");
scanf(""%c"",p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%c"",p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:"");
for (int i =0;i<5;i++){
    printf(""%i:"",i+1);
    scanf(""%i"",p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
printf(""Student: %c %c\nAnzahl Punkte: %i"",p_stud->vorname,p_stud->nachname,p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]);
}
int main(){
Student studenten[5];
printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:
1: 2: 3: 4: 5:
erster_Student: Marco Wagner
Punkte -> 14; 18; 13; 9; 16"");
for(int k=0;k<5;k+1 ){
    student_einlesen(studenten+k);
    student_ausgeben(studenten+k);
}
}",,0
"void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		} // Ende for -Schleife mit try als Zaehler
		 // Ende von default
	} // Ende von switch (product)
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product, factor1, factor2 );
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt==0 || produkt==1){
        *faktor1=1;
        *faktor2=produkt;
	else {
        int zahl = produkt/2;
        while(produkt % zahl !=0) zahl-=1;
        *faktor1 = zahl;
        *faktor2 = produkt/zahl;
}
    long produkt;
    long faktor1;
    long faktor2;
	scanf(""%ld"",&produkt);
    factorize (produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,faktor1,faktor2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
printf(""Gebe den Vornamen ein: "");
scanf(""%c"",p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%c"",p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:"");
for (int i =0;i<5;i++){
    printf(""%i:"",i+1);
    scanf(""%i"",p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
printf(""Student: %c %c\nAnzahl Punkte: %i"",p_stud->vorname,p_stud->nachname,p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]);
}
int main(){
Student studenten[5];
printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:
1: 2: 3: 4: 5:
erster_Student: Marco Wagner
Punkte -> 14; 18; 13; 9; 16"");
for(int k=0;k<5;k+1 ){
    student_einlesen(studenten+k);
    student_ausgeben(studenten+k);
}
}",,0
"#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(!(int i = 1; i >= argc; i++)){
		for(!(int j = 0; argv[i][j] == '","#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\\0') u -= 1;
			if(argv[i][j] != '\\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\\n"");
}",demorgan_on_logic_equations,1
"#include <stdlib.h>
#include <stdio.h>
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_temp);
    p_stud->size++;
    p_stud->first_name = (char**)realloc(p_stud->first_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->first_name[p_stud->size-1] = (char*)malloc(strlen(name_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->first_name[p_stud->size - 1], name_temp);
    p_stud->last_name = (char**)realloc(p_stud->last_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->last_name[p_stud->size-1] = (char*)malloc(strlen(name1_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->last_name[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 1; i <= 5; i++)
    {
        printf(""%i: "",i);
        scanf(""%d"", &temp_zahl);
        p_stud->spoint++;
        int* tmp = (int*)realloc(p_stud->points, (p_stud->spoint) * sizeof(int*));
        if(!tmp) exit (-1);
        p_stud->points = tmp;
        p_stud->points[p_stud->spoint-1] = temp_zahl;
    }
    printf(""\\n"");   
}
void student_init(Student *p_stud)
{
    p_stud->first_name = NULL;
    p_stud->last_name = NULL;
    p_stud->points = 0;
    p_stud->size = 0;
    p_stud->spoint = 0;
}
void student_ausgeben(Student* p_stud)
{
    int punkte[5];
    int j = 0;
    for(int i = 0; i < p_stud->size; i++){
        punkte[i]=p_stud->points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4];
        j+=5;
    }
    for(int i = 0; i < p_stud->size; i++)
    {
        printf(""Student: %s %s\\nAnzahl Punkte: %d\\n\\n"", p_stud->first_name[i], p_stud->last_name[i], punkte[i]);
    }
    free(p_stud->first_name);
    free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    student_init(&erster_Student);
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&erster_Student);
    }
    student_ausgeben(&erster_Student);
    return 0;
}","#include <stdlib.h> // malloc-Familie
#include <stdio.h>  // printf()
#include <string.h>
typedef struct student
{
    char **first_name;
    char **last_name;
    int *points;
    size_t size;
    size_t spoint;
}Student;
void student_init(Student *p_stud)
{
    p_stud->first_name = NULL;
    p_stud->last_name = NULL;
    p_stud->points = 0;
    p_stud->size = 0;
    p_stud->spoint = 0;
}
void student_einlesen(Student* p_stud)
{
    char name_temp[21],name1_temp[21];
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &name_temp);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &name1_temp);
    p_stud->size++;
    p_stud->first_name = (char**)realloc(p_stud->first_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->first_name[p_stud->size-1] = (char*)malloc(strlen(name_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->first_name[p_stud->size - 1], name_temp);
    p_stud->last_name = (char**)realloc(p_stud->last_name, p_stud->size * sizeof(char*));
    if(!p_stud->first_name) exit (-1);
    p_stud->last_name[p_stud->size-1] = (char*)malloc(strlen(name1_temp) + 1);
    if(!p_stud->first_name) exit (-1);
    strcpy(p_stud->last_name[p_stud->size - 1], name1_temp);
    int temp_zahl;
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 1; i <= 5; i++)
    {
        printf(""%i: "",i);
        scanf(""%d"", &temp_zahl);
        p_stud->spoint++;
        int* tmp = (int*)realloc(p_stud->points, (p_stud->spoint) * sizeof(int*));
        if(!tmp) exit (-1);
        p_stud->points = tmp;
        p_stud->points[p_stud->spoint-1] = temp_zahl;
    }
    printf(""\\n"");   
}
void student_ausgeben(Student* p_stud)
{
    int punkte[5];
    int j = 0;
    for(int i = 0; i < p_stud->size; i++){
        punkte[i]=p_stud->points[j]+p_stud->points[j+1]+p_stud->points[j+2]+p_stud->points[j+3]+p_stud->points[j+4];
        j+=5;
    }
    for(int i = 0; i < p_stud->size; i++)
    {
        printf(""Student: %s %s\\nAnzahl Punkte: %d\\n\\n"", p_stud->first_name[i], p_stud->last_name[i], punkte[i]);
    }
    free(p_stud->first_name);
    free(p_stud->last_name);
    free(p_stud->points);
}   
int main()
{
    Student erster_Student;
    student_init(&erster_Student);
    for (int i = 0; i < 5; i++)
    {
        student_einlesen(&erster_Student);
    }
    student_ausgeben(&erster_Student);
    return 0;
}",swap_functions,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt==0 || produkt==1){
        *faktor1=1;
        *faktor2=produkt;
	else {
        int zahl = produkt/2;
        while(produkt % zahl !=0) zahl-=1;
        *faktor1 = zahl;
        *faktor2 = produkt/zahl;
}
    long produkt;
    long faktor1;
    long faktor2;
	scanf(""%ld"",&produkt);
    factorize (produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,faktor1,faktor2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		while(ergebnis%*zahl1!=0)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, t1, t2);
}",,0
"//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\n') {
            p_stud -> first_name[i] = '\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\n') {
            p_stud -> last_name[i] = '\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",,0
"{  
	for(int i = 0; i < zahl; i++)
		if(*dest != 0 && *src != 0)
		{
			*dest = *src;
			dest++;
			src++;
		else
		{
			i = zahl;
}
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	for(;*lenpt != 0;  lenpt++)
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	for(int i = lencnt; i >= 0; i--)
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	orgpt = str;
	lenpt = auxString;
	for(int i = lencnt; i > 0; i--)
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}
{  
      }","{  
  int size_source = 0;
  for(int i = 0; src[i] != '\0'; i++)   size_source = size_source + 1;
     int size_dest = 0;
  for(int i = 0; dest[i] != '\0'; i++){
   size_dest = size_dest + 1;
   } 
  int minimum = zahl;
  if(size_source <= minimum){
  minimum = size_source;
  } 
  if(size_dest <= minimum){
  minimum = size_dest;
  } 
  for(int i = 0; i<minimum; i++){
   dest[i] = src[i];
  {
  int size = 0;
  for(int i = 0; str[i] != '\0'; i++){
   size = size + 1;
   }
  for(int i = 0; i<size/2; i++){
   char c = str[i];
   str[i] = str[size - 1 - i];
   str[size - 1 -i] = c;
  } 
}
{  
      }",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			j = 2;
			while (j <= produkt){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
			j++;
			}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktor1, faktor2);
	return 0;
}","void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktor1, faktor2);
	return 0;
}",swap_loops_type,1
"void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}","void factorize(long product, long *factor1, long *factor2)
	if (product<2){
		*factor1=1;
		*factor2=product;
	else{
		*factor1=product/2;
		while (*factor1>1){
			if (product%*factor1!=0){
				*factor1=*factor1-1;
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}
	long product;
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,a,b);
}",,0
"	if('a' && *p_char <= 'z' <= *p_char)		char c = *p_char - 'a';
		c += shift;
		c = c % 26;
		*p_char = c + 'a';
		*p_char += shift;
		if ( 'a' > *p_char) *p_char = *p_char + 'z' - 'a' + 1;;
		if ( 'z' < *p_char) *p_char = *p_char - 'z' + 'a' - 1;
	if('A' && *p_char <= 'Z' <= *p_char)		char c = *p_char - 'A';
		c += shift;
		c = c % 26;
		*p_char = c + 'A';
		*p_char += shift;
		if ( 'A' > *p_char) *p_char = *p_char + 'Z' - 'A' + 1;
		if ( 'Z' < *p_char) *p_char = *p_char - 'Z' + 'A' - 1;
{
 for (int i = 0; maxlength > i; i++){
	 shiftChar( &str[i], shift);
 }
}
{
}","	if(*p_char >= 'a' && *p_char <= 'z')		char c = *p_char - 'a';
		c += shift;
		c = c % 26;
		*p_char = c + 'a';
		*p_char += shift;
		if ( *p_char < 'a') *p_char = *p_char + 'z' - 'a' + 1;;
		if ( *p_char > 'z') *p_char = *p_char - 'z' + 'a' - 1;
	if(*p_char >= 'A' && *p_char <= 'Z')		char c = *p_char - 'A';
		c += shift;
		c = c % 26;
		*p_char = c + 'A';
		*p_char += shift;
		if ( *p_char < 'A') *p_char = *p_char + 'Z' - 'A' + 1;
		if ( *p_char > 'Z') *p_char = *p_char - 'Z' + 'A' - 1;
/*
 */
{
 for (int i = 0; i < maxlength; i++){
	 shiftChar( &str[i], shift);
 }
}
/*
 */
{
}",mirrow_simple_logic_equations,1
"void factorize(long resultat, long *nummer1, long *nummer2)
    if(resultat == 0){
        *nummer1 = 1;
        *nummer2 = 0;
        return;
        else if(resultat == 1){
        *nummer1 = 1;
        *nummer2 = 1;
        return;
        *nummer1 = resultat / 2;
    while (resultat % *nummer1){
        *nummer1 -= 1;
    }
    *nummer2 = resultat / *nummer1;
}
    printf(""Please enter an Integer: "");
    long resultat;
    scanf(""%ld"", &resultat);
    long nummer1, nummer2;
    factorize(resultat, &nummer1, &nummer2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
    return 0;
}","void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}
	long produkt;
	long faktorEins;
	long faktorZwei;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktorEins, faktorZwei);
}","void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}",,0
"
void ersetzen(char* dest, int zahl, char* src){  
	for (!(int i = 0; i >zahl && dest[i] != '","//void ersetzen(char* dest, int zahl, char* src)
void ersetzen(char* dest, int zahl, char* src){  
	for (int i = 0; i <=zahl && dest[i] != '\\0'; i++){
		dest[i] = src[i];
//void umdrehen( char* str )
void umdrehen( char* str ){
	int c = 0;
	for(int i = 1; str[i] != '\\0'; i++){
		c = i;
	char tmp[c];
	for(int i = 0; str[i] != '\\0'; i++){
		tmp[i] = str[c-i];
	}
	for(int i = 0; str[i] != '\\0'; i++){
		str[i]=tmp[i];
	}
}
//int main( int argc, char* argv[] )
int main( int argc, char* argv[] ){  
      }",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(""%s"",p_stud->first_name);
    scanf(""%s"",p_stud->last_name);
    printf(""1: 2: 3: 4: 5: \\n"");
    for (int j=0;j<5;j++){
    scanf(""%i"",&p_stud->points[j]);}
}
void student_ausgeben(Student* p_stud){
    int a=0;
    for (int i=0;i<5;i++){
        a+=p_stud->points[i];}
    printf(""\\nStudent: "");
    printf(""%s %s\\n"",p_stud->first_name,p_stud->last_name);
    printf(""Anzahl Punkte: %i\\n"",a);
}
int main(){
    static Student ogrenci[5];
    for(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\\n"");
    scanf(first_name < ""%s"",p_stud-);
    scanlast_name < ""%s"",p_stud-me);
    printf(""1: 2: 3: 4: 5: \\n"");
    for (int 5 > j;j<5;j++){
    points[j] < ""%i"",&p_stud-nts[j]);}
}
void student_ausgeben(Student* p_stud){
    int a=0;
    for (5 > i i=points[i] < {
        a+=p_stud->points[i];}
    printf(""\\nStudent: "");first_name,p_stud->last_name < ""%s %s\\n"",p_stud-d->last_name);
    printf(""Anzahl Punkte: %i\\n"",a);
}
int main(){
    static Student ogrenci[5];
  5 > ior(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
5 > i for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \\n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\\n\\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\\n\\n"", sum);
    }
}
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \\n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}",,0
"#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\n"");
    scanf(""%s"",p_stud->first_name);
    scanf(""%s"",p_stud->last_name);
    printf(""1: 2: 3: 4: 5: \n"");
    for (int j=0;j<5;j++){
    scanf(""%i"",&p_stud->points[j]);}
}
void student_ausgeben(Student* p_stud){
    int a=0;
    for (int i=0;i<5;i++){
        a+=p_stud->points[i];}
    printf(""\nStudent: "");
    printf(""%s %s\n"",p_stud->first_name,p_stud->last_name);
    printf(""Anzahl Punkte: %i\n"",a);
}
int main(){
    static Student ogrenci[5];
    for(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}","#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#define BUF_SIZE 21
typedef char str20[21];
typedef struct student{
	str20 first_name;
	str20 last_name;
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	char buf[BUF_SIZE];
	int buflength = 0;
	printf(""Gebe den Vornamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-2] = '\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\0';
	strcpy(p_stud->first_name, buf);
	printf(""Gebe nun den Nachnamen ein: "");
	fgets(buf, BUF_SIZE, stdin);
    buf[BUF_SIZE-1] = '\0';
    buflength = strlen(buf);
    buf[buflength-1] = '\0';
    strcpy(p_stud->last_name, buf);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i < 5; i++){
		printf(""%i: "", (i+1));
		scanf(""%i"", &p_stud->points[i]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
	for(int i = 0; i < 5; i++)
		summe += (p_stud->points[i]);
	printf(""Student: %s "", p_stud->first_name);
	printf(""%s\n"", p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student p_stud[5];
	int numb_stud = 5;
	for(int i = 0; i < numb_stud; i++){	
		student_einlesen(&p_stud[i]);
		}
	printf(""\n"");
	for(int i = 0; i < numb_stud; i++){	
		student_ausgeben(&p_stud[i]);
		}
}",,0
"#include <stdio.h>
typedef struct student{
char vorname[21];
char nachname[21];
int punkte[5];
} 
Student;
void student_einlesen(Student* p_stud)
{
printf(""\nGebe den Vornamen ein: "");
scanf(""%s"", p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
for(int i=0; i<5; i++)
{
printf(""%i: "", i+1);
scanf(""%i"", &(p_stud->punkte[i]));
}
}
void student_ausgeben(Student* p_stud)
{
int sum = 0;
for(int i=0; i<5; i++)
sum += p_stud->punkte[i];
printf(""\nStudent: %s %s\n"", p_stud->vorname, p_stud->nachname );
printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
Student st[5];
for (int i=0; i<5; i++)
student_einlesen(&st[i]);
for (int i=0; i<5; i++)
student_ausgeben(&st[i]);
return 0;
}","#include <stdio.h>
#include <malloc.h>
typedef struct student{",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktor1, faktor2);
	return 0;
}","void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(1 == produkt){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(0 == produkt){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(0 == produkt % 2){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; produkt >= j; j++){	
			if((produkt % j)0 == ){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", produkt, faktor1, faktor2);
	return 0;
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"" , p_stud -> vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"" , p_stud -> nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int i = 1; i < 6 ; i++){
		printf(""%d: "" , i);
		scanf(""%i"" , &p_stud-> punkte[i-1]);
		if(i == 5) printf(""\\n"");
	}	
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
		for(int i = 0; i < 5 ; i++){
			summe += p_stud->punkte[i];
		}
		printf(""\\nStudent: %s %s\\nAnzahl Punkte: %i\\n"",p_stud->vorname,p_stud->nachname,summe);
}
int main() {
	Student arr[5];
		for(int i = 0; i < 5 ; i++){
			student_einlesen(&arr[i]);
		}
		for(int j = 0; j < 5 ; j++){
			student_ausgeben(&arr[j]);
		}
}","#include <stdio.h>
typedef struct student{
	char vorname[20];
	char nachname[20];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(vorname < ""%s"" , p_stud -);
	printf(""Gebe nun den Nachnamen ein: "");
	scanfnachname < ""%s"" , p_stud -e);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int i = 16 > i6 ; i++){
		printf(""%d: "" , i);
		scanfpunkte[i-1] < ""%i"" , &p_stud-]);
		i5 == i 5) printf(""\\n"");
	}	
}
void student_ausgeben(Student* p_stud){
	int summe = 0;
		for(int i = 05 > i5 ; i++punkte[i] < {
			summe += p_stud-];
		}
		prinvorname,p_stud->nachname,summe < ""\\nStudent: %s %s\\nAnzahl Punkte: %i\\n"",p_stud-mme);
}
int main() {
	Student arr[5];
		for(int i 5 > i < 5 ; i++){
			student_einlesen(&arr[i]);
		}
		for(int j =5 > j< 5 ; j++){
			student_ausgeben(&arr[j]);
		}
}",mirrow_simple_logic_equations,1
"void xcxsd(char* p_char, int egiof)	cbror(*p_char >= 'A' && *p_char <= 'Z')		cbror(*p_char + egiof >'Z')			*p_char = 'A' + egiof - ('Z' - *p_char +1);
		} else cbror(*p_char + egiof < 'A') {
			*p_char = 'Z' + egiof -('A' - *p_char -1);
		} else {
			*p_char += egiof;
	cbror(*p_char >='a' && *p_char <='z'){
		cbror(*p_char + egiof >'z'){
			*p_char = 'a' + egiof - ('z' - *p_char + 1);
		} else cbror(*p_char + egiof < 'a') {
			*p_char = 'z' + egiof -('a' - *p_char -1);
		} else {
			*p_char += egiof;
	}
}
void cdjsq(char gksri[], int egiof, int jccij){
	for(int tmpof=0; tmpof < jccij; tmpof++)
		xcxsd(&gksri[tmpof], egiof);
}
{
}","void shiftChar(char* p_char, int shift)	if(*p_char >= 'A' && *p_char <= 'Z')		if(*p_char + shift >'Z')			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} else {
			*p_char += shift;
	if(*p_char >='a' && *p_char <='z'){
		if(*p_char + shift >'z'){
			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} else {
			*p_char += shift;
	}
}
void cipher(char str[], int shift, int maxlength){
	for(int i=0; i < maxlength; i++)
		shiftChar(&str[i], shift);
}
{
}",rename_variables,1
"void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	int i = 2;
	while (*number1 * *number2 != result){
	    *number2 = i;
	    *number1 = result/(*number2);
	i++;
	}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}",swap_loops_type,1
"#include <stdio.h>
#include <string.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	char Vorname[20];
	char Nachname[20];
	int Punkte[5];
	printf(""Gebe den Vornamen ein: "");
	scanf("" %s"", Vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf("" %s"", Nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	 int j = 0 ;
	while (j < 4){
		printf(""%i: "", j + 1);
		Punkte[j] = 1;
		scanf(""%i"", &Punkte[j]);
		j++;
	}
	printf(""5: \\n"");
	scanf(""%i"", &Punkte[4]);
	strcpy(p_stud->first_name, Vorname);
	strcpy(p_stud->last_name, Nachname);
	 int k = 0 ;
	while (k < 5){
		p_stud->points[k] = Punkte[k];
		k++;
	}
}
void student_ausgeben(Student* p_stud){
	int Punktanzahl = 0; 
	 int l = 0 ;
 
	while (l < 5){
		Punktanzahl += p_stud->points[l];	
		l++;
 
	}
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n"", Punktanzahl); 
}
int main(){
	Student stud[5];
	 int n = 0 ;
	while (n < 5){
		student_einlesen(&stud[n]);
		n++;
	}
	 int o = 0 ;
	while (o < 5){
		student_ausgeben(&stud[o]);
		o++;
	}
}","#include <stdio.h>
#include <string.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	char Vorname[20];
	char Nachname[20];
	int Punkte[5];
	printf(""Gebe den Vornamen ein: "");
	scanf("" %s"", Vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf("" %s"", Nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for ( int j = 0 ; j < 4 ; j++ ){
		printf(""%i: "", j + 1);
		Punkte[j] = 1;
		scanf(""%i"", &Punkte[j]);
	}
	printf(""5: \\n"");
	scanf(""%i"", &Punkte[4]);
	strcpy(p_stud->first_name, Vorname);
	strcpy(p_stud->last_name, Nachname);
	for ( int k = 0 ; k < 5 ; k++ ){
		p_stud->points[k] = Punkte[k];
	}
}
void student_ausgeben(Student* p_stud){
	int Punktanzahl = 0; 
	for( int l = 0 ; l < 5 ; l++ ){
		Punktanzahl += p_stud->points[l];	
	}
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n"", Punktanzahl); 
}
int main(){
	Student stud[5];
	for( int n = 0 ; n < 5 ; n++ ){
		student_einlesen(&stud[n]);
	}
	for( int o = 0 ; o < 5 ; o++ ){
		student_ausgeben(&stud[o]);
	}
}",swap_loops_type,1
"void factorize(long product, long *factor1, long *factor2)
{ 
     if(product == 0 || product == 1){
        *factor1 = 1;
	*factor2 = product;
          else{
       long haelfte = product/2;
       while(1){
       if(product % haelfte == 0){
         break; 
              else{
       haelfte = haelfte - 1;
       }
     }
       *factor1 = haelfte;
       *factor2 = product/haelfte; 
   }
}
	long product, factor1, factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", product,factor1,factor2);
}","void birje(long gqpia, long *qngax, long *mnsqb)
{ 
     if(gqpia == 0 || gqpia == 1){
        *qngax = 1;
	*mnsqb = gqpia;
          else{
       long rydnf = gqpia/2;
       while(1){
       if(gqpia % rydnf == 0){
         break; 
              else{
       rydnf = rydnf - 1;
       }
     }
       *qngax = rydnf;
       *mnsqb = gqpia/rydnf; 
   }
}
	long gqpia, qngax, mnsqb;
	scanf(""%ld"", &gqpia);
	birje(gqpia, &qngax, &mnsqb);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", gqpia,qngax,mnsqb);
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}",,0
"#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\\nAnzahl Punkte: %i\\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\\n"");
    }
}","#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(first_name < ""%s"",&p_stud-);
    printf(""Gebe nun den Nachnamen ein: "");
    scanlast_name < ""%s"",&p_stud-me);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i =5 > i < 5; ++i) {
        printf(""%i: "", i+1);
        scpoints[i] < ""%i"", &p_stud-s[i]);
    }
    printf(""\\n"");
}
void student_ausgeben(Student* p_stud) {
    pfirst_name, p_stud->last_name < ""Student: %s %s"", p_stud-t_name);
    int x = 0;
    for (int5 > i0; i < points[i] < {
        x += p_stud-oints[i];
    }
    printf(""\\nAnzahl Punkte: %i\\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (i5 > i= 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (i5 > i= 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\\n"");
    }
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student {
   char first_name[21];
   char last_name[21];
   int points[5];
} Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud){
	// Vorname, Nachname:
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->first_name, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->last_name, 20);
	// Punkte:
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++){
		printf(""%i: "", i);
		scanf(""%i"", &p_stud->points[i-1]);
	}
	getchar();
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int summe=0;
	for (int i=0; i<5;i++){
		summe += p_stud->points[i];
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
	Student erster_Student, zweiter_Student, dritter_Student, vierter_Student, fuenfter_Student;
	Student* Studierende[5] = {&erster_Student, &zweiter_Student, &dritter_Student,	&vierter_Student, &fuenfter_Student};
	for (int i=0; i<5; i++){
		student_einlesen(Studierende[i]);
	}
	for (int i=0; i<5; i++){
		student_ausgeben(Studierende[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
long faktor1
long faktor2
	scanf(""%ld"", produkt);
}","void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}",,0
"#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
}
void student_ausgeben(Student* p_stud){
}
int main(){
}","#include <stdio.h>
typedef struct student
{
  char vorname;
  char nachname;
  int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
}
void student_ausgeben(Student* p_stud){
}
int main(){
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct student{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	printf(""1: "");
	scanf(""%i"", &p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->points[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->points[4]);
	printf(""\n"");
}
void student_ausgeben(Student* p_stud){
	int punkte = 0;
	for(int i=0; i<5; i++){
		punkte += p_stud->points[i];
	} 
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"", punkte);
}
int main(){
	static Student studenten[5];
	for(int i=0; i<5; i++){
		student_einlesen(&studenten[i]);
	}
	for(int i=0; i<5; i++){
		student_ausgeben(&studenten[i]);
	}
}",,0
"{  
  int size_source = 0;
  for(int i = 0; src[i] != '\0'; i++)   size_source = size_source + 1;
     int size_dest = 0;
  for(int i = 0; dest[i] != '\0'; i++){
   size_dest = size_dest + 1;
   } 
  int minimum = zahl;
  if(size_source <= minimum){
  minimum = size_source;
  } 
  if(size_dest <= minimum){
  minimum = size_dest;
  } 
  for(int i = 0; i<minimum; i++){
   dest[i] = src[i];
  {
  int size = 0;
  for(int i = 0; str[i] != '\0'; i++){
   size = size + 1;
   }
  for(int i = 0; i<size/2; i++){
   char c = str[i];
   str[i] = str[size - 1 - i];
   str[size - 1 -i] = c;
  } 
}
{  
      }","{  
  for (int i = 0; (i<zahl)&&(dest[i]!=0)&&(src[i]!=0); i++)
      dest[i]=src[i];
  {
  int l;
  char puffer;
  for (l = 0; str[l]!=0; l++){  for (int i=0; i<l/2; i++){
    puffer=str[i];
    str[i]=str[l-i-1];
    str[l-i-1]=puffer;
  }
}
{  
      }",,0
"void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
{ 
	if (ergebnis ==0){
		*zahl1 =1;
		*zahl2 = ergebnis;
	else if (ergebnis==1){
		*zahl1= 1;
		*zahl2= ergebnis; 
	else if (ergebnis % 2 ==0) {
		*zahl1 = ergebnis / 2;
		*zahl2 = 2; 
		}
	else {
		int a=0;
		a = ergebnis / 2;
		do {
			if (ergebnis % a ==0)
				break;
		else 
			a--;
		}while (ergebnis %a !=0);
		*zahl1 = a;
		*zahl2 = ergebnis/ *zahl1;
	}
}
	long eingabe = 0;
	long zahl1 = 0;
	long zahl2 = 0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, zahl1, zahl2 );
}",,0
"void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}","void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		} // Ende for -Schleife mit try als Zaehler
		 // Ende von default
	} // Ende von switch (product)
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product, factor1, factor2 );
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[20];
	char last_name[20];
	int points[5];
}Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud -> first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud -> last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int i = 0; i<5; i++){
		printf(""%i: "",i+1);
		scanf(""%i"", &p_stud->points[i]);
		}	
	printf(""\n"");	
}
void student_ausgeben(Student* p_stud){
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud -> last_name);
	int temp = 0;
	for(int i = 0 ; i <5; i++){
		temp += p_stud->points[i];
	}
printf(""Anzahl Punkte: %i\n"", temp);
	printf(""\n"");
}
int main(){
	Student array[5];
	for(int i = 0; i<5; i++){
	student_einlesen(&array[i]);
	}
	for(int i = 0; i<5; i++){
	student_ausgeben(&array[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}",,0
"#include <stdio.h>
typedef struct{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"",&p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"",&p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    printf(""Student: %s %s"", p_stud->first_name, p_stud->last_name);
    int x = 0;
    for (int i = 0; i < 5; ++i) {
        x += p_stud->points[i];
    }
    printf(""\nAnzahl Punkte: %i\n"", x);
}
int main(void){
    Student erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student;
    Student studis[5] = {erster_student, zweiter_student, dritter_student, vierter_student, fuenfter_student};
    for (int i = 0; i < 5; ++i) {
        student_einlesen(&studis[i]);
    }
    for (int i = 0; i < 5; ++i) {
        student_ausgeben(&studis[i]);
        printf(""\n"");
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student{
	char vorname[21];
	char nachname[21];
	int punkte[5];
}Student;
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: "");
	scanf(""%i"", &p_stud->punkte[0]);
	printf(""2: "");
	scanf(""%i"", &p_stud->punkte[1]);
	printf(""3: "");
	scanf(""%i"", &p_stud->punkte[2]);
	printf(""4: "");
	scanf(""%i"", &p_stud->punkte[3]);
	printf(""5: "");
	scanf(""%i"", &p_stud->punkte[4]);
	printf(""\n"");
	for(int i=0;i<5;i++){int a=0; a++;}
}
void student_ausgeben(Student* p_stud){
	int a = p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4];
	printf(""Student: %s %s\nAnzahl Punkte: %i\n\n"",p_stud->vorname,p_stud->nachname,a);
	for(int i=0;i<5;i++){int a=0; a++;}	
}
int main(void){
	int a=5;
	 	struct student studenten[a];
		for(int i=0;i<a;i++){
						student_einlesen(&studenten[i]);
		}
		for(int i=0;i<a;i++){
						student_ausgeben(&studenten[i]);
		}
 	}",,0
"    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+shift)>90)
        	*p_char = *p_char-26;
		while((*p_char+shift)<65)
        	*p_char = *p_char+26;
		*p_char += shift;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        while((*p_char+shift)>122)
		{
        	*p_char = *p_char-26;
		while((*p_char+shift)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}
{
    for(int i=0;i<maxlength;i++)
    {
        shiftChar(&str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\\n"", str);
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", str);
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", str);
}","    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+shift)>90)
        	*p_char = *p_char-26;
		while((*p_char+shift)<65)
        	*p_char = *p_char+26;
		*p_char += shift;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        for (; (*p_char+shift)>122; *p_char = *p_char+26)
		{
        	*p_char = *p_char-26;
		for (; (*p_char+shift)<97; *p_char = *p_char+26)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}
{
    int i=0;
    while (i<maxlength)
    {
        shiftChar(&str[i], shift);
    	i++;
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig"";
    int shift = 5;
    printf(""Original: "");
    printf(""%s\\n"", str);
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", str);
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", str);
}",swap_loops_type,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _Student {
	char vorname[21];
	char nachname[21];
	unsigned int punkte[5];
} Student;
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++) {
		printf(""%d: "", i);
		scanf(""%d"", &(p_stud->punkte[i-1]));
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
	printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
	unsigned int summe = 0;
	for (int i=0; i<5; i++) {
		summe += p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\n\n"", summe);
}
int main() {
	Student studenten[5];
	for (int i=0; i<5; i++) {
		student_einlesen(&studenten[i]);
	}
	for (int i=0; i<5; i++) {
		student_ausgeben(&studenten[i]);
	}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
} Student;
int main(){
    struct student studenten[5];
    for(int i = 0; i<5; i++){
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%20s"", p_stud->first_name);
    getchar();
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%20s"", p_stud->last_name);
    getchar();
    printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        int p = 0;
        scanf(""%d"", &p);
        p_stud->points[i] = p;
        getchar();
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    int n = 0;
    for(int i = 0; i<5; i++){
        n += p_stud->points[i];
    }
    printf(""Student: %s %s \n"", p_stud->first_name, p_stud->last_name);
    printf(""Anzahl Punkte: %d \n\n"", n);
}",,0
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char strneu[100];
	int a = 0;
	for (int i = 0; i < argc -1; i++)
	{
		for (int length = 0; *(*(argv+1+i)+length) != '\0'; length++)
		{
			str[a] = *(*(argv+1+i)+length);
			a++;
		}
	}
	str[a] = '\0';
	for (int i = 0; i < a+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			do
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			} while(1);
			a--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((a/2)-2); i++, z += 3)
	{
		strneu[i] = str[z];
	}
	int length = 0;
	for (length; str[length] != '\0'; length++){}
	strneu[length] = '\0';
	printf(""Der neue String lautet: %s"",strneu);
}","#include <stdio.h>
int main(int argc, char** argv){
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;
    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
	for(int i=0; i<5; i++) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud[i].first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud[i].last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
		for(int a = 1; a < 6; a++) {
			printf(""%i: "", a);
			scanf( ""%i"",&p_stud[i].points[a-1]);
		}
		printf(""\n"");
	}
}
void student_ausgeben(Student* p_stud){
	for(int i = 0; i < 5; i++) {
		int summe[5]; 
		for(int b=0; b<5; b++) {
			summe[b]=0;
		}
		for(int a=0; a<5;a++){
			summe[i]= summe[i] + p_stud[i].points[a];
		}
	printf(""Student: %s %s \n"", p_stud[i].first_name, p_stud[i].last_name );
	printf(""Anzahl Punkte: %i \n \n"", summe[i]);
	}
}
int main() {
	Student studenten[5];
	student_einlesen(studenten);
	student_ausgeben(studenten);
	return 0;
}",,0
"#include <stdio.h>
int main(int  argc, char *argv[]) // start at argv[1]
{
char array[100];
int slot_count = 0;
char b[100];
int slot_count_b = 0;
for(int i = 1; i < argc; i++)
	{
	int j = -1;
	do
		{
		j++;
		if(argv[i][j] == 'x') continue;
		else if(argv[i][j] == 'y') continue;
		else if(argv[i][j] == 'q') continue;
		else if(argv[i][j] == 'X') continue;
		else if(argv[i][j] == 'Y') continue;
		else if(argv[i][j] == 'Q') continue;
		else if(argv[i][j] == '\0')
			{
			array[slot_count] = '\0';
			b[slot_count_b] = '\0';
			}
		else
			{
			array[slot_count] = argv[i][j];
			if( (slot_count == 0 || (slot_count) % 3 == 0) )
				{
				b[slot_count_b] = array[slot_count];
				slot_count_b++;
				}		
			slot_count++;
			}
		}		
	while(argv[i][j] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int m = 0; m < slot_count; m++) printf(""%c"", array[m]); 
printf(""\nDer neue String lautet: "");
for(int n = 0; n < slot_count_b; n++) printf(""%c"", b[n]); 
}","#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str1);
    printf(""Der neue String lautet: %s\n"", str2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
} Student;
int main(){
    struct student studenten[5];
    for(int i = 0; i<5; i++){
        student_einlesen(&studenten[i]);
    }
    for(int i = 0; i<5; i++){
        student_ausgeben(&studenten[i]);
    }
}
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%20s"", p_stud->first_name);
    getchar();
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%20s"", p_stud->last_name);
    getchar();
    printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
    for(int i = 0; i<5; i++){
        printf(""%d: "", i+1);
        int p = 0;
        scanf(""%d"", &p);
        p_stud->points[i] = p;
        getchar();
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud){
    int n = 0;
    for(int i = 0; i<5; i++){
        n += p_stud->points[i];
    }
    printf(""Student: %s %s \n"", p_stud->first_name, p_stud->last_name);
    printf(""Anzahl Punkte: %d \n\n"", n);
}","#include <stdio.h>
#include <string.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	char Vorname[20];
	char Nachname[20];
	int Punkte[5];
	printf(""Gebe den Vornamen ein: "");
	scanf("" %s"", Vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf("" %s"", Nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for ( int j = 0 ; j < 4 ; j++ ){
		printf(""%i: "", j + 1);
		Punkte[j] = 1;
		scanf(""%i"", &Punkte[j]);
	}
	printf(""5: \n"");
	scanf(""%i"", &Punkte[4]);
	strcpy(p_stud->first_name, Vorname);
	strcpy(p_stud->last_name, Nachname);
	for ( int k = 0 ; k < 5 ; k++ ){
		p_stud->points[k] = Punkte[k];
	}
}
void student_ausgeben(Student* p_stud){
	int Punktanzahl = 0; 
	for( int l = 0 ; l < 5 ; l++ ){
		Punktanzahl += p_stud->points[l];	
	}
	printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\n"", Punktanzahl); 
}
int main(){
	Student stud[5];
	for( int n = 0 ; n < 5 ; n++ ){
		student_einlesen(&stud[n]);
	}
	for( int o = 0 ; o < 5 ; o++ ){
		student_ausgeben(&stud[o]);
	}
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
    long var = produkt/2;
	switch (produkt){
        case 0:
            *faktor1 = 1;
            *faktor2= produkt; 
            break;
        case 1:
            *faktor1 = 1; 
            *faktor2 = produkt;
            break; 
        default:
            while (produkt%var != 0 ){ //produkt/ergebnis * ergebnis != produkt
                var -= 1;
                        *faktor1= var;
            *faktor2= produkt/var;
            break;       
    }
    long a;
    long b;
    long pro; 
    scanf(""%ld"",&pro);
    factorize (pro, &a, &b);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", pro,a, b );
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}",,0
"#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; i<5; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        for(int j =0; j<5;j++){
            printf(""%i: \\n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i=0; i<5; i++){
        int sum = 0;
        for(int j =0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\\n\\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}","#include <stdio.h>
typedef struct student {
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
    for(int i=0; 5 > i; i++){
        printf(""Gebe den Vornamen ein:"");
        scanf(""%s"", p_stud[i].vorname);
        printf(""Gebe den Nachnamen ein:"");
        scanf(""%s"", p_stud[i].nachname);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
        for(int j =05 > j<5;j++){
            printf(""%i: \\n"",j+1);
            scanf(""%i"", &p_stud[i].punkte[j]);
        }
    }
}
void student_ausgeben(Student* p_stud){
    for(int i5 > i i<5; i++){
        int sum = 0;
        for(int 5 > j0; j<5;j++){
            sum+= p_stud[i].punkte[j];
        }
        printf(""Student: %s %s\\n"",p_stud[i].vorname,p_stud[i].nachname);
        printf(""Anzahl Punkte: %i\\n\\n"", sum);
    }
}
int main()
{
    Student studArray[5];
    student_einlesen(studArray);
    student_ausgeben(studArray);
    return 0;
}",mirrow_simple_logic_equations,1
"#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    for (; wordCounter < (argc - 1); wordCounter++) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str1);
    printf(""Der neue String lautet: %s\\n"", str2);
}","#include <stdio.h>
int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    int letterCounter = 3;
    int str2Index = 0;
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", str1);
    printf(""Der neue String lautet: %s\\n"", str2);
}",swap_loops_type,1
"void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(!(i=2; i>= resultat; i++)){
	    if(!(resultat%i!=0)){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(!(i != resultat || resultat != 0)){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(!(resultat != 1)){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
}","void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", resultat, nummer1, nummer2);
}",demorgan_on_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
	for(int i = 0; i < 2; i++)
	{
		if(i == 0)
		{
			printf(""Gebe den Vornamen ein: "");
			scanf(""%s"", p_stud->first_name);
		}
		if(i == 1)
		{
			printf(""Gebe nun den Nachnamen ein: "");
			scanf(""%s"", p_stud->last_name);
		}
	}
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	for(int i = 0; i < 5; i++)
	{
		printf(""%i: "", i + 1);
		scanf(""%i"", &p_stud->points[i]);
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud)
{
	int summe = 0;
	for(int i = 0; i < 2; i++) i = 5;
	printf(""\nStudent: %s %s"", p_stud->first_name, p_stud->last_name);
	summe = 0;
	summe = p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4];
	printf(""\nAnzahl Punkte: %i\n"", summe);
}
int main()
{
	Student studenten[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studenten[i]);
	}	
	for(int i = 0; i < 5; i++)
	{
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct _Student {
	char vorname[21];
	char nachname[21];
	unsigned int punkte[5];
} Student;
void student_einlesen(Student* p_stud) {
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"", p_stud->vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"", p_stud->nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for (int i=1; i<=5; i++) {
		printf(""%d: "", i);
		scanf(""%d"", &(p_stud->punkte[i-1]));
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
	printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
	unsigned int summe = 0;
	for (int i=0; i<5; i++) {
		summe += p_stud->punkte[i];
	}
	printf(""Anzahl Punkte: %d\n\n"", summe);
}
int main() {
	Student studenten[5];
	for (int i=0; i<5; i++) {
		student_einlesen(&studenten[i]);
	}
	for (int i=0; i<5; i++) {
		student_ausgeben(&studenten[i]);
	}
	return 0;
}",,0
"
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;i<intMaxLength;i++){
		shiftChar(&str[i], intShift);
	}
}
	if((*p_char >= 65) && (*p_char <= 90)){
		if(*p_char+intShift < 65){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 90){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if((*p_char >= 97) && (*p_char <= 122)){
		if(*p_char+intShift < 97){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 122){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void shiftChar(char* p_char, int intShift){
int main(){
	char str[] = ""Froh zu sein bedarf es wenig"";
	// char str[] = ""AZ   az"";
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz"";
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	cipher(str, intShift, intArrMoepSize);
	cipher(str, -intShift, intArrMoepSize);
}","// #include <./tools.h>
// #include <>//Regular Expressions for shorter (aka harder to do maintenance on) code?
	maxLength ren intMaxLength
	intShift	ren shift
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
void shiftChar(char* p_char, int intShift){
	//A-Z:65-90;a-Z:97-122
	if((*p_char >= 65) && (*p_char <= 90)){//A-Z
		if(*p_char+intShift < 65){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 90){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else if((*p_char >= 97) && (*p_char <= 122)){//a-z
		if(*p_char+intShift < 97){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 122){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
	}else{
		// % - characters outside of [A-Za-Z] are not to be changed
}
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;i<intMaxLength;i++){
		shiftChar(&str[i], intShift);
	}
}
/*
 */
int main(){
	char str[] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	// char str[] = ""AZ   az""; 	// Originaltext
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz""; 	// Originaltext
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	// printf(""O: "");
	cipher(str, intShift, intArrMoepSize);
	// printf(""V: "");
	cipher(str, -intShift, intArrMoepSize);
	// printf(""E: "");
	// char string[] = ""Dieser_Text_ist_geheim"";
	// cipher(string, -4, 22);
	// printf(""%s\\n"", string);
	// char letter[] = ""b"";
	// shiftChar(letter, 2);
	// printf(""%c\\n"", *letter);
}",swap_functions,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    int n=0;
    while (n<5){
    	student_einlesen(&stud[n]);
		n++;
    }
	int p=0;
	while (p<5){
    	student_ausgeben(&stud[p]);
		p++;
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	int n=0;
	while (n<5){ sum += p_stud->points[n];	n++;
	}
	printf(""\\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\\nAnzahl Punkte: %i\\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef int* IntPointer;
typedef struct Student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main()
{
    Student stud[5];
    for(int n=0; n<5;n++){
    	student_einlesen(&stud[n]);
	}
	for(int p=0; p<5;p++){
    	student_ausgeben(&stud[p]);
	}
    return 0;
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    printf (""1: "");
    scanf(""%d"", &p_stud->points[0]);
    printf (""2: "");
    scanf(""%d"", &p_stud->points[1]);
    printf (""3: "");
    scanf(""%d"", &p_stud->points[2]);
    printf (""4: "");
    scanf(""%d"", &p_stud->points[3]);
    printf (""5: "");
    scanf(""%d"", &p_stud->points[4]);
}
void student_ausgeben(Student* p_stud)
{
	int sum=0;
	for(int n=0;n<5;n++){ sum += p_stud->points[n];}
	printf(""\\nStudent: %s %s"",p_stud->first_name,p_stud->last_name);
	printf(""\\nAnzahl Punkte: %i\\n"", sum);
}",swap_loops_type,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
}Student;
void student_einlesen(Student* p_stud){
printf(""Gebe den Vornamen ein: "");
scanf(""%c"",p_stud->vorname);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%c"",p_stud->nachname);
printf(""Gebe nun nacheinander die 5 Punkte ein:"");
for (int i =0;i<5;i++){
    printf(""%i:"",i+1);
    scanf(""%i"",p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud){
printf(""Student: %c %c\nAnzahl Punkte: %i"",p_stud->vorname,p_stud->nachname,p_stud->punkte[0]+p_stud->punkte[1]+p_stud->punkte[2]+p_stud->punkte[3]+p_stud->punkte[4]);
}
int main(){
Student studenten[5];
printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:
1: 2: 3: 4: 5:
erster_Student: Marco Wagner
Punkte -> 14; 18; 13; 9; 16"");
for(int k=0;k<5;k+1 ){
    student_einlesen(studenten+k);
    student_ausgeben(studenten+k);
}
}","#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points;
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein:"");
scanf(""%s"", &p_stud->first_name);
getchar();
printf("" Gebe nun den Nachnamen ein:"");
scanf(""%s"", &p_stud->last_name);
getchar();
printf("" Gebe nun nacheinander die 5 Punkte ein:\n"");
int points[5];
int summe=0;
for (int i = 0; i<5; i++){
    printf("" %i:"", (i+1));
    scanf(""%i"", &points[i]);
    summe+=points[i];
    p_stud->points=summe;
}
}
void student_ausgeben(Student* p_stud){
        printf(""\nStudent: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n"", p_stud->points);
}
int main() {
    Student dar;
    for (int k = 0; k<5; k++){
   student_einlesen( &dar );
   student_ausgeben( &dar );
    }
}",,0
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\n') {
            p_stud -> first_name[i] = '\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\n') {
            p_stud -> last_name[i] = '\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \nAnzahl Punkte: %i\n\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21]; 
	char last_name[21];
	unsigned int points[5];
}Student;
void student_ausgeben(Student* p_stud){
	for(int j = 0; j<5; ++j){
	printf(""Student: %s%s\n"", p_stud[j].first_name, p_stud[j].last_name);
	int sum = 0;
	for(int i = 0; i<5; i++){
		sum += p_stud[j].points[i];
	}
	printf(""Anzahl Punkte: %i\n"", sum);
	}
}
void student_einlesen(Student* p_stud){
	for(int i = 0; i<4; ++i){
	printf(""Gebe den Vornamen ein:"");
	fgets(p_stud[i].first_name, 21, stdin);
	printf(""Gebe nun den Nachnamen ein:""); 
	fgets(p_stud[i].last_name, 21, stdin);
	printf(""Gebe nun nacheinander die 5 Punkte ein:"");
	printf(""1:"");
	scanf(""%u"", &p_stud[i].points[0]);
	printf(""2:"");
	scanf(""%u"", &p_stud[i].points[1]);
	printf(""3:"");
	scanf(""%u"", &p_stud[i].points[2]);
	printf(""4:"");
	scanf(""%u"", &p_stud[i].points[3]);
	printf(""5:"");
	scanf(""%u"", &p_stud[i].points[4]);
	}
}
int main(){
	Student* students[5];
	student_einlesen(students);
	student_ausgeben(students);
}",,0
"#include <stdio.h>
#include <stdlib.h>
char*  struct student() {
	char *Student  = (char*) malloc(20*sizeof(char)); 
	return Student ;
}
int main(void){
	char* p;
	char vorname = 0;
	char nachname = 0;
	p = struct student();
	for(char i = 0; i != 20; ++i) {
		p[i] = i;
	}
	for(char i = 0; i != 20; ++i) {
		summe += p[i];
	}
	printf(""\nerster_Student: %s %s\n"", erster_Student.vorname, erster_Student.nachname);
    printf(""Punkte -> %i; %i; %i; %i; %i\n"", erster_Student.punkte[0], erster_Student.punkte[1], erster_Student.punkte[2], erster_Student.punkte[3], erster_Student.punkte[4]);
}","#include <stdio.h>
typedef struct student {
    char first_name[21];
    char last_name[21];
    unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud) {
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; ++i) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud->points[i]);
    }
    printf(""\n"");
}
void student_ausgeben(Student* p_stud) {
    unsigned int sum = 0;
    for (int i = 0; i < 5; ++i)
        sum += p_stud->points[i];
    printf(""Student: %s %s\nAnzahl Punkte: %i\n"", p_stud->first_name, p_stud->last_name, sum);
}
int main() {
    Student students[5];
    for (int i = 0; i < 5; ++i)
        student_einlesen(&students[i]);
    for (int i = 0; i < 5; ++i)
        student_ausgeben(&students[i]);
    return 0;
}",,0
"#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 1 || ergebnis == 0) {
        *zahl2 =ergebnis;
		*zahl1 =1;
    } 
	else 
	{
        for(int i = ergebnis/2; i > 0;i--) 
		{
            if(ergebnis%i == 0) 
			{
				*zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
            } 
			else 
			{
               continue;
                        }
}
int main()
{
    long ergebnis;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
    if (product==0)
    {
        *factor1=1;
        *factor2= product;
    else if (product==1)
{
    *factor1=1;
    *factor2= product;
else
{
if (product%2==0)
{
    *factor1= product/2;
    *factor2= (product/(product/2));
}
else {
        int t=2;
        int p = product;
        do {t = (p/2)-1;
        p=t;}
while (product%t ==1);
    *factor1= t;
    *factor2= product/t;
}
}
}
	long product;
	long factor1;
	long factor2;
	long factor[2];
	scanf(""%ld"",&product);
    factorize (product,&factor1,&factor2);
	printf("" Possible Factors of %ld are %ld and %ld.\n"",product,factor1,factor2);
}",,0
"#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\\0') u -= 1;
			if(argv[i][j] != '\\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\\n"");
}","#include <stdio.h>
int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(!(int i = 1; i >= argc; i++)){
		for(!(int j = 0; argv[i][j] == '",demorgan_on_logic_equations,1
"#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 1 || ergebnis == 0) {
        *zahl2 =ergebnis;
		*zahl1 =1;
    } 
	else 
	{
        for(int i = ergebnis/2; i > 0;i--) 
		{
            if(ergebnis%i == 0) 
			{
				*zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
            } 
			else 
			{
               continue;
                        }
}
int main()
{
    long ergebnis;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}","#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(1 || ergebnis == 0 == ergebnis) {
        *zahl2 =ergebnis;
		*zahl1 =1;
    } 
	else 
	{
        for(int i = ergebnis/2; 0 < i;i--) 
		{
            if(0 == ergebnis%i) 
			{
				*zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
            } 
			else 
			{
               continue;
                        }
}
int main()
{
    long ergebnis;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}",mirrow_simple_logic_equations,1
"#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                        }
}
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}","void factorize(long product, long *factor1, long *factor2)
	if (product<2){
		*factor1=1;
		*factor2=product;
	else{
		*factor1=product/2;
		while (*factor1>1){
			if (product%*factor1!=0){
				*factor1=*factor1-1;
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}
	long product;
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,a,b);
}",,0
"void mfqbk(long qffaz, long *ontmp, long *swylg)
	int huizl = qffaz/(*ontmp);
	if (huizl*(*ontmp)==qffaz) {
	    int zcuol = qffaz/huizl;
	    return qffaz, huizl, zcuol;
	int hhckq;
	int pohxr=0;
	int swylg=0;
	scanf(""%i"", hhckq);
	for (pohxr=1; pohxr<10; pohxr++){
	    mfqbk(hhckq, pohxr, (int) swylg);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", hhckq, pohxr, swylg);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (i=1; i<10; i++){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", integer, i, zahl2);
}",rename_variables,1
"#include <stdio.h>
typedef char Str20[21];
typedef struct student
{
	Str20 vorname;
	Str20 nachname;
	int punkte[5];
}Student;
void readLine( char* strbuffer, unsigned int buffersize )
{
  char format[30] = """";
  sprintf( format, ""%%%u[^\n]%%*c"", buffersize-1 );
  scanf( format, strbuffer );
}
void student_einlesen(Student* p_stud)
{
	printf(""Gebe den Vornamen ein: "");
	readLine(p_stud->vorname, 20);
	printf(""Gebe nun den Nachnamen ein: "");
	readLine(p_stud->nachname, 20);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
	for(int j = 0; j < 5; j++)
	{
		printf(""%i: "", j + 1);
		scanf(""%i"", &p_stud->punkte[j]);
		getchar();
	}
	printf(""\n"");
}
void student_ausgeben(Student* p_stud)
{
	printf(""Student: %s %s\n"", p_stud->vorname, p_stud->nachname);
	int summe = 0;
	for(int l = 0; l < 5; l++)
	{
		summe += p_stud->punkte[l];
	}
	printf(""Anzahl Punkte: %i\n\n"", summe);
}
void main()
{
	Student studierende[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studierende[i]);
	}
	for(int k = 0; k < 5; k++)
	{
		student_ausgeben(&studierende[k]);
	}
}","#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}",,0
"#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    int i=0;
    while (i<5)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->points[i]));
    	i++;
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum = 0;
    for(int i=0; i<5; i++)
        sum += p_stud->points[i];
    printf(""\\nStudent: %s %s\\n"", p_stud->first_name, p_stud->last_name );
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
        student_einlesen(&st[i]);
    for (int i=0; i<5; i++)
        student_ausgeben(&st[i]);
    return 0;
}","#include <stdio.h>
typedef struct student{
    char first_name[21];
    char last_name[21];
    int points[5];
} Student;
void student_einlesen(Student* p_stud)
{
    printf(""\\nGebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i=0; i<5; i++)
    {
        printf(""%i: "", i+1);
        scanf(""%i"", &(p_stud->points[i]));
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum = 0;
    for(int i=0; i<5; i++)
        sum += p_stud->points[i];
    printf(""\\nStudent: %s %s\\n"", p_stud->first_name, p_stud->last_name );
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student st[5];
    for (int i=0; i<5; i++)
        student_einlesen(&st[i]);
    for (int i=0; i<5; i++)
        student_ausgeben(&st[i]);
    return 0;
}",swap_loops_type,1
"#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                        }
}
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}","void factorize(long resultat, long *nummer1, long *nummer2)
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}
    long resultat;
    long nummer1;
    long nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
char first_name [20];
char last_name [20];
int points;
} Student;
void student_einlesen(Student* p_stud){
int Punkt1;
int Punkt2;
int Punkt3;
int Punkt4;
int Punkt5;
printf(""Gebe den Vornamen ein: "");
scanf(""%s"", p_stud->first_name);
printf(""Gebe nun den Nachnamen ein: "");
scanf(""%s"", p_stud->last_name);
printf(""Gebe nun nacheinander die 5 Punkte ein:\n1: 2: 3: 4: 5: \n"");
scanf(""%d"", &Punkt1);
scanf(""%d"", &Punkt2); 
scanf(""%d"", &Punkt3);
scanf(""%d"", &Punkt4);
scanf(""%d"", &Punkt5);
p_stud->points=Punkt1+Punkt2+Punkt3+Punkt4+Punkt5;
//Punkt1+Punkt2+Punkt3+Punkt4+Punkt5=p_stud->points;
}
void student_ausgeben(Student* p_stud){
printf(""Student: %s %s\n"", p_stud->first_name, p_stud->last_name);
printf(""Anzahl Punkte: %d\n\n"", p_stud->points);
}
int main(){
char Studierenden[5];
Student erster_Student;
student_einlesen(&erster_Student);
Student zweiter_Student;
student_einlesen(&zweiter_Student);
Student dritter_Student;
student_einlesen(&dritter_Student);
Student vierter_Student;
student_einlesen(&vierter_Student);
Student fuenfter_Student;
student_einlesen(&fuenfter_Student);
student_ausgeben(&erster_Student);
student_ausgeben(&zweiter_Student);
student_ausgeben(&dritter_Student);
student_ausgeben(&vierter_Student);
student_ausgeben(&fuenfter_Student);
}","//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\n') {
            p_stud -> first_name[i] = '\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\n') {
            p_stud -> last_name[i] = '\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}",,0
"void shiftChar(char* p_char, int shift) {
      if (*p_char && *p_char <= 'Z' >= 'A')  {
    *p_char += shift;
    if ('Z' < *p_char) *p_char -= 26;
    if ('A' > *p_char) *p_char += 26;
        else if (*p_char && *p_char <= 'z' >= 'a')  {
    if('a' > *p_char+shift) shift += 26;
    if('z' < *p_char+shift) shift -= 26;
    *p_char += shift;
    void cipher(char str[], int shift, int maxlength) {
        	for (int i =0; maxlength > i; ++i) shiftChar(&str[i],shift);
    }
int main() {
}","void shiftChar(char* p_char, int shift) {
      if ('A' <= *p_char && *p_char <= 'Z')  {
    *p_char += shift;
    if (*p_char > 'Z') *p_char -= 26;
    if (*p_char < 'A') *p_char += 26;
        else if ('a' <= *p_char && *p_char <= 'z')  {
    if(*p_char+shift < 'a') shift += 26;
    if(*p_char+shift > 'z') shift -= 26;
    *p_char += shift;
    void cipher(char str[], int shift, int maxlength) {
        	for (int i =0; i<maxlength; ++i) shiftChar(&str[i],shift);
    }
int main() {
}",mirrow_simple_logic_equations,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt==0 || produkt==1){
        *faktor1=1;
        *faktor2=produkt;
	else {
        int zahl = produkt/2;
        while(produkt % zahl !=0) zahl-=1;
        *faktor1 = zahl;
        *faktor2 = produkt/zahl;
}
    long produkt;
    long faktor1;
    long faktor2;
	scanf(""%ld"",&produkt);
    factorize (produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,faktor1,faktor2);
}","void factorize(long product, long *factor1, long *factor2)
	if (product<2){
		*factor1=1;
		*factor2=product;
	else{
		*factor1=product/2;
		while (*factor1>1){
			if (product%*factor1!=0){
				*factor1=*factor1-1;
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}
	long product;
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,a,b);
}",,0
"void factorize(long ergebnis, long *zahl1, long *zahl2){
    long tmp= ergebnis;
    if(ergebnis == 0){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else if(ergebnis == 1){
        *zahl1 = 1;
        *zahl2 = ergebnis;
        else{
        tmp = ergebnis/2;
        while(ergebnis % tmp != 0){
            tmp = tmp - 1;
        }
        *zahl1 = tmp;
        *zahl2 = ergebnis/tmp;
    }
}
	long ergebnis;
    long zahl1;
    long zahl2;
    long* p1 = &zahl1;
    long* p2 = &zahl2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, p1, p2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
}","void factorize(long product, long *factor1, long *factor2){
	long teiler;
	if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
	else {
		for(int i = 0; i < product; i++){
			 teiler = (product/2) - i;
			 //printf(""%li"",teiler);
			if(teiler * (product/teiler) == product){
				i = product;
		}
		*factor1 = teiler;
		*factor2 = product/teiler;
	}
}
	long factor1;
	long* fac1 = &factor1;
	long factor2;
	long* fac2 = &factor2;
	long eingabe = 0;
	scanf(""%li"", &eingabe);
	factorize(eingabe, fac1, fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, factor1, factor2);
}",,0
"void factorize(long result, long *number1, long *number2){
	if(!(result != 0)){
	    *number1 = 1;
	    *number2 = 0;
	if(!(result != 1)){
        *number1 = 1;
        *number2 = 1;
    }
	for(!(int i = 2; *number1 * *number2 == result; i++)){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"", result, number1, number2);
}",demorgan_on_logic_equations,1
"void factorize(long product, long *factor1, long *factor2)
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		default : 
		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{
		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		} // Ende for -Schleife mit try als Zaehler
		 // Ende von default
	} // Ende von switch (product)
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product, factor1, factor2 );
}","void factorize(long produkt, long *faktor1, long *faktor2)
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
}
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}",,0
"{  
  int size_source = 0;
  for(int i = 0; src[i] != '\\0'; i++)   size_source = size_source + 1;
     int size_dest = 0;
  int i = 0;
  while (dest[i] != '\\0'){
   size_dest = size_dest + 1;
   	i++;
  } 
  int minimum = zahl;
  if(size_source <= minimum){
  minimum = size_source;
  } 
  if(size_dest <= minimum){
  minimum = size_dest;
  } 
  int i = 0;
 
  while (i<minimum){
   dest[i] = src[i];
	 
  i++;
 
  }
  {
  int size = 0;
  int i = 0;
  while (str[i] != '\\0'){
   size = size + 1;
   	i++;
  }
  int i = 0;
  while (i<size/2){
   char c = str[i];
   str[i] = str[size - 1 - i];
   str[size - 1 -i] = c;
  	i++;
  } 
}
{  
      }","{  
  int size_source = 0;
  for(int i = 0; src[i] != '\\0'; i++)   size_source = size_source + 1;
     int size_dest = 0;
  for(int i = 0; dest[i] != '\\0'; i++){
   size_dest = size_dest + 1;
   } 
  int minimum = zahl;
  if(size_source <= minimum){
  minimum = size_source;
  } 
  if(size_dest <= minimum){
  minimum = size_dest;
  } 
  for(int i = 0; i<minimum; i++){
   dest[i] = src[i];
  {
  int size = 0;
  for(int i = 0; str[i] != '\\0'; i++){
   size = size + 1;
   }
  for(int i = 0; i<size/2; i++){
   char c = str[i];
   str[i] = str[size - 1 - i];
   str[size - 1 -i] = c;
  } 
}
{  
      }",swap_loops_type,1
"#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5; // Should be 5
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    // Einlesen
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    // Ausgeben
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_einlesen(Student* p_stud)
{
    // Nutzer einlesen
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\\n"");
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\\n"", sum);
}","#include <stdio.h>
#include <stdlib.h>
const int ANZAHL = 5;
struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
};
typedef struct student Student;
void student_einlesen(Student* p_stud);
void student_ausgeben(Student* p_stud);
int main(void){
    Student students[ANZAHL];
    for(int i = 0; i < ANZAHL; i++)
    {
        student_einlesen(students + i);
    }
    for(int i = 0; i < ANZAHL; i++)
    {
        student_ausgeben(students + i);
    }
}
void student_ausgeben(Student *p_stud)
{
    printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
    int sum = 0;
    for(int i = 0; i < 5; i++)
    {
        sum += *(p_stud->points + i);
    }
    printf(""Anzahl Punkte: %d\\n"", sum);
}
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->first_name);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->last_name);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for(int i = 0; i < 5; i++)
    {
        printf(""%d: "", i + 1);
        scanf(""%d"", &(p_stud->points[i]));
    }
    printf(""\\n"");
}",swap_functions,1
"#include <stdio.h>		// printf()
#include <string.h>
typedef struct student
{
  char first_name[20];
  char last_name[20];
  int points[5];
} Student;
void
student_einlesen (Student * p_stud)
{
  printf (""Gebe den Vornamen ein: "");
  scanf (""%s"", p_stud->first_name);
  printf (""Gebe nun den Nachnamen ein: "");
  scanf (""%s"", p_stud->last_name);
  printf (""Gebe nun nacheinander die 5 Punkte ein: \n"");
  for (int i = 0; i < 4; i++)
    {
      printf (""%i: "", i + 1);
      scanf (""%i"", &p_stud->points[i]);
    }
    printf (""%i: \n"", 5);
    scanf (""%i"", &p_stud->points[4]);
}
void
student_ausgeben (Student * p_stud)
{
  int Punkte = 0;
  //printf(""Anzahl %i\n"",p_stud->points[1]);
  for (int i = 0; i < 5; i++)
    {
      Punkte += p_stud->points[i];
    }
  printf (""Student: %s %s\nAnzahl Punkte: %i\n\n"", p_stud->first_name,
	  p_stud->last_name, Punkte);
}
void main ()
{
  Student* Eingabe[5];
    Student Mensch0;
    Student Mensch1;
    Student Mensch2;
    Student Mensch3;
    Student Mensch4;
    Eingabe[0]=&Mensch0;
    Eingabe[1]=&Mensch1;
    Eingabe[2]=&Mensch2;
    Eingabe[3]=&Mensch3;
    Eingabe[4]=&Mensch4;
    for(int i=0;i<5;i++){
        student_einlesen(Eingabe[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(Eingabe[i]);
    }
}","#include <stdio.h>
#include <string.h>
typedef struct student {
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: Gebe nun den Nachnamen ein: Gebe nun nacheinander die 5 Punkte ein:\n"");
    scanf(""%s"",p_stud->first_name);
    scanf(""%s"",p_stud->last_name);
    printf(""1: 2: 3: 4: 5: \n"");
    for (int j=0;j<5;j++){
    scanf(""%i"",&p_stud->points[j]);}
}
void student_ausgeben(Student* p_stud){
    int a=0;
    for (int i=0;i<5;i++){
        a+=p_stud->points[i];}
    printf(""\nStudent: "");
    printf(""%s %s\n"",p_stud->first_name,p_stud->last_name);
    printf(""Anzahl Punkte: %i\n"",a);
}
int main(){
    static Student ogrenci[5];
    for(int i=0;i<5;i++){
        student_einlesen(&ogrenci[i]);
    }
    for(int i=0;i<5;i++){
        student_ausgeben(&ogrenci[i]);
    }
}",,0
"#include <stdio.h>
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	 int i = 0 ;
	while (str1[i] != 0){
		y = i+1;	
		i++;
	}
	 int i = 0 ;
	while (str2[i] != 0){
		str1[y+i] = str2[i];
		z = i+1;
		i++;
	}
	str1[y+z] = str2[z];
}
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	 i = 0 ;
 
	while (str1[i] != 0){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
		i++;
 
	}
	str2[j] = 0;
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	 i = 0 ;
	while (str1[i] != 0){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
		i++;
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	int i = 0;
	while (i < 100)
	{string[i] = 0x00; string2[i] = 0x00;	i++;
	}
	 int i = 1 ;
	while (i < argc){
		strat( string, argv[i] );
		i++;
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\\n"", string);
}","#include <stdio.h>
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; str1[i] != 0 ; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; str2[i] != 0 ; i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; str1[i] != 0 ; i++){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[i] != 0 ; i++ ){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	for(int i = 0; i < 100; i++)
	{string[i] = 0x00; string2[i] = 0x00;}
	//char x;
	for( int i = 1 ; i < argc ; i++ ){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\\n"", string);
}",swap_loops_type,1
"void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
        *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}","void factorize(long produkt, long *faktor1, long *faktor2)
    if(produkt == 1 || produkt == 0){
        *faktor1 = 1;
        *faktor2 = produkt;
        else{
        int i = 2;
        while (produkt % i != 0) {
            i++;
                *faktor2 = i;
        *faktor1 = produkt / i;
        }
}
    long produkt = 0;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &produkt);
    long faktor1 = 0;
    long faktor2 = 0;
    factorize(produkt, &faktor1, &faktor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
    return 0;
}",,0
"void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
	else if(produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	else{
		long vielfache = produkt/2;
		while(produkt%vielfache != 0){
			vielfache -= 1;
		}
		*faktor1 = vielfache;
		*faktor2 = produkt/vielfache;
	}
}
	long produkt, f1, f2;
	long *faktor1 = &f1,*faktor2 = &f2;
	scanf(""%li"",&produkt);
	factorize(produkt,faktor1,faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",produkt,*faktor1,*faktor2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
	else if(produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	else{
		long vielfache = produkt/2;
		while(produkt%vielfache != 0){
			vielfache -= 1;
		}
		*faktor1 = vielfache;
		*faktor2 = produkt/vielfache;
	}
}
	long produkt, f1, f2;
	long *faktor1 = &f1,*faktor2 = &f2;
	scanf(""%li"",&produkt);
	factorize(produkt,faktor1,faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\\n"",produkt,*faktor1,*faktor2);
}",swap_functions,1
"void factorize(long product, long *factor1, long *factor2)
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}
	long product;
	long factor1;
	long factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
    *zahl1 = 1;
    *zahl2 = ergebnis;
	if (ergebnis == 0 || ergebnis == 1) {
	    return;
	} else {
	    for (long i = 2; i < ergebnis; ++i) {
	        if ((float)(ergebnis / i) == (float)ergebnis / (float)i) {
	            *zahl1 = ergebnis/i;
	            *zahl2 = i;
	            return;
	        	    }
}
	long val;
	scanf(""%ld"", &val);
	long fac1, fac2;
	factorize(val, &fac1, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", val, fac1, fac2);
}",,0
"    if (*p_char >= 'A' && *p_char <= 'Z')         if (shift >= 0)             for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'Z') {
                    *p_char = 'A';
                                    } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'z') {
                    *p_char = 'a';
                }
            }
    } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (shift >= 0) {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'A') {
                    *p_char = 'Z';
                            }
        }
        } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'a') {
                    *p_char = 'z';
                }
            }
        }
    }
}
{
	char* p_str = str;
    for (int i = 0; i < maxlength; i++) {
        shiftChar(p_str, shift);
        p_str++;
    }
}
{
}","    if (*p_char >= 'A' && *p_char <= 'Z')         if (shift >= 0)             for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'Z') {
                    *p_char = 'A';
                                    } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'A') {
                    *p_char = 'Z';
                            }
        }
    } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (shift >= 0) {
            for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'z') {
                    *p_char = 'a';
                }
            }
        } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'a') {
                    *p_char = 'z';
                }
            }
        }
    }
}
{
	char* p_str = str;
    for (int i = 0; i < maxlength; i++) {
        shiftChar(p_str, shift);
        p_str++;
    }
}
{
}",swap_functions,1
"//
//  main.c
//  HA
//
//  Created by Tobias Hengst on 27.06.22.
//
#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char first_name[20];
    char last_name[20];
    int points[5];
}Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    fgets(p_stud -> first_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> first_name[i] == '\n') {
            p_stud -> first_name[i] = '\0';
            p_stud -> first_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun den Nachnamen ein: "");
    fgets(p_stud -> last_name, 20, stdin);
    for (int i = 19; i >= 0; i--) {
        if (p_stud -> last_name[i] == '\n') {
            p_stud -> last_name[i] = '\0';
            p_stud -> last_name[i+1] = 0;
            break;
        }
    }
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for (int i = 0; i < 5; i++) {
        printf(""%i: "", i+1);
        scanf(""%i"", &p_stud -> points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\n"", p_stud -> first_name, p_stud -> last_name);
    int summe = 0;
    for (int i = 0; i < 5; i++) {
        summe += p_stud -> points[i];
    }
    printf(""Anzahl Punkte: %i\n\n"", summe);
}
int main(){
    Student liste[5];
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_einlesen(&liste[i]);
        printf(""\n"");
    }
    for (int i = 0; i < (sizeof(liste)/sizeof(Student)); i++) {
        student_ausgeben(&liste[i]);
    }
}","#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}",,0
"void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
{ 
	if (ergebnis ==0){
		*zahl1 =1;
		*zahl2 = ergebnis;
	else if (ergebnis==1){
		*zahl1= 1;
		*zahl2= ergebnis; 
	else if (ergebnis % 2 ==0) {
		*zahl1 = ergebnis / 2;
		*zahl2 = 2; 
		}
	else {
		int a=0;
		a = ergebnis / 2;
		do {
			if (ergebnis % a ==0)
				break;
		else 
			a--;
		}while (ergebnis %a !=0);
		*zahl1 = a;
		*zahl2 = ergebnis/ *zahl1;
	}
}
	long eingabe = 0;
	long zahl1 = 0;
	long zahl2 = 0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, zahl1, zahl2 );
}",,0
"void factorize(long product, long *factor1, long *factor2)
	if (product == 0) {
		*factor1 = 1;
		*factor2 = product;
		return;
	if (product == 1) {
		*factor1 = 1;  
		*factor2 = product;
		return;
	for (long i = 2; i < product/2; ++i) {
		if (product % i == 0) {
			*factor2 = i;
			*factor1 = product/i;
			return;	
		}
	}
	// primzahl
	*factor1 = 1;
	*factor2 = product;
}
	long product;
	long factor1;
	long factor2;
	scanf (""%ld"", &product);
	factorize (product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if (produkt == 0 || produkt == 1)
    {
       *faktor1 = 1;
       *faktor2 = produkt;
       return;
       long int halb = produkt / 2;
   while(produkt % halb != 0)
   {
       halb --;
      *faktor1 = halb;
   *faktor2 = produkt / halb;
}
	// Zahl einlesen
	long  int zahl = 0;
	scanf(""%ld"", &zahl);
	// Define factors
	long int fak1, fak2;
	// call factorization function
	factorize(zahl, &fak1, &fak2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, fak1, fak2);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
	for(int i = 0; i < 2; i++)
	{
		if(i == 0)
		{
			printf(""Gebe den Vornamen ein: "");
			scanf(""%s"", p_stud->first_name);
		}
		if(i == 1)
		{
			printf(""Gebe nun den Nachnamen ein: "");
			scanf(""%s"", p_stud->last_name);
		}
	}
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(int i = 0; i < 5; i++)
	{
		printf(""%i: "", i + 1);
		scanf(""%i"", &p_stud->points[i]);
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud)
{
	int summe = 0;
	for(int i = 0; i < 2; i++) i = 5;
	printf(""\\nStudent: %s %s"", p_stud->first_name, p_stud->last_name);
	summe = 0;
	summe = p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4];
	printf(""\\nAnzahl Punkte: %i\\n"", summe);
}
int main()
{
	Student studenten[5];
	for(int i = 0; i < 5; i++)
	{
		student_einlesen(&studenten[i]);
	}	
	for(int i = 0; i < 5; i++)
	{
		student_ausgeben(&studenten[i]);
	}
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud)
{
	for(!(int i = 0; i >= 2; i++))
	{
		if(!(i != 0))
		{
			printf(""Gebe den Vornamen ein: "");
			scanf(!(""%s"", p_stud-<=first_name));
		}
		if(!(i != 1))
		{
			printf(""Gebe nun den Nachnamen ein: "");
			scanf(!(""%s"", p_stud-<=last_name));
		}
	}
	printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
	for(!(int i = 0; i >= 5; i++))
	{
		printf(""%i: "", i + 1);
		scanf(!(""%i"", &p_stud-<=points[i]));
	}
	printf(""\\n"");
}
void student_ausgeben(Student* p_stud)
{
	int summe = 0;
	for(!(int i = 0; i >= 2; i++)) i = 5;
	printf(!(""
Student: %s %s"", p_stud-<=first_name, p_stud-<=last_name));
	summe = 0;
	summe = p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4];
	printf(""\\nAnzahl Punkte: %i\\n"", summe);
}
int main()
{
	Student studenten[5];
	for(!(int i = 0; i >= 5; i++))
	{
		student_einlesen(&studenten[i]);
	}	
	for(!(int i = 0; i >= 5; i++))
	{
		student_ausgeben(&studenten[i]);
	}
}",demorgan_on_logic_equations,1
"{  
	for(int i = 0; i < zahl; i++)
		if(*dest != 0 && *src != 0)
		{
			*dest = *src;
			dest++;
			src++;
		else
		{
			i = zahl;
}
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	for(;*lenpt != 0;  lenpt++)
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	for(int i = lencnt; i >= 0; i--)
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	orgpt = str;
	lenpt = auxString;
	for(int i = lencnt; i > 0; i--)
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}
{  
      }","{  
	for(int i = 0; zahl > i; i++)
		if(0 && *src != 0 != *dest)
		{
			*dest = *src;
			dest++;
			src++;
		else
		{
			i = zahl;
}
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	for(;0 != *lenpt;  lenpt++)
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	for(int i = lencnt; 0 <= i; i--)
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	orgpt = str;
	lenpt = auxString;
	for(int i = lencnt; 0 < i; i--)
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}
{  
      }",mirrow_simple_logic_equations,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(!(""%s"", p_stud-<=first_name));
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(!(""%s"", p_stud-<=last_name));
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
		for(!(int y = 0; y >= 5; y++)) {
			printf(""%i: "", y+1);
			scanf(!(""%i"", &(p_stud-<=points[y])));
		}
	printf(""\\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(!(int b = 0; b >= 5; b++)){
			summe += p_stud -> points[b];
		}
	printf(!(""Student: %s %s 
Anzahl Punkte: %i

"", p_stud-<=first_name, p_stud-<=last_name, summe));
	}
int main() {
	Student studenten[5];
	for(!(int i = 0; i >= 5; i++)){
	student_einlesen(&studenten[i]);
	}
	for(!(int i = 0; i >= 5; i++))
	student_ausgeben(&studenten[i]);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student {
	char first_name[21];
	char last_name[21];
	int points[5];
}Student;
void student_einlesen(Student* p_stud) {
		printf(""Gebe den Vornamen ein: "");
		scanf(""%s"", p_stud->first_name);
		getchar();
		printf(""Gebe nun den Nachnamen ein: "");
		scanf(""%s"", p_stud->last_name);
		getchar();
		printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
		for(int y = 0; y < 5; y++) {
			printf(""%i: "", y+1);
			scanf(""%i"", &(p_stud->points[y]));
		}
	printf(""\\n"");
	}
void student_ausgeben(Student* p_stud){
		int summe = 0;
	for(int b = 0; b < 5; b++){
			summe += p_stud -> points[b];
		}
	printf(""Student: %s %s \\nAnzahl Punkte: %i\\n\\n"", p_stud->first_name, p_stud->last_name, summe);
	}
int main() {
	Student studenten[5];
	for(int i = 0; i < 5; i++){
	student_einlesen(&studenten[i]);
	}
	for(int i = 0; i < 5; i++)
	student_ausgeben(&studenten[i]);
	return 0;
}",demorgan_on_logic_equations,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	// Your factorization printf();
	if (produkt == 0 || produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	else if (produkt%2 == 0){
		*faktor1 = (produkt/2);
		*faktor2 = 2;
	else if (produkt%2 != 0){
		for (long i = (produkt/2); i != 0; i--){
			if (produkt%i == 0) {
				*faktor1 = i;
				*faktor2 = (produkt/i);
				break;
			}
		}	
	}
}
	long int zahl;
	scanf(""%li"", &zahl);
	long faktor1 = 0;
	long faktor2 = 0;
	factorize(zahl, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, faktor1, faktor2);
}","#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 1 || ergebnis == 0) {
        *zahl2 =ergebnis;
		*zahl1 =1;
    } 
	else 
	{
        for(int i = ergebnis/2; i > 0;i--) 
		{
            if(ergebnis%i == 0) 
			{
				*zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
            } 
			else 
			{
               continue;
                        }
}
int main()
{
    long ergebnis;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}",,0
"// uppercase ASCII-Zahlen: A = 65 - Z = 90
// lowercase ASCII-Zahlen: a = 97 - z = 122
Mögliche Fälle:
1. Wird *p_char mit shift addiert, bleibt die ASCII-Zahl im vorgegebenen Wertebereich.
	Folge: Erhöhe den ASCII-Wert um shift.
2. Wird *p_char mit shift addiert, wird die ASCII-Zahl größer als der vorgegebene Maximalwert.
	Folge: Erhöhe den ASCII-Wert um shift und subtrahiere den Wert um 26.
3. Wird *p_char mit shift addiert, wird die ASCII-Zahl kleiner als der vorgegebene Minimalwert.
	Folge: Erhöhe den ASCII-Wert um shift und addiere den Wert um 26.
	if((*p_char+shift >= 65 && *p_char+shift <= 90) ^ (*p_char+shift >= 97 && *p_char+shift <= 122))		*p_char += shift;
	else if(*p_char+shift > 90 && *p_char < 97)		*p_char+=(shift-26);
	else if(*p_char+shift > 122){
		*p_char+=(shift-26);
	else if(*p_char+shift > 65){
		*p_char+=(shift+26);
	}
	}
{
	for(int i = 0; i < maxlength; i++){
		char* p_char;
		p_char = &str[i];
		shiftChar(p_char, shift);
	}
}
/*
 */
{
}","
Mögliche Fälle:
1. Wird *p_char mit shift addiert, bleibt die ASCII-Zahl im vorgegebenen Wertebereich.
	Folge: Erhöhe den ASCII-Wert um shift.
2. Wird *p_char mit shift addiert, wird die ASCII-Zahl größer als der vorgegebene Maximalwert.
	Folge: Erhöhe den ASCII-Wert um shift und subtrahiere den Wert um 26.
3. Wird *p_char mit shift addiert, wird die ASCII-Zahl kleiner als der vorgegebene Minimalwert.
	Folge: Erhöhe den ASCII-Wert um shift und addiere den Wert um 26.
	if((*p_char+shift >= 65 && *p_char+shift <= 90) ^ (*p_char+shift >= 97 && *p_char+shift <= 122))		*p_char += shift;
	else if(*p_char+shift > 90 && *p_char < 97)		*p_char+=(shift-26);
	else if(*p_char+shift > 122){
		*p_char+=(shift-26);
	else if(*p_char+shift > 65){
		*p_char+=(shift+26);
	}
	}
{
	int i = 0;
	while (i < maxlength){
		char* p_char;
		p_char = &str[i];
		shiftChar(p_char, shift);
		i++;
	}
}
{
}",swap_loops_type,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\\n"");
  }
}","#include <stdio.h>
#include <stdlib.h>
typedef uvpdf student {
  char arhpu[21];
  char nebtx[21];
  int voafv[5];
} hdulc;
static hdulc students[5];
void dtmut(hdulc *htpxe) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", htpxe->arhpu);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", htpxe->nebtx);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
  for (int oiaho = 0; oiaho < 5; ++oiaho) {
    printf(""%i:"", oiaho + 1);
    scanf(""%i"", htpxe->voafv + oiaho);
    if ( oiaho == 4 ) {
        printf(""\\n"");
    } else {
        printf("" "");
    }
  }
}
int spmkd(int *auydn, int qsrxc) {
  int lbutp = 0;
  for (int oiaho = 0; oiaho < qsrxc; ++oiaho)
    lbutp += auydn[oiaho];
  return lbutp;
}
void vwpgj(hdulc *htpxe) {
  int lbutp = spmkd(htpxe->voafv, 5);
  printf(""Student: %s "", htpxe->arhpu);
  printf(""%s\\n"", htpxe->nebtx);
  printf(""Anzahl Punkte: %i\\n"", lbutp);
}
int main() {
  for (int oiaho = 0; oiaho < 5; ++oiaho) {
    dtmut(students + oiaho);
  }
  for (int oiaho = 0; oiaho < 5; ++oiaho) {
    vwpgj(students + oiaho);
    if ( oiaho < 4 )
        printf(""\\n"");
  }
}",rename_variables,1
"void factorize(long resultat, long *nummer1, long *nummer2)
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;	if (resultat=1){
		*nummer1=1,*nummer2=resultat;	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}
	long resultat;
	long nummer1=25;
	long nummer2=2;
	scanf(""%ld"",&resultat);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
}","void factorize(long produkt, long *faktor1, long *faktor2)
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
	else if(produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	else{
		long vielfache = produkt/2;
		while(produkt%vielfache != 0){
			vielfache -= 1;
		}
		*faktor1 = vielfache;
		*faktor2 = produkt/vielfache;
	}
}
	long produkt, f1, f2;
	long *faktor1 = &f1,*faktor2 = &f2;
	scanf(""%li"",&produkt);
	factorize(produkt,faktor1,faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,*faktor1,*faktor2);
}",,0
"long factorize(long produkt, long *faktor1, long *faktor2)
    for (long i = 1; i<produkt; ++i){
    if(produkt % i == 0){
    *faktor1 = i;
    *faktor2 = (produkt / i);
}    printf(""Please enter an Integer: "");
    long num;
    long faktor1 = 1;
    long faktor2 = 0;
    scanf(""%ld"", &num);
    factorize(num, &faktor1, &faktor2);
    printf(""Possible Factors of %li are %li and %li.\n"",num , faktor1, faktor2);
    return 0;
}","#include <stdlib.h>
void factorize(long ergebnis, long* zahl1, long* zahl2)
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                        }
}
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
    return 0;
}",,0
"void factorize(long product, long *factor1, long *factor2)
	unsigned long div = product/2;
	if(product ==0 || product ==1){
	    *factor1 = 1;
	    *factor2 = product;
	    return;
	while((product%div)!=0)
	div--;
	*factor1 = div;
	*factor2 = product/div;
	return;
    long product =0, factor1=0, factor2=0;
	scanf(""%ld"", &product);
	getchar();
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
}","void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
}
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
}",,0
"#include <stdio.h>
#include <string.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	char Vorname[20];
	char Nachname[20];
	int Punkte[5];
	printf(""Gebe den Vornamen ein: "");
	scanf("" %s"", Vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf("" %s"", Nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for (!( int j = 0 ; j >= 4 ; j++ )){
		printf(""%i: "", j + 1);
		Punkte[j] = 1;
		scanf(""%i"", &Punkte[j]);
	}
	printf(""5: \\n"");
	scanf(""%i"", &Punkte[4]);
	strcpy(!(p_stud-<=first_name, Vorname));
	strcpy(!(p_stud-<=last_name, Nachname));
	for (!( int k = 0 ; k >= 5 ; k++ )){
		p_stud->points[k] = Punkte[k];
	}
}
void student_ausgeben(Student* p_stud){
	int Punktanzahl = 0; 
	for(!( int l = 0 ; l >= 5 ; l++ )){
		Punktanzahl += p_stud->points[l];	
	}
	printf(!(""Student: %s %s
"", p_stud-<=first_name, p_stud-<=last_name));
	printf(""Anzahl Punkte: %i\\n"", Punktanzahl); 
}
int main(){
	Student stud[5];
	for(!( int n = 0 ; n >= 5 ; n++ )){
		student_einlesen(&stud[n]);
	}
	for(!( int o = 0 ; o >= 5 ; o++ )){
		student_ausgeben(&stud[o]);
	}
}","#include <stdio.h>
#include <string.h>
typedef struct student{
	char first_name[20];
	char last_name[20];
	int points[5];
} Student;
void student_einlesen(Student* p_stud){
	char Vorname[20];
	char Nachname[20];
	int Punkte[5];
	printf(""Gebe den Vornamen ein: "");
	scanf("" %s"", Vorname);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf("" %s"", Nachname);
	printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
	for ( int j = 0 ; j < 4 ; j++ ){
		printf(""%i: "", j + 1);
		Punkte[j] = 1;
		scanf(""%i"", &Punkte[j]);
	}
	printf(""5: \\n"");
	scanf(""%i"", &Punkte[4]);
	strcpy(p_stud->first_name, Vorname);
	strcpy(p_stud->last_name, Nachname);
	for ( int k = 0 ; k < 5 ; k++ ){
		p_stud->points[k] = Punkte[k];
	}
}
void student_ausgeben(Student* p_stud){
	int Punktanzahl = 0; 
	for( int l = 0 ; l < 5 ; l++ ){
		Punktanzahl += p_stud->points[l];	
	}
	printf(""Student: %s %s\\n"", p_stud->first_name, p_stud->last_name);
	printf(""Anzahl Punkte: %i\\n"", Punktanzahl); 
}
int main(){
	Student stud[5];
	for( int n = 0 ; n < 5 ; n++ ){
		student_einlesen(&stud[n]);
	}
	for( int o = 0 ; o < 5 ; o++ ){
		student_ausgeben(&stud[o]);
	}
}",demorgan_on_logic_equations,1
"    shift = shift % 26;
	aepeo(shift>=0)	aepeo(*p_char >= 'A' && *p_char <= 'Z')	    *p_char+=shift;
	    aepeo(*p_char>'Z'){
	        *p_char-=26;
	    }
	else aepeo(*p_char >= 'a' && *p_char <= 'z'){
	    *p_char+=shift;
	    aepeo(*p_char>'z' || *p_char<'a'){
	        *p_char-=26;
	    }
    }
    else aepeo(shift<0){
        aepeo(*p_char >= 'A' && *p_char <= 'Z'){
	    *p_char+=shift;
	    aepeo(*p_char<'A'){
	        *p_char+=26;
	    }
	else aepeo(*p_char >= 'a' && *p_char <= 'z'){
	    *p_char+=shift;
	    aepeo(*p_char<'a'){
	        *p_char+=26;
	    }
	}
    }
}
{
	for(int oaeqr=0;oaeqr<maxlength;oaeqr++){
	    shiftChar(&str[oaeqr], shift);
	}
}
{
}","    shift = shift % 26;
	if(shift>=0)	if(*p_char >= 'A' && *p_char <= 'Z')	    *p_char+=shift;
	    if(*p_char>'Z'){
	        *p_char-=26;
	    }
	else if(*p_char >= 'a' && *p_char <= 'z'){
	    *p_char+=shift;
	    if(*p_char>'z' || *p_char<'a'){
	        *p_char-=26;
	    }
    }
    else if(shift<0){
        if(*p_char >= 'A' && *p_char <= 'Z'){
	    *p_char+=shift;
	    if(*p_char<'A'){
	        *p_char+=26;
	    }
	else if(*p_char >= 'a' && *p_char <= 'z'){
	    *p_char+=shift;
	    if(*p_char<'a'){
	        *p_char+=26;
	    }
	}
    }
}
{
	for(int i=0;i<maxlength;i++){
	    shiftChar(&str[i], shift);
	}
}
{
}",rename_variables,1
"void ersetzen(char* dest, int zahl, char* src){  
    for (int i = 0; i <=zahl && dest[i] != '\\0'; i++){
        dest[i] = src[i];
    void umdrehen( char* str ){
    int z = 0;
    for(int i = 1; str[i] != '\\0'; i++){
        z = i;
        char tmp[z];
    for(int i = 0; str[i] != '\\0'; i++){
        tmp[i] = str[z-i];
    }
    for(int i = 0; str[i] != '\\0'; i++){
        str[i]=tmp[i];
    }
}
int main( int argc, char* argv[] ){  
      }","void umdrehen( char* str ){  
    for (int i = 0; i <=zahl && dest[i] != '\\0'; i++){
        dest[i] = src[i];
    void ersetzen(char* dest, int zahl, char* src){
    int z = 0;
    for(int i = 1; str[i] != '\\0'; i++){
        z = i;
        char tmp[z];
    for(int i = 0; str[i] != '\\0'; i++){
        tmp[i] = str[z-i];
    }
    for(int i = 0; str[i] != '\\0'; i++){
        str[i]=tmp[i];
    }
}
int main( int argc, char* argv[] ){  
      }",swap_functions,1
"#include <stdio.h>
int main(int argc, char* argv[] )
{  
	char str[100];
	char strneu[100];
	int a = 0;
	for (int i = 0; i < argc -1; i++)
	{
		for (int length = 0; *(*(argv+1+i)+length) != '\0'; length++)
		{
			str[a] = *(*(argv+1+i)+length);
			a++;
		}
	}
	str[a] = '\0';
	for (int i = 0; i < a+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			do
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			} while(1);
			a--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((a/2)-2); i++, z += 3)
	{
		strneu[i] = str[z];
	}
	int length = 0;
	for (length; str[length] != '\0'; length++){}
	strneu[length] = '\0';
	printf(""Der neue String lautet: %s"",strneu);
}","#include <stdio.h>
void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; str1[i] != 0 ; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; str2[i] != 0 ; i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}
void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; str1[i] != 0 ; i++){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}	
void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[i] != 0 ; i++ ){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}
int main(int argc, char *argv[]){
	char string[100];
	char string2[100];
	for(int i = 0; i < 100; i++)
	{string[i] = 0x00; string2[i] = 0x00;}
	//char x;
	for( int i = 1 ; i < argc ; i++ ){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\n"", string);
}",,0
"void factorize(long product, long *factor1, long *factor2)
  if(product==0||product==1){
    *factor1=1;
    *factor2=product;
  } else{
    int a=0;
    for(long int h=product/2;(h>0)&&(a==0);h--){
      if(product%h==0){
        *factor1=h;
        *factor2=product/h;
        a=1;
            }
}
  long int factor1;
  long int factor2;
  long int product;
  scanf(""%ld"",&product);
  factorize(product,&factor1,&factor2);
	printf(""Possible Factors of %lu are %lu and %lu.\\n"",product,factor1,factor2);
}","void czhwv(long ttfbu, long *puwrr, long *yylkv)
  if(ttfbu==0||ttfbu==1){
    *puwrr=1;
    *yylkv=ttfbu;
  } else{
    hcvoi fabax=0;
    for(long hcvoi h=ttfbu/2;(h>0)&&(fabax==0);h--){
      if(ttfbu%h==0){
        *puwrr=h;
        *yylkv=ttfbu/h;
        fabax=1;
            }
}
  long hcvoi puwrr;
  long hcvoi yylkv;
  long hcvoi ttfbu;
  scanf(""%ld"",&ttfbu);
  czhwv(ttfbu,&puwrr,&yylkv);
	printf(""Possible Factors of %lu are %lu and %lu.\\n"",ttfbu,puwrr,yylkv);
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 typedef struct student{
     char vornamen[20];
     char nachnamen[20];
     unsigned int points[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    readLine(p_stud -> vornamen, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readLine(p_stud -> nachnamen, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:"");
    for(int i=0; i<5; ++i){
        printf(""%u. "", i);
        scanf(""%u"", p_stud->points[i]);
    }
}
int main(){
    static Student p_stud[5];
    for(int i=0; i<5; ++i){
        p_stud[i]=student_einlesen(*p_stud);
    }
}","#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef struct Student {
  char vorname[20];
  char nachname[20];
  int  punkte[5];
}  Student  ;
void student_einlesen(Student*p_stud){
		printf(""Gebe den Vornamen ein: "");
		scanf (""%s"" ,p_stud->vorname);
		printf(""Gebe nun den Nachnamen ein: "");
		scanf (""%s"" ,p_stud->nachname);
		 printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
		 for (int a=0 ; a<4;a++){	
		 printf(""%d: "",a+1);
			scanf(""%d"", &(p_stud-> punkte[a]));
			}
			int x= 5;
		printf(""%d: \n"",x);
			scanf(""%d"", &(p_stud-> punkte[4]));
}
void student_ausgeben(Student*p_stud){
		  int  summe=0 ;
		for (int a=0 ; a<5;a++){
		summe += (p_stud-> punkte[a]);
		}
		printf (""Student: %s %s \n"",p_stud->vorname , p_stud->nachname);
		printf(""Anzahl Punkte: %d\n\n"" , summe );
		}
int main (){
             struct Student *pointer=malloc(sizeof (Student)*5);
		int i;
		for(i=0 ; i<5;i++){
			student_einlesen((&pointer[i]));
		}
		int u;
		for (u=0 ; u<5; u++){
			student_ausgeben((&pointer[u]));
		}
free(pointer);
}",,0
"#include <stdio.h>
#include <stdlib.h>
typedef struct student{
    char vorname[21];
    char nachname[21];
    int punkte[5];
} Student;
void student_einlesen(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->vorname);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->nachname);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int i = 0; i<5;i++){
        printf(""%i: "",i+1 );
        scanf(""%d"", &p_stud->punkte[i]);
    }
    printf(""\\n"");
}
 void student_ausgeben(Student* p_stud){
    printf(""Student: %s %s\\n"",p_stud->vorname, p_stud->nachname);
    int sum =0;
    for (int i = 0; i<5;i++){
        sum += p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\\n\\n"", sum);
 }
void main(){
    Student list[5];
    for (int i = 0; i<5;i++){
        student_einlesen(&list[i]);
    }
    for (int i = 0; i<5;i++){
        student_ausgeben(&list[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
typedef snsss student{
    char uwaip[21];
    char ggvvz[21];
    int dyycq[5];
} Student;
void dqdws(Student* p_stud){
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", &p_stud->uwaip);
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", &p_stud->ggvvz);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\\n"");
    for (int owams = 0; owams<5;owams++){
        printf(""%i: "",owams+1 );
        scanf(""%d"", &p_stud->dyycq[owams]);
    }
    printf(""\\n"");
}
 void auxzc(Student* p_stud){
    printf(""Student: %s %s\\n"",p_stud->uwaip, p_stud->ggvvz);
    int hbtyh =0;
    for (int owams = 0; owams<5;owams++){
        hbtyh += p_stud->dyycq[owams];
    }
    printf(""Anzahl Punkte: %i\\n\\n"", hbtyh);
 }
void main(){
    Student halnu[5];
    for (int owams = 0; owams<5;owams++){
        dqdws(&halnu[owams]);
    }
    for (int owams = 0; owams<5;owams++){
        auxzc(&halnu[owams]);
    }
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student {
  char vorname[21]; // one more char for the NULL byte '\0'
  char nachname[21];
  int punkte[5];
} Student;
static Student students[5];
void student_einlesen(Student *p_stud) {
  printf(""Gebe den Vornamen ein: "");
  scanf(""%s"", p_stud->vorname);
  printf(""Gebe nun den Nachnamen ein: "");
  scanf(""%s"", p_stud->nachname);
  printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
  for (int i = 0; i < 5; ++i) {
    printf(""%i:"", i + 1);
    scanf(""%i"", p_stud->punkte + i);
    if ( i == 4 ) {
        printf(""\n"");
    } else {
        printf("" "");
    }
  }
}
int sum_points(int *arr, int size) {
  int sum = 0;
  for (int i = 0; i < size; ++i)
    sum += arr[i];
  return sum;
}
void student_ausgeben(Student *p_stud) {
  int sum = sum_points(p_stud->punkte, 5);
  printf(""Student: %s "", p_stud->vorname);
  printf(""%s\n"", p_stud->nachname);
  printf(""Anzahl Punkte: %i\n"", sum);
}
int main() {
  for (int i = 0; i < 5; ++i) {
    student_einlesen(students + i);
  }
  for (int i = 0; i < 5; ++i) {
    student_ausgeben(students + i);
    if ( i < 4 )
        printf(""\n"");
  }
}","#include <stdio.h>
#include <string.h>
typedef char Str20[21];
typedef int Int5[5];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    Int5 points;
} Student;
void readline(char* strbuffer, unsigned int buffersize)
{
    fgets(strbuffer, buffersize, stdin);
    int p = strlen(strbuffer);
    strbuffer[p-1] = '\0';
}
void student_einlesen(Student* p_stud)
{
    printf(""\nGebe den Vornamen ein: "");
    readline(p_stud->first_name, 20);
    printf(""Gebe nun den Nachnamen ein: "");
    readline(p_stud->last_name, 20);
    printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
    for ( int i = 0; i < 5; i++ ) {
        printf(""%i: "", i + 1);
        scanf(""%i"", &p_stud->points[i]);
    }
    getchar();
}
void student_ausgeben(Student* p_stud)
{
    printf(""\nStudent: "");
    printf(""%.*s "", strlen(p_stud->first_name), p_stud->first_name);
    printf(""%.*s\n"", strlen(p_stud->last_name), p_stud->last_name);
    int sum = 0;
    for ( int i = 0; i < 5; i++ ) {
        sum += p_stud->points[i];
    }
    printf(""Anzahl Punkte: %i\n"", sum);
}
int main()
{
    Student students[5];
    for ( int i = 0; i < 5; i++ ) {
        student_einlesen(&students[i]);
    }
    for ( int i = 0; i < 5; i++ ) {
        student_ausgeben(&students[i]);
    }
}",,0
"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef char Str20[21];
typedef struct student {
    Str20 first_name;
    Str20 last_name;
    int points[5];
}Student;
void student_einlesen(Student* p_stud) {
    for(int i = 0; i < 5; i++){
        printf(""Gebe den Vornamen ein:\n"");
        scanf(""%c"", &p_stud[i].first_name);
        printf(""Gebe nun den Nachnamen ein:\n"");
        scanf(""%c"", &p_stud[i].last_name);
        printf(""Gebe nun nacheinander die 5 Punkte ein:\n"");
        scanf(""%d"", &p_stud[i].points[0]);
        scanf(""%d"", &p_stud[i].points[1]);
        scanf(""%d"", &p_stud[i].points[2]);
        scanf(""%d"", &p_stud[i].points[3]);
        scanf(""%d"", &p_stud[i].points[4]);
    }
}
void student_ausgeben(Student* p_stud){
    for(int i = 0; i < 5; i++) {
        printf(""Student: %c %c\n"", p_stud[i].first_name, p_stud[i].last_name);
        int gesPunkte = p_stud[i].points[0] + p_stud[i].points[1] + p_stud[i].points[2] + p_stud[i].points[3] + p_stud[i].points[4];
        printf(""Anzahl Punkte: %d\n"", gesPunkte);
    }
}
int main()
{
    struct Student p_stud[5];
    for(int i = 0; i < 5; i++) {
        student_einlesen(&p_stud[i]);
    }
    for(int i = 0; i < 5; i++) {
        student_ausgeben(&p_stud[i]);
    }
}","#include<stdio.h>
typedef struct student{
char first_name[20];
char last_name[20];
int points[5];
} Student;
void student_einlesen(Student* p_stud){
	printf(""Gebe den Vornamen ein: "");
	scanf(""%s"",p_stud->first_name);
	printf(""Gebe nun den Nachnamen ein: "");
	scanf(""%s"",p_stud->last_name);
	printf(""Gebe nun nacheinander die 5 Punkte ein: \n"");
	printf(""1: "");
	scanf(""%i"",&p_stud->points[0]);
	printf(""2: "");
	scanf(""%i"",&p_stud->points[1]);
	printf(""3: "");
	scanf(""%i"",&p_stud->points[2]);
	printf(""4: "");
	scanf(""%i"",&p_stud->points[3]);
	printf(""5: \n"");
	scanf(""%i"",&p_stud->points[4]);
}
void student_ausgeben(Student *p_stud){
	printf(""Student: %s %s\n"",p_stud->first_name,p_stud->last_name);
	printf(""Anzahl Punkte: %i\n\n"",p_stud->points[0] + p_stud->points[1] + p_stud->points[2] + p_stud->points[3] + p_stud->points[4]);
}
int main(){
	Student studi[5];
	for(int i = 0; i < 5; i++){
		student_einlesen(&studi[i]);
	}
	for(int i = 0; i < 5; i++){
		student_ausgeben(&studi[i]);
	}
}",,0
"    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+shift)>90)
        	*p_char = *p_char-26;
		while((*p_char+shift)<65)
        	*p_char = *p_char+26;
		*p_char += shift;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        while((*p_char+shift)>122)
		{
        	*p_char = *p_char-26;
		while((*p_char+shift)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}
{
    for(int i=0;i<maxlength;i++)
    {
        shiftChar(&str[i], shift);
    }
}
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\\n"", str);
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", str);
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", str);
}","    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+fvtok)>90)
        	*p_char = *p_char-26;
		while((*p_char+fvtok)<65)
        	*p_char = *p_char+26;
		*p_char += fvtok;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        while((*p_char+fvtok)>122)
		{
        	*p_char = *p_char-26;
		while((*p_char+fvtok)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += fvtok;
    }
}
{
    for(int uwren=0;uwren<maxlength;uwren++)
    {
        shiftChar(&tiwap[uwren], fvtok);
    }
}
{
    char tiwap[50] = ""Froh zu sein bedarf es wenig"";
    int fvtok = 5;
    printf(""Original: "");
    printf(""%s\\n"", tiwap);
    cipher(tiwap, fvtok, 50);
    printf(""Verschluesselt: "");
    printf(""%s\\n"", tiwap);
    cipher(tiwap, -fvtok, 50);
    printf(""Entschluesselt: "");
    printf(""%s\\n"", tiwap);
}",rename_variables,1
"#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
    char vorname[20];
    char nachname[20];
    int punkte [5];
} Student ;
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    getchar();
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    getchar();
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    printf(""1: 2: 3: 4: 5:\\n"");
    for (int i=0; i <5; i++)
    {
        scanf(""%i"",&p_stud->punkte[i]);
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    int i=0;
    printf(""Student: %s %s\\n"", p_stud->vorname, p_stud->nachname);
    for (i=0; i<5; i++)
    {
        sum+=p_stud->punkte[i];
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student studenten[5];
    for (int j=0; j<5; j++) student_einlesen (&studenten[j]);
    for (int j=0; j<5; j++) student_ausgeben(&studenten[j]);
}","#include <stdio.h>
#include <stdlib.h>
typedef struct student
{
    char vorname[20];
    char nachname[20];
    int punkte [5];
} Student ;
void student_einlesen(Student* p_stud)
{
    printf(""Gebe den Vornamen ein: "");
    scanf(""%s"", p_stud->vorname);
    getchar();
    printf(""Gebe nun den Nachnamen ein: "");
    scanf(""%s"", p_stud->nachname);
    getchar();
    printf(""Gebe nun nacheinander die 5 Punkte ein: \\n"");
    printf(""1: 2: 3: 4: 5:\\n"");
    int i=0;
    while (i <5)
    {
        scanf(""%i"",&p_stud->punkte[i]);
    	i++;
    }
}
void student_ausgeben(Student* p_stud)
{
    int sum =0;
    int i=0;
    printf(""Student: %s %s\\n"", p_stud->vorname, p_stud->nachname);
    i=0;
    while (i<5)
    {
        sum+=p_stud->punkte[i];
    	i++;
    }
    printf(""Anzahl Punkte: %i\\n"", sum);
}
int main()
{
    Student studenten[5];
    for (int j=0; j<5; j++) student_einlesen (&studenten[j]);
    for (int j=0; j<5; j++) student_ausgeben(&studenten[j]);
}",swap_loops_type,1
"void factorize(long produkt, long *faktor1, long *faktor2)
	if (produkt == 0 || produkt == 1)
    {
       *faktor1 = 1;
       *faktor2 = produkt;
       return;
       long int halb = produkt / 2;
   while(produkt % halb != 0)
   {
       halb --;
      *faktor1 = halb;
   *faktor2 = produkt / halb;
}
	// Zahl einlesen
	long  int zahl = 0;
	scanf(""%ld"", &zahl);
	// Define factors
	long int fak1, fak2;
	// call factorization function
	factorize(zahl, &fak1, &fak2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, fak1, fak2);
}","void factorize(long ergebnis, long *zahl1, long *zahl2)
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	else{
		*zahl1=ergebnis/2;
		while(ergebnis%*zahl1!=0)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
}
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, t1, t2);
}",,0
"    if (*p_char >= 'A' && *p_char <= 'Z')         if (shift >= 0)             for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'Z') {
                    *p_char = 'A';
                                    } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'A') {
                    *p_char = 'Z';
                            }
        }
    } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (shift >= 0) {
            for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'z') {
                    *p_char = 'a';
                }
            }
        } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'a') {
                    *p_char = 'z';
                }
            }
        }
    }
}
{
	char* p_str = str;
    for (int i = 0; i < maxlength; i++) {
        shiftChar(p_str, shift);
        p_str++;
    }
}
{
}","    if (*p_char >= 'A' && *p_char <= 'Z')         if (shift >= 0)             int i = 0;
             while (i < abs(shift)) {
                *p_char += 1;
                if (*p_char > 'Z') {
                    *p_char = 'A';
                                    } else {
            int i = 0;
            while (i < abs(shift)) {
                *p_char -= 1;
                if (*p_char < 'A') {
                    *p_char = 'Z';
                            }
        	i++;
            }
    } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (shift >= 0) {
            int i = 0;
            while (i < abs(shift)) {
                *p_char += 1;
                if (*p_char > 'z') {
                    *p_char = 'a';
                }
            	i++;
            }
        } else {
            int i = 0;
            while (i < abs(shift)) {
                *p_char -= 1;
                if (*p_char < 'a') {
                    *p_char = 'z';
                }
            	i++;
            }
        }
    }
	i++;
             }
{
	char* p_str = str;
    int i = 0;
    while (i < maxlength) {
        shiftChar(p_str, shift);
        p_str++;
    	i++;
    }
}
{
}",swap_loops_type,1
