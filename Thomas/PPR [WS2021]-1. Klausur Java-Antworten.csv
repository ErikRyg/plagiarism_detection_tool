Nachname,Vorname,E-Mail-Adresse,Status,"Begonnen am",Beendet,"Verbrauchte Zeit","Bewertung/70,00","Antwort 1","Antwort 2","Antwort 3","Antwort 4","Antwort 5","Antwort 6","Antwort 7","Antwort 8","Antwort 9","Antwort 10","Antwort 11","Antwort 12","Antwort 13","Antwort 14","Antwort 15","Antwort 16","Antwort 17","Antwort 18","Antwort 19","Antwort 20","Antwort 21","Antwort 22","Antwort 23","Antwort 24","Antwort 25","Antwort 26","Antwort 27"
Shen,Yishu,yishu.shen@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:29","1 Stunde 29 Minuten","42,50",16,1011,-1,-6,-1,3,0100,10000,"-3,5","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {1. 0} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {4. AND erster Eingang negiert}","Dropzone 1 -> {1. AND} Dropzone 2 -> {2. AND erster Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 1137; Teil 7: 6; Teil 8: 1137; Teil 9: 6; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Objekte; Teil 3: Encoding; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: 8; Teil 33: ; Teil 34: true; Teil 35: 8; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 16; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: 16; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: 0; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 7
f_5 = 22","Bonjour

; Moin","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A",-,"double addition(double x, double y)","Es wird die Methode der Superklasse aufgerufen","{int array[10] = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt; l; i +=1} {array[i]}","public static void loop{
    for(int i =0;i<22;i++){
        System.out.print(""Bobb!\n"");
    }
    int x=0
    while(x<=16){
        System.out.print(""Bobb!\n"");
        x++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
class FabelTier extends Tier{
    private String stamm;
    public FabelTier(String stamm){
        super(name);
        this.stamm=PunkTier;
    }
    public String makeSound(){
        String out = super.makeSound();
        out +=""Kangatraining!"";
        return out;
    }
    public boolean call(String calledName){
        if(calledName=this.getName){
            return true;
        }
        return false;
    }
}


// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier W= new Tier(""WauWau"");
        boolean correct;
        if(W.call(WauWau instanceof PunkTier)){
            correct = true;
        }
        else{
            correct=false;
        }
        
        
        W.makeSound();
    } 
}","public interface Fahrbar{
    boolean fahrbar;
}"
Dietrich,"Lukas Sebastian",lukas.dietrich@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:29","1 Stunde 28 Minuten","29,50",34,1101,-1,-3,-1,8,1001,00010,"-8,01","1 und 4","Dropzone 1 -> {7. OR erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {2. 1} Dropzone 5 -> {1. 0} Dropzone 6 -> {4. AND erster Eingang negiert}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {4. OR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 96; Teil 6: 96; Teil 7: 96; Teil 8: 1137; Teil 9: 96; Teil 10: 1135; Teil 11: 1135; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Encodings; Teil 3: Argument; Teil 4: angezeigt","Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Prozess 1 kann nicht (mit anderen) ausgeführt werden.
; Prozess 2 kann nicht (mit anderen) ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16a/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: undef; Teil 35: undef; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 4(15); Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 5(15); Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: -4; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66:","f_0 = 10
f_5 = 25","Hey

; Bonjour","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 ist initialisiert

; Die Klasse A hat keinen Konstruktor. Es können keine Objekte der Klasse A erzeugt werden.

; Es gibt Compiler-Fehler in der MAIN-Methode","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(double x, double y)","Es wird die Methode der Superklasse aufgerufen","{int[] array = [0,1,2,3,4,5,6,7,8,9];} {int[] array, int l} {i &lt;= l; i +=1} {array[i]}","public static void loop{
   for(int i=0;i<=26;i++){
System.out.println(""""Alice!"""")
}
int a = 0;
while(a==20){
System.out.println(""""Alice!"""")
}
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier expentant Tier{
    private String gattung;
    
    public Fabeltier(Tier.getName()){
        this.gattung =""PunkTier"";
    }
    
public void makeSound (){
    System.out.println(Tier.makeSound()+"" Buuuumaaaa!"")
}   
    
    
    
    public boolean call(String calledName){
        if (calledName==Tier.getName()){
            return true
        }
        else{
            return false
        }
    }
    
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        
        FabelTier WauWau = new Fabeltier();
        FabelTier.call(""PunkTier"");
        makeSound();
        
        
        
        
    } 
}",-
Aung,Okkar,okkar.aung@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:29","1 Stunde 29 Minuten","48,00",56,10011,-1,-4,-1,2,111,000,-5,"2 und 3
; 2 und 4
; 1 und 3
; 1 und 4","Dropzone 1 -> {6. OR} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {2. 1} Dropzone 5 -> {2. 1} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {8. NOR} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {7. XOR} Dropzone 4 -> {9. NAND}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 96; Teil 7: 6; Teil 8: 1137; Teil 9: 6; Teil 10: 1135; Teil 11: 1010; Teil 12: 6; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Kommandos; Teil 3: Option; Teil 4: angezeigt","Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Prozess 1 kann nicht (mit anderen) ausgeführt werden.
; Prozess 2 kann nicht (mit anderen) ausgeführt werden.

; Prozess 4 kann nicht (mit anderen) ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 9
f_5 = 24","Bonjour

; Moin","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 ist initialisiert","Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","float addition(float x, int y)

; double addition(double x, double y)

; double addition(int x, int y)

; double addition(float x, float y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i += 2} {array[i]}","public static void loop{
    
    for(int i = 0; i <26; i++) {
        System.out.println(""Peter!"");
    }
    int z = 0;
    while (z<16) {
        System.out.println(""Peter!"");
        z++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier {
    
    private String art;
    
    public FabelTier (String name) {
        super(name);
        this.art = ""AlphaTier"";
    }
    
    public String makeSound(){
        String s = Tier.makeSound();
        s += ""Buuuumaaaa!"";
        return s;
    }
    
    public boolean call(String calledName) {
        if (this.name.equals(calledName)){
            return true;
    }
    else {
        return false;
    }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        FabelTier viktor = new FabelTier (""WauWau"");
        boolean erkannt = viktor.call(""WauWau"");
        System.out.println(viktor.makeSound());
        
        
        
        
        
        
    } 
}","public interface Drivable {
    public void beschleunigen (int speed);
    public void tanken (double liter);
    public void tanken (double liter);
    public void stillStehen();
    try {
        } catch (Exception e) {
        }
}"
Padberg,"Ruben Bernhard",ruben.padberg@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 30 Minuten","41,50",12,10111,-1,-3,-1,9,1,"0,5","1,5","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {} Dropzone 3 -> {2. AND erster Eingang negiert} Dropzone 4 -> {}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Objekte; Teil 3: Kommando; Teil 4: angezeigt","Prozess 1 kann nicht (mit anderen) ausgeführt werden.
; Prozess 2 kann nicht (mit anderen) ausgeführt werden.

; Prozess 3 kann nicht (mit anderen) ausgeführt werden.

; Prozess 4 kann nicht (mit anderen) ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: true; Teil 30: 4; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: ; Teil 35: 8; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -8; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 13
f_5 = -1","Bonjour

; Moin","Das Attribut ZAHL von Y2 ist initialisiert

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A",-,"double addition(double x, double y)

; double addition(float x, float y)

; float addition(float x, int y)

; double addition(int x, int y)","Es wird die Methode der Superklasse aufgerufen","{int array[10] = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i += 2} {array[i]}","public static void loop{
    for(int i = 22; i > 0; i--){
    System.out.println(""Bobb!\n"");
    }
    int a = 20;
    while(a>0){
        System.out.println(""Bobb!\n"");
        a--;
    }
    
}","public class FabelTier extends Tier{
    private String art;
    
    public FabelTier(name){
        this.art = PunkTier
    }
    
    public String makeSound(){
        return(Tier.makeSound()+""Jappy!"");
    }
    
    public boolean call(String call){
        if(call == name) return true;
        else return false;
    }
}








// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier Sabbel = new FabelTier(Sabbel);
        boolean correct = Sabbel.call(Sabbel);
        System.out.println(Sabbel.makeSound());
        
        
        
        
        
        
        
    } 
}",-
Wegert,"Johan Ole",j.wegert@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 30 Minuten","65,00",48,1011,-1,-4,-1,2,1,10000,-6,"1 und 4
; 1 und 3","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Argument; Teil 4: angezeigt","Prozess 1 und Prozess 2 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 5
f_5 = 20","Moin

; Bonjour","Das Attribut ZAHL von Y2 ist initialisiert

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)","double addition(float x, float y)

; double addition(double x, double y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop(){
    for(int i=0;i<18;i++){
        System.out.println(""Bobb!"");
    }
    int x=0;
    while(x<16){
        System.out.println(""Bobb!"");
        x++;
    }
    
}","// Programmiert zuerst hier die Klasse FabelTier

public class FabelTierextends Tier{
    private String familie;
    public FabelTier(String name){
        super(name);
        this.familie=""CoronaTier"";
        
    }
    public String makeSound(){
        return super.makeSound()+""Buuuumaaaa!"";
    }
    public boolean call(String name){
        return getName().equals(name);
    }
}






// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier t=new FabelTier(""Sabbel"");
        boolean correct=t.call(""Sabbel"");
        System.out.println(t.makeSound());
        
        
        
        
        
        
    } 
}","public interface Drivable{
    public void addGas(double liter);
    public void speed(int speed);
    
}"
Kilic,Ceren,ceren.kilic@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 30 Minuten","45,00",4,1111,-1,-5,-1,1111,0,0100100,"-0,140625","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Encodings; Teil 3: Objekt; Teil 4: angezeigt","Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: -; Teil 63: -; Teil 64: -; Teil 65: -; Teil 66: -","f_0 = 10
f_5 = 25","Moin

; Ciao","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Es wurden zwei Objekte von der Klasse A erzeugt

; Das Attribut ZAHL von Y2 hat den Wert 0","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(double x, double y)

; float addition(float x, int y)

; double addition(float x, float y)

; double addition(int x, int y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt; l; i +=1} {array[I]}","public static void loop{
    int j;
    
    for(j=0; j<14; j++){
        System.out.println(""Alice!"""");
    }
    
    while(j<38){
        System.out.println(""Alice"");
        j++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier

private String familie;
public FabelTier(string n()){
    super(n);
    familie= AlphaTier;
    
}

public String makeSound(){
return (super.makeSound()+ ""Buuuumaaa"")
}
public boolean call(Str)


// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier anau = new FabelTier(""Aaaaannu"");
        
        boolean erkannt = anau.call(""Aaaannu"");
          
      System.out.println( anau.makeSound());
        
        
    } 
}",-
"Ramos Ruiz",Natalia,n.ramosruiz@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 30 Minuten","29,50",16,1011,-1,-6,-1,-3,0,10010000,"-0,144","1 und 4","Dropzone 1 -> {11. NAND} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {2. 1} Dropzone 5 -> {2. 1} Dropzone 6 -> {9. OR beide Eingänge negiert}","Dropzone 1 -> {} Dropzone 2 -> {} Dropzone 3 -> {} Dropzone 4 -> {9. NAND}","Teil 1: ; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 1137; Teil 7: 6; Teil 8: 1137; Teil 9: 6; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Objekte; Teil 3: Option; Teil 4: auf die CPU geladen","Prozess 1 und Prozess 2 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: maximal eine Datei. Genauer kann man es nicht sagen; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 11
f_5 =","Ciao

; Moin

; Bonjour

; Hey","Es gibt Compiler-Fehler in der MAIN-Methode
; Es wurden zwei Objekte von der Klasse A erzeugt","Die maximal Anzahl von Listenelementen muss bei Erzeugung der Liste bekannt sein

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(double x, double y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i +=1} {array[i]}","public static void loop{
    for(int i=0, i>=18, i++){
        
        System.out.println(""Peter!""+""\n"");
    }
  while (int n>=16){
            System.out.println(""Peter!""+""\n"");
        }
  }","// Programmiert zuerst hier die Klasse FabelTier
class FabelTier extends Tier{
    private String stamm;
    public Elternklasse(stamm){
        this.stamm=stamm;
        stamm=PunkTier;
    
        
    }
    public String makeSound(){
        return super.makeSound() + ""Jappy!"";
    }
    
    public boolean call(String calledName){
        if (String calledName equals(super.name) ) {
            return System.out.println(""true"");
        }
        else {return System.out.println(""false"");
        }
        
    }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        boolean richtig;
        FabelTier Sabbel = new FabelTier;
        call(Sabbel) = richtig;
        makeSound();
        
        
        
        
        
        
        
    } 
}","public void Car

Strassenbenutzend car 2 = newCar(""Gunnar"");"
Kahya,Ramazan-Furkan,r.kahya@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 30 Minuten","47,00",12,10111,-1,-5,-1,11,4,"0,75","-4,75","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {5. OR erster Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 1137; Teil 7: 6; Teil 8: 1137; Teil 9: 6; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Kommandos; Teil 3: Objekt; Teil 4: auf die CPU geladen","Prozess 1 kann nicht (mit anderen) ausgeführt werden.
; Prozess 2 kann nicht (mit anderen) ausgeführt werden.

; Prozess 3 kann nicht (mit anderen) ausgeführt werden.

; Prozess 4 kann nicht (mit anderen) ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 8
f_5 = 23","Bonjour

; Moin","Die Klasse A hat keinen Konstruktor. Es können keine Objekte der Klasse A erzeugt werden.

; Das Attribut ZAHL von Y2 ist initialisiert","Die maximal Anzahl von Listenelementen muss bei Erzeugung der Liste bekannt sein

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement","double addition(double x, double y)","Es kommt zu einem Fehler, da Objektvariablen des Typs Superklasse keine Objekte von Subklassen aufnehmen können
; Es wird die Methode der Superklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i +=1} {array[i]}","public static void loop{
    for(int i = 0; i < 26; i++){
        System.out.print(""PPR!\n"")
    }
    
    int a = 0;
    while (a < 16){
        System.out.print(""PPR!\n"")
        a++;
    }

}","// Programmiert zuerst hier die Klasse FabelTier    
class FabelTier extends Tier {
    private String gattung;
    private String name = super.getName();
    
    public FabelTier (String name){
        super(name);
        gattung = ""AlphaTier"";
    }
    
    public String makeSound(){
        return ""Buuuumaaaa!"";
    }
    
    public boolean call(String calledName){
        if(calledName == getName())){
            return true;
        }else{
            return false;
        }
    }
}


// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier tier = new FabelTier (""WauWau"");
        boolean recognized = tier.call(tier.getName());
        System.out.println(tier.makeSound());
        
    }    
}","public Interface Drivable{
    public void verkaufen(String newOwner);
    public void speed(int speed);
    public void addGas(double liter);
    public void stillStehen();
}"
Schellong,"Sören Rafael",r.schellong@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:29","1 Stunde 28 Minuten","63,75",8,10011,-1,-3,-1,3,1010,00,"-10,0","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Argument; Teil 4: angezeigt","Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: 0; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 7
f_5 = 22","Moin

; Bonjour","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 ist initialisiert","Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden","double addition(float x, float y)

; double addition(double x, double y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    for(int i =0; i<=22; i++){
        System.out.print(""Peter!\n"");
        }
        int i = 23
        while (i<=34){
         System.out.print(""Peter!\n"");
         i++;
        }
}","// Programmiert zuerst hier die Klasse FabelTier
class FabelTier extends Tier{
    private String gattung;
    
    public FabelTier (String name){
        super(name);
        this.gattung = ""RazupaltuffTier"";
    }
    
    public String makeSound(){
     return super.makeSound() + ""Virusssiis"";   
    }
    
    public boolean call(String calledName){
      if(this.getName().equals(calledName)){
          return true;
      } 
      else return false;
    }
 }







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier tier1 = new FabelTier (""Aaaannu"");
        boolean recognized = tier1.call(""Aaaannu"");
        System.out.print(makeSound());
    } 
}","public interface Beweglich {
    
    public void tanken(double liter);
    public void beschleunigen(int speed);
}"
Müller-Hardy,"Finnegan Maximilian",f.mueller-hardy@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 30 Minuten","43,50",56,10011,-1,-2,-1,-2,1,11000,-,"1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {} Dropzone 3 -> {} Dropzone 4 -> {}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 4
f_5 = 4","Moin

; Ciao

; Bonjour","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement","double addition(float x, float y)

; double addition(double x, double y)

; double addition(int x, int y)","Es wird die Methode der Superklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt; l; i +=1} {array[i]}","public static void loop{
    public static void main(String[] args){

        for(i=0; i<=18; i++){
            System.out.println(""PPR!\n"");
        }
        
        int x = 16;
        while(x>0){
            System.out.println(""PPR!\n"");
            x--;
        }
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier{
    private String familie;
    
    public FabelTier(String n){
        super(n);
        this.familie = ""RazupaltuffTier"";
    }
    
    public String makeSound(){
        return (super.makeSound()+""Kangatraining!"");
    }
    
    public boolean call(String calledName){
        if(calledName.getName() == this.name){
            return true;
        }
        else{
            return false;
        }
    }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        Tier horst = new FabelTier(""Horst"");
        boolean correct = horst.call(""RazupaltuffTier"");
        System.out.println(horst.makeSound());
        
        
        
        
        
    } 
}",-
Wolf,"Johannes Peter",j.wolf.1@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 30 Minuten","46,50",12,10111,-1,-5,-1,6,1,011,"-1,375","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 kann nicht (mit anderen) ausgeführt werden.
; Prozess 2 kann nicht (mit anderen) ausgeführt werden.

; Prozess 3 kann nicht (mit anderen) ausgeführt werden.

; Prozess 4 kann nicht (mit anderen) ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 8
f_5 = 23","Moin

; Bonjour","Das Attribut ZAHL von Y2 hat den Wert 0

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(double x, double y)","Es wird die Methode der Superklasse aufgerufen","{int[] array = [0,1,2,3,4,5,6,7,8,9];} {int[] array, int l} {i &lt; l; i +=1} {array[i]}","public static void loop{
    
    for (int i =0; i<19;i++) {
           System.out.println(""PPR!\n"");
    }
    int j=0;
    while (j < 17){
        System.out.println(""PPR!\n"");
        j++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier

public class FabelTier extends Tier {
    private String art;
    
    public FabelTier (String n, String art){
        super(n);
        this.art=""RazupaltuffTier"";
    }
    
    public String makeSound(){
        
        return super()+""Virusssiis"";
    }
    
    public boolean call(String calledName){
        
        if (calledName.equals(n)) return true;
        else return false;
    }
}


// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        Tier sab = new FabelTier (""Sabbel"",""Einhorn"");
        
        boolean correct = sab.call(""Sabbel"");
        
        System.out.println(sab.makeSound());
        
        
    } 
}","public interface Strassenbenutzend {
    
    
    
}"
Ohlendorf,Lasse,l.ohlendorf@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 30 Minuten","26,50",12,13,-1,-13,-1,1,11,100001100,"-3,5234375","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {4. OR} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: ; Teil 5: ; Teil 6: 96; Teil 7: ; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 1010; Teil 12: ; Teil 13: ; Teil 14: 1010","Teil 1: Kommando; Teil 2: Argumente; Teil 3: ; Teil 4: angezeigt","Prozess 1 und Prozess 2 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Prozess 4 kann nicht (mit anderen) ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 4; Teil 4: Winter16a, Winter16b und Klausurergebnisse; Teil 5: ; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16a/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: 4; Teil 6: -; Teil 7: 13; Teil 8: undef; Teil 9: ; Teil 10: ; Teil 11: ; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: undef; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: 2*c; Teil 30: ; Teil 31: ; Teil 32: 8; Teil 33: ; Teil 34: undef; Teil 35: undef; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: true; Teil 40: 16; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 16; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -8; Teil 60: ; Teil 61: 17; Teil 62: -; Teil 63: -; Teil 64: -; Teil 65: -; Teil 66: -","f_0 = 7
f_5 = 22","Moin

; Bonjour","Es gibt Compiler-Fehler in der MAIN-Methode
; Das Attribut ZAHL von Y2 hat den Wert 0

; X2 hat den Wert 5

; Das Attribut ZAHL von Y2 ist initialisiert","Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden","double addition(double x, double y)

; double addition(double x)

; double addition(float x, float y)","Es kommt zu einem Fehler, da Objektvariablen des Typs Superklasse keine Objekte von Subklassen aufnehmen können","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i += 2} {array[i]}","public static void loop{
    
    for(int i=0;i<=18,i++){
    System.out.println(""Bobb!"");
    }
while(i>18)
    
}","// Programmiert zuerst hier die Klasse FabelTier








// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        
        
        
        
        
        
    } 
}",-
Helmers,Ole,o.helmers@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 29 Minuten","40,25",4,1111,-1,-5,-1,1101,1,00100,-,"2 und 4
; 1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {} Dropzone 3 -> {8. NOR} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 4; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 4; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: 4; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 10
f_5 = 25","Bonjour

; Moin","Es wurden zwei Objekte von der Klasse A erzeugt

; Das Attribut ZAHL von Y2 ist initialisiert",-,"double addition(float x, float y)

; double addition(double x, double y)",-,"{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop(){
    for(int i=0; i<14; i++){
        System.out.println(""Bobb!"");
    }
    int i = 0;
    while(i!=20) {
    System.out.println(""Bobb!"");
    i++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier{
    private String stamm;
    public String getStamm(){
        return stamm;
    }
    public void setStamm(Sting neuStamm){
        this.stamm = neuStamm;
    }
    
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        
        
        
        
        
        
    } 
}",-
Witri,"Farah Shavira",witri@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 30 Minuten","46,50",844,11000,-1,4,-1,10000,5,0110,"5,5","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 96; Teil 7: 6; Teil 8: 1137; Teil 9: 6; Teil 10: 1135; Teil 11: 1010; Teil 12: 6; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 12
f_5 = 27","Bonjour

; Moin","Die Klasse A hat keinen Konstruktor. Es können keine Objekte der Klasse A erzeugt werden.

; Es wurden zwei Objekte von der Klasse A erzeugt","Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement","double addition(int x, int y)

; double addition(double x, double y)

; float addition(float x, int y)

; double addition(float x, float y)","Es kommt zu einem Fehler, da Objektvariablen des Typs Superklasse keine Objekte von Subklassen aufnehmen können","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i +=1} {array[i]}","public static void loop{
    for (int i = 0; i < 14; i++) {
        System.out.println(""PPR!\n"");
    }
    int j = 0;
    while (j < 16) {
        System.out.println(""PPR!\n"");
        j++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier {
    private String art;

    public FabelTier(String name) {
        super(name);
        art = ""CoronaTier"";
    }

    public String makeSound() {
        return super.makeSound() + ""Kangatraining!"";
    }

    public boolean call(String calledName) {
        return super.getName().equals(calledName);
    }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier tier = new FabelTier(""Aaaannu"");
        boolean erkannt = tier.call(""Aaaannu"");
        System.out.println(tier.makeSound());
    } 
}","public interface Strassenbenutzend {
    public void speed(int speed);
    public void addGas(double liter);
    public void stop();
}"
Hogel,Stephan,s.hogel@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 29 Minuten","31,50",4,1111,-1,11,-1,1001,1,011000100,708,"1 und 4","Dropzone 1 -> {13. AND beide Eingänge negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {3. AND zweiter Eingang negiert} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {4. OR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -91; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Option; Teil 2: Objekte; Teil 3: Argument; Teil 4: angezeigt","Prozess 1 und Prozess 2 können zusammen ausgeführt werden.
; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: gar nicht","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 6
f_5 = 21","Moin

; Bonjour","Es wurden zwei Objekte von der Klasse A erzeugt","Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)","float addition(float x, int y)

; double addition(double x, double y)

; double addition(float x, float y)

; double addition(int x, int y)","Es kommt zu einem Fehler, da man zuerst casten muss, um die überschriebene Methode der Subklasse aufzurufen","{int array[10] = {0,1,2,3,4,5,6,7,8,9};} {int array, int[] l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
  int x = 0  

 for(int i=0; i<26; i++) // i=Bobb
 System.out.println(Bobb);
}
 while (x<14){
     System.out.println(Bobb);
     x++;
 }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier{
    private String name;






// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        
        
        
        
        
        
    } 
}","public interface Fahrbahr{
public void verkaufen();
public void beschleunige();
public void tanken();
public void stop();
  }"
Ardisson,"Maxim Dimitri",ardisson@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 30 Minuten","47,25",44,1111,-1,-6,-1,5,-,-,-,"1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Objekt; Teil 4: in den Cache gespeichert","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 2; Teil 4: Winter16a und Klausurergebnisse; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: ; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: -; Teil 63: -; Teil 64: -; Teil 65: -; Teil 66: -","f_0 = 5
f_5 = 9",Bonjour,"Das Attribut ZAHL von Y2 ist initialisiert

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)","float addition(float x, int y)

; double addition(double x, double y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i += 2} {array[i]}","public static void loop{
    for(int i = 0; i<18; i++){
        System.out.println(""PPR!"");
    }
    int j = 18;
    while(j<30){
        System.println(""PPR!"");
        j++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier{
    private String familie;
    public FabelTier(String name){
        super(name);
        this.familie = ""AlphaTier"";
    }
    public String makeSound(){
        String str = super.makeSound()+""Virusssiis"";
        return str;
    }
    public boolean call(String check){
        if(check.equals(this.name)) return true;
        return false;
    }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        Fabeltier sabbel = new Fabeltier(""Sabbel"");
        boolean check = sabbel.call(""Sabbel"");
        System.out.println(makeSoun());
        
        
        
        
        
        
        
    } 
}","//Man weiß leider nicht was im Interface Fahrbar steht. Es müssen ale Methoden aus Fahrbar implementiert werden
//Es muss also noch das Interface gegeben sein
Interface Fahrbar{
    public void verkaufen (String Owner);
    public void speed (int speed);
    public void tankAuffuellen(double liter);
    public void stillStehen();
}"
Tesch,Johanna,j.tesch@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:00","26. Februar 2021  10:30","1 Stunde 30 Minuten","59,50",56,10011,-1,-4,-1,0010,1,11000,-7,"1 und 3
; 1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 2 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 9
f_5 = 9","Bonjour

; Moin","Das Attribut ZAHL von Y2 hat den Wert 0

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(float x, float y)

; double addition(double x, double y)","Es wird erst zur Laufzeit entschieden, welcher Methodenblock ausgeführt wird

; Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    for(int i = 0; i<23; i++) {
        Terminal.println(""Peter!\n"");
    }
    int j = 0;
    while(j<13) {
        Terminal.println(""Peter!\n"");
        j++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier {
    private String gattung;
    public FabelTier(String n) {
        super(n);
        this.gattung = ""AlphaTier"";
    }
    
    public String makeSound() {
        return (super.makeSound() + ""Jappy!"");
    }
    
    public boolean call(String calledName) {
        if(this.name.equals(calledName)) return true;
        return false;
    }
}

// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier f = new FabelTier(""Sabbel"");
        
        boolean richtig = f.call(""Sabbel"");
        
        Terminal.println(f.makeSound());
        
    } 
}","public interface Fahrbar {
    
    public void geschwindigkeitAnpassen(int speed);
    public void tanken(double liter);
}"
Neumann,"Tobias Andre",tobias.a.neumann@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:28","1 Stunde 27 Minuten","43,00",40,10011,+1,-6,-1,12,0101,010100,"-0,3125","1 und 4
; 1 und 3","Dropzone 1 -> {7. OR erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Option; Teil 4: angezeigt","Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Prozess 1 kann nicht (mit anderen) ausgeführt werden.
; Prozess 2 kann nicht (mit anderen) ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 5
f_5 = 20","Bonjour

; Moin","Es wurden zwei Objekte von der Klasse A erzeugt

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 ist initialisiert","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(double x, double y)

; double addition(float x, float y)","Es kommt zu einem Fehler, da Objektvariablen des Typs Superklasse keine Objekte von Subklassen aufnehmen können
; Es kommt zu einem Fehler, da man zuerst casten muss, um die überschriebene Methode der Subklasse aufzurufen","{int array[10] = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
for (int i = 1; i<=18;i++) {
    System.out.println (""Bobb!/n"");
}
i=1;
while (i<=12){
System.out.println (""Bopp!/n"");
i++;
}
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier{
    protected string familie;
    
    public static void EK (name n){
        this.name=name;
        familie=""RazupaltuffTier"";
    }
    makeSound(){
    }
    };
    
        
}






// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        
        
        
        
        
        
    } 
}",-
Lex,Matthias,m.lex@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:31","1 Stunde 29 Minuten","40,00",4,1111,-1,-5,-1,-1,10,0100,"-2,25","1 und 3
; 1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {} Dropzone 3 -> {} Dropzone 4 -> {}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1010","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 2 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 3; Teil 4: Winter16b und Klausurergebnisse; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 12
f_5 = 12","Moin

; Bonjour","Es gibt Compiler-Fehler in der MAIN-Methode","Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement","double addition(float x, float y)

; double addition(double x, double y)","Es wird erst zur Laufzeit entschieden, welcher Methodenblock ausgeführt wird

; Es wird die Methode der Superklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i += 2} {array[i]}","public static void loop{
    int i = 1;
    for(i = 1; i<=42;i++){
        int j = 0;
        for(j = 0; j<=18; j++){
        System.out.println(""Peter!\n"")
        }
        while(j>18){
           System.out.println(""Peter!\n"")
          j++;
        }
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier{
    private String gattung;
    
    public FabelTier(String name){
        this.gattung = ""CoronaTier"";
    }
    
    public String makeSound(){
        String s;
        s = super.makeSound();
        s += ""Buuuumaaaa!""
        return s;
    }

    public boolean call(String calledName){
        return (getName() == calledName);
    }
}




// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier WauWau = new Tier(""WauWau"");
        boolean correct = WauWau.call(""WauWau"");
        System.out.prinln(WauWau.makeSound());
    } 
}",-
Felchner,"Felix Reinhard",f.felchner@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:29","1 Stunde 28 Minuten","54,50",48,1011,-1,-4,-1,2,0110,0,"-6,0","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Argument; Teil 4: angezeigt","Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 2; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 10
f_5 = 15","Bonjour

; Moin","Es wurden zwei Objekte von der Klasse A erzeugt","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)","float addition(float x, int y)

; double addition(int x, int y)

; double addition(double x, double y)

; double addition(float x, float y)",-,"{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    for (int i=0; i < 22;i++) {
		System.out.println(""Peter!"");
	}
	int j = 0;
	while (j < 16) {
	    System.out.println(""Peter!"");
	    j++;
	}
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier {
    private String stamm;
    
    public FabelTier(String na) {
        super(na);
        stamm = ""PunkTier"";
    }
    
    public String makeSound() {
        return super.makeSound() + ""Jappy!"";
    }
    
    public boolean call(String calledName) {
        if (calledName == name) {
            return true;
        } else {
            return false;
        }
    }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        FabelTier animal = new FabelTier(""Horst"");
        boolean richtig = animal.call(""Horst"");
        System.out.println(animal.makeSound());
        
        
        
        
        
    } 
}","public interface Strassenbenutzend {
    public void verkaufen();
    public void speed();
    public void tanken();
    public void stillStehen();
}"
Kalz,Andreas,a.kalz.1@tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:31","1 Stunde 29 Minuten","62,50",8,10011,-1,-3,-1,3,1010,0,-10,"1 und 4
; 1 und 3","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Argument; Teil 4: angezeigt","Prozess 1 und Prozess 2 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 9
f_5 = 24","Bonjour

; Moin","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 ist initialisiert","Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement","double addition(double x, double y)

; double addition(float x, float y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    int i;
    for (i = 0; i <= 18; i++) {
        Terminal.println(""Bobb!"");
    }
    while(i <= 42) {
        Terminal.println(""Bobb!"");
        i++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
class FabelTier extends Tier {
    private String stamm;
    
    public FabelTier(String name) {
        super(name);
        this.stamm = ""PunkTier"";
    }
    
    @Override
    public String makeSound() {
        return super.makeSound() + ""Virusssiis"";
    }
    
    public boolean call(String calledName) {
        return calledName.equals(this.getName());
    }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier tier = new FabelTier(""WauWau"");
        boolean erkannt = tier.call(""WauWau"");
        System.out.println(tier.makeSound());
        
        
        
        
    } 
}","interface Beweglich {
    
    
}"
Lietz,"Alexander Pascal",a.lietz@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:31","1 Stunde 30 Minuten","40,50",46,11001,-1,-4,-1,16,-,-,-,"1 und 4","Dropzone 1 -> {6. OR} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {2. 1} Dropzone 5 -> {2. 1} Dropzone 6 -> {5. AND zweiter Eingang negiert}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 96; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1135; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Objekt; Teil 4: angezeigt","Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: maximal eine Datei. Genauer kann man es nicht sagen; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16a/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: ; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: 8; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: true; Teil 40: 16; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 16; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -8; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 10
f_5 = 25",Hey,"Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; X2 hat den Wert 5

; Das Attribut ZAHL von Y2 ist initialisiert","Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement","double addition(double x, double y)

; float addition(float x, int y)

; double addition(int x, int y)","Es kommt zu einem Fehler, da Objektvariablen des Typs Superklasse keine Objekte von Subklassen aufnehmen können","{int array[10] = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt; l; i +=1} {array[i]}","public static void loop{
    
    for(int i = 0; i < 18; i++){
        System.out.println(""PPR!""+""\t"");
    }
    
    int j = 0;
    while (j < 16){
        System.out.println(""PPR!"" + ""\t"");
        j++;
    }
    
}","// Programmiert zuerst hier die Klasse FabelTier
class FabelTier extends Tier{
    private String stamm = ""PunkTier"";
    
    public FabelTier(String n){
        super( n);
        this.stamm = stamm;
    }
    
        public String makeSound(){
       return (""Dieses Tier: ""+name+ ""macht folgendes Geräusch: Jappy!"");


    }
    
    public boolean call(String calledName){
        if (calledName.equals(this.getName())){
            return true;
        }else{
            return false;
        }
    }
}






public class TierTest {
    public static void main(String[] args) {

        FabelTier tier = new FabelTier(""Aaaannu"");

        boolean recognized = tier.call(""Aaaannu"");

        System.out.println(tier.makeSound());


    }
}",-
Klocksin,"Malte Carl",m.klocksin@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:30","1 Stunde 29 Minuten","53,00",32,1011,-1,-6,-1,1,11,0000,"-3,0","1 und 4
; 1 und 3","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Argument; Teil 4: angezeigt","Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Prozess 1 kann nicht (mit anderen) ausgeführt werden.
; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: 8; Teil 33: ; Teil 34: true; Teil 35: 8; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 16; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 16; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -8; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 12
f_5 = 26","Moin

; Bonjour","Das Attribut ZAHL von Y2 ist initialisiert

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement","double addition(float x, float y)

; double addition(double x, double y)

; float addition(float x, int y)","Es wird erst zur Laufzeit entschieden, welcher Methodenblock ausgeführt wird

; Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    for(int i = 0; i < 22;i++){
        System.out.println(""Peter!\n"");
    }
    int a = 0;
    while(a<12){
        System.out.println(""Peter!\n"");
        a++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier{
    
    private String stamm;
    public FabelTier(String name){
        super(name);
        this.stamm = ""AlphaTier"";
    }
    
    public String makeSound(){
        return super.makeSound()+""Jappy!"";
    }
    public boolean call(String calledName){
        return (this.name.equals(calledName));
    }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        FabelTier a = new FabelTier(""Aaaannu"");
        boolean richtig = a.call(Aaaannu);
        System.out.println(a.makeSound());
        
        
        
        
        
    } 
}","public interface Drivable{
    
    String owner;
    double tank;
    double currentSpeed;
    
    public void geschwindigkeitAnpassen();
    
    public void tanken();
}"
Heyde,Jan-Frederik,heyde@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:31","1 Stunde 29 Minuten","45,50",48,1011,-1,-4,-1,2,0110,00000,-3,"1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {4. OR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Kommandos; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 2; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 14
f_5 = 9","Moin

; Bonjour","Es wurden zwei Objekte von der Klasse A erzeugt","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden","double addition(double x, double y)

; double addition(int x, int y)

; float addition(float x, int y)

; double addition(float x, float y)","Es wird erst zur Laufzeit entschieden, welcher Methodenblock ausgeführt wird

; Es wird die Methode der Subklasse aufgerufen","{int array[10] = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    int x = 0;
    for(int i=0, i <22; i++) {
        System.out.println(""PPR!"");
    }
    
    while (x<20) {
        System.out.println(""PPR!"");
        x++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier








// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        
        
        
        
        
        
    } 
}","public interface Fahrbar{
    public void verkaufen();
    public void beschleunigen();
    public void tanken();
    public void stop();
}"
Niewiarra,"Julian Baptiste",niewiarra@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:31","1 Stunde 30 Minuten","39,50",56,10011,-1,-6,-1,-,24,5,-,"1 und 4","Dropzone 1 -> {8. OR zweiter Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {2. 1} Dropzone 5 -> {1. 0} Dropzone 6 -> {11. NAND}","Dropzone 1 -> {1. AND} Dropzone 2 -> {5. OR erster Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: ; Teil 6: 96; Teil 7: ; Teil 8: 1137; Teil 9: ; Teil 10: ; Teil 11: ; Teil 12: ; Teil 13: ; Teil 14:","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: ; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: 8; Teil 33: ; Teil 34: true; Teil 35: 8; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 16; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 16; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -8; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66:","f_0 = 7
f_5 = 5","Bonjour

; Moin","Das Attribut ZAHL von Y2 ist initialisiert

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(float x, float y)

; double addition(double x, double y)","Es wird die Methode der Subklasse aufgerufen","{int array[10] = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt; l; i +=1} {array[i]}","public static void loop{
        for(int i = 0; i < 26; i++){
		System.out.println(""Bobb!"");
	}
	int j = 0;
	while (j < 24){
		System.out.println(""Bobb!"");
		j++;
	}
}","// Programmiert zuerst hier die Klasse FabelTier

class Fabeltier extends Tier{
    
    private String art;
    private String name;
    
    public Fabeltier(String name){
        art = ""AlphaTier"";
        this.name = name;
    }
    
    
    public string makeSound(){
        return super.makeSound() + ""Kangatraining!"";
    }
    
    public boolean call(String calledName){
        if(calledName == name){
            return true;
        }
        else {
            return false;
        }
    }
}
    
}






// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        Fabeltier fabtier = new Fabeltier(""Sabbel"");
        boolean reconized = fabtier.call(""Sabbel"");
        System.out.println(fabtier.makeSound();)
        
    } 
}","public class Drivable{
    
    Drivable (){
        
    }
}"
Latz,"Simon Leonhard",s.latz@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:31","1 Stunde 30 Minuten","31,25",56,10011,-1,-6,-1,24,9,1000,"-9,5","1 und 3","Dropzone 1 -> {7. OR erster Eingang negiert} Dropzone 2 -> {2. 1} Dropzone 3 -> {1. 0} Dropzone 4 -> {2. 1} Dropzone 5 -> {1. 0} Dropzone 6 -> {4. AND erster Eingang negiert}","Dropzone 1 -> {1. AND} Dropzone 2 -> {5. OR erster Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Objekt; Teil 4: angezeigt","Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16b; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 15; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 4(15); Teil 45: ; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: -; Teil 63: -; Teil 64: -; Teil 65: -; Teil 66: -","f_0 = 9
f_5 = 24","Hallo

; Bonjour","Die Klasse A hat keinen Konstruktor. Es können keine Objekte der Klasse A erzeugt werden.

; Es wurden zwei Objekte von der Klasse A erzeugt

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 hat den Wert 0","Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(double x)

; void addition(float x, float y)

; double addition(double x, double y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i +=1} {array[i]}","public static void loop{
    for (int i=0; i<=49, i++){
        do{
            System.out.println(""Bobb! \n""); 
         }while(i>25); 
    System.out.println(""Bobb! \n""); 
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class Fabeltier implements Tier(String n){
    private String gattung;
    gattung = ""RazupaltuffTier"";
    this.name = n; 
    public call(String calledName){
        this.calledname = calledName;
        if(calledName = ){
            return true;
        }else{
            return false;
        }
        
    }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        public static String makeSound() {
            List<String> sound = new LinkedList>();
        }
        public static boolean(String calledName);
        if(x==n) true; 
        
        FabelTier genau = new FabelTier(""WauWau"");
        
        
        
        
        
        
        
        
        
    } 
}","Public Class Beweglich{
public void tankAuffuellen(double liter);
  public void verkauf(String owner); 
  public void speed(int speed);
  public void stillStehen()
  
}"
Ciepielowska,"Maria Aleksandra",maria.ciepielowska@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:29","1 Stunde 28 Minuten","35,75",40,10011,-1,-6,-1,5,0,01010,"-0,3125","1 und 4","Dropzone 1 -> {5. AND zweiter Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {8. NOR} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 1137; Teil 7: 6; Teil 8: 1137; Teil 9: 6; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Encodings; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 kann nicht (mit anderen) ausgeführt werden.
; Prozess 2 kann nicht (mit anderen) ausgeführt werden.

; Prozess 3 kann nicht (mit anderen) ausgeführt werden.

; Prozess 4 kann nicht (mit anderen) ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: undef; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: ; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: 8; Teil 33: ; Teil 34: undef; Teil 35: undef; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 4(15); Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 5(15); Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66:","f_0 = 10
f_5 = 9",Moin,"Es gibt Compiler-Fehler in der MAIN-Methode","Die maximal Anzahl von Listenelementen muss bei Erzeugung der Liste bekannt sein

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden","double addition(double x, double y)","Es wird die Methode der Superklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
   for(int i = 1;i<=22;i++) {
      System.out.println(""Alice!\n"");
   }
   int i = 23
   while(i<=34){
     do{  
       System.out.println(""Alice!\n"")
   }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier{
    public String familie;
    public String getName(name){
        return name;
    }
    
    public FabelTier(String name){
    super(name);
    familie = ""AlphaTier"";
}
    public String makeSound(){
        Tier.makeSound()
        System.out.println(""Buuuumaaaa!"");
    }
    public static boolean call(String calledName){
        if(calledName==name){
            return true;
        }
        else{
            return false;
        }
        
    }
}
// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier m = new FabelTier(""Horst"");
        boolean correct =m.call();
        m.makeSound();
        
        
        
        
    } 
}",car1.addGas(20.0);
Schrenk,"Philipp Albert",p.schrenk@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:31","1 Stunde 29 Minuten","63,25",48,1011,-1,-6,-1,-2,0,0110000,"-0,375","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Argument; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: ; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: -; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 10
f_5 = 25","Bonjour

; Moin","Das Attribut ZAHL von Y2 ist initialisiert

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)","float addition(float x, int y)

; double addition(float x, float y)

; double addition(double x, double y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    
    for(int i = 1; i <= 26; i++) {
        System.out.print(""Alice!"" + ""\n"");
    }
    
    int x = 27;
    while(x <= 38) {
        System.out.print(""Alice!"" + ""\n"");
        x++;
    }
    
}","public class FabelTier extends Tier {
    private String gattung;
    
    public FabelTier(String name) {
    super(name);
    this.gattung = ""AlphaTier"";
    }
    
    public String makeSound() {
        return super.makeSound() + ""Virusssiis"";
    }
    
    public boolean call(String calledName) {
        if(this.name == calledName) {
            return true;
        }
        return false;
    }
    
}








// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier tier = new FabelTier(""Aaaannu"");
        boolean erkannt = tier.call(""Aaaannu"");
        System.out.println(tier.makeSound());
    } 

}","public interface Fahrbar {
    
    public void tankAuffuellen(double liter);
    
    public void beschleunigen(int speed);
    
}"
Ramge,Max,ramge@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:31","1 Stunde 30 Minuten","33,50",4,1111,-1,-4,-,-,-,-,-,"1 und 4","Dropzone 1 -> {} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {}","Teil 1: ; Teil 2: ; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7: ; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: ; Teil 12: ; Teil 13: ; Teil 14:","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Objekt; Teil 4: angezeigt",-,"Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: ; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: ; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: ; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: ; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: ; Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: ; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 10
f_5 = 25","Moin

; Bonjour","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Es wurden zwei Objekte von der Klasse A erzeugt",-,"double addition(float x, float y)

; double addition(double x, double y)",-,"{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l+1; i +=2} {array[i]}","public static void loop{
    
    int x = 0;
    for(int i=0; i<18; i++){
        System.out.println(""Bobb!""+""\n"");
        x++;
    }
    while(x < 42){
        System.out.println(""Bobb!""+""\n"");
        x++;
    }
    
}","// Programmiert zuerst hier die Klasse FabelTier


public class FabelTier implements Tier {
    private string gattung; 
    
    public FabelTier(string name){
        super(name);
        this.gattung = ""CoronaTier"";
    }

    public void makeSound(){
        return super.makeSound()+""Kangatraining!"";
    }
    
    public string call(string calledName){
        if (this.name == calledName){
            return true;
        }
        else {
            return false;
        }
    }
    
    
}





// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
    
        FabelTier x = new FabelTier(WauWau);
        boolean richtig = call(WauWau);
        x.makeSound();
        
        
        
        
        
    } 
}",-
Mesfun-Ghebrekidan,Yoel,yoel.mesfun-ghebrekidan@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:01","26. Februar 2021  10:31","1 Stunde 30 Minuten","34,50",56,10011,-1,-4,-1,2,24,0,-,"2 und 3","Dropzone 1 -> {10. XOR} Dropzone 2 -> {2. 1} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {2. 1} Dropzone 6 -> {6. OR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {3. AND zweiter Eingang negiert} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 96; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Option; Teil 4: angezeigt","Prozess 1 und Prozess 3 können zusammen ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16b und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 10
f_5 = f(4) +5","Moin

; Ciao","Die Klasse A hat keinen Konstruktor. Es können keine Objekte der Klasse A erzeugt werden.

; Es wurden zwei Objekte von der Klasse A erzeugt","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement","double addition(double x, double y)","Es wird die Methode der Superklasse aufgerufen","{int[] array = [0,1,2,3,4,5,6,7,8,9];} {int[] array, int[] l} {i &lt;= l; i += 2} {array[i]}","public static void loop{

    public static void main (String [] args) {
        for (int i =0; i<14; i++){
            System.out.println(""Alice!"");
        }
    
        int j=0;
        while(j<24){
            System.out.println(""Alice!"");
            j++;
        }
    }     
}","// Programmiert zuerst hier die Klasse FabelTier

public class FabelTier extends Tier{
    private String familie;
    
    public Fabeltier(String name){
        this.name=name;
        this.familie+=CoronaTier;
        }
    
        public String makeSound(String calledName){
           calledName.makeSound(""Kangatraining"");
            return;
        }
    
        
        public boolean call(String calledName){
            if(String calledName== this.name){
                return true;
            }
            return false;
        }

    
    
}






// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        Fabeltier Pegasus= new Fabeltier(""Sabbel"");
        
        Pegasus.makeSound();
        
        
        
        
    } 
}","public Car(String wowner){
    
}

das public hat gefehlt beim erstellen des parametrisierten Konstruktors!!

Car car1= new Car(""Hannes"");

Es muss ""Car"" und nicht ""Fahrbar"" beim erzeugen des Objetks heißen!"
Seidel,Frithjof,frithjof.seidel@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:02","26. Februar 2021  10:32","1 Stunde 30 Minuten","57,00",48,1011,-1,-4,-1,2,1,10000,-6,"1 und 4","Dropzone 1 -> {8. OR zweiter Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {} Dropzone 3 -> {9. NAND} Dropzone 4 -> {}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 8
f_5 = 23","Bonjour

; Moin","Es wurden zwei Objekte von der Klasse A erzeugt","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden","double addition(double x, double y)

; double addition(float x, float y)","Es wird erst zur Laufzeit entschieden, welcher Methodenblock ausgeführt wird

; Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i += 2} {array[i]}","public static void loop{
   for (int i=0;i<26;i++) { 
       System.out.println(""Bobb!"");
   }
   int j=0;
   while (j<16) {
        System.out.println(""Bobb!"");
        j++;
   }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier {
    private String stamm;
    
    public FabelTier(String n) {
        super(n);
        this.stamm=""AlphaTier"";
    }
    
    public String makeSound() {
        return (Tier.makeSound()+""Virusssiis"");
    }
    
    public boolean call(String calledName) {
        return calledName.equals(getName());
    }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier ft = new FabelTier(""WauWau"");
        boolean erkannt = ft.calledName(""WauWau"");
        System.out.println(makeSound());
        
        
        
        
        
        
        
    } 
}","public interface Beweglich {
    
}"
Deisberg,"Merlin Niklas",merlin.deisberg@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:02","26. Februar 2021  10:32","1 Stunde 29 Minuten","38,25",16,1011,-,-,-,-,-,-,656,"1 und 4","Dropzone 1 -> {3. AND} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {2. 1} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {5. OR erster Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: ; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: 15; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 4(15); Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 6(15); Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66:","f_0 = 4
f_5 = 9","Moin

; Bonjour","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Es wurden zwei Objekte von der Klasse A erzeugt

; Das Attribut ZAHL von Y2 hat den Wert 0","Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden","double addition(double x, double y)

; double addition(int x, int y)","Es kommt zu einem Fehler, da man zuerst casten muss, um die überschriebene Methode der Subklasse aufzurufen

; Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    
    public static void main(String[] args){
        for(int i=1; i<=18$;i++){
            
            System.Out.println(""Peter!"");
        }
        
        int a =1;
        while(a<=16){
            System.Out.println(""Peter!"");
            a++;
        }
        
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier{
    private String art;
    
    public FabelTier(String n){
        this.name = n;
        this.art = ""AlphaTier"";
    }
    
    public Sting call(String calledName){
        if(calledName==this.name)
            return true;
        else{
            return false;
        }
    }
    
    public String makeSound(){
        return (super.makeSound()+"" Jappy!"");
    }
}

public class TierTest{
    public static void main(String[] args){
        FabelTier Aaaannu = new FabelTier;
        boolean correct = Aaaannu.call(""Aaaannu"");
         System.Out.print(Aaaannu.makeSound());
        
    } 
}",-
Bürgel,Benedikt,b.buergel@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:02","26. Februar 2021  10:32","1 Stunde 30 Minuten","49,75",4,1111,-1,-4,-1,1,1,00100,"-1,125","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {8. NOR} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: 8; Teil 33: ; Teil 34: true; Teil 35: 8; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 16; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6; Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 16; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -12; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 6
f_5 = 6","Bonjour

; Moin","Es gibt Compiler-Fehler in der MAIN-Methode
; Die Klasse A hat keinen Konstruktor. Es können keine Objekte der Klasse A erzeugt werden.","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(float x, float y)

; double addition(double x, double y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt; l; i +=1} {array[i]}","public static void loop{
    for(int i=0; i<26; i++){
        Terminal.println(""Alice! \n"");
    }
    int j=26;
    while(j<50){
        Terminal.println(""Alice! \n"");
        j++;
    }
   
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier {
    
    private String stamm;
    
    public FabelTier(String name){
        super(name)
        this.stamm=PunkTier;
    }
    
    public String makeSound(){
       return super.makeSound() + ""Kangatraining!"" ;
    
    }
    
    public boolean call(String calledName){
        if(this.name==calledName) return true;
        else return false;
    }
    }
    
    
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        FabelTier WauWau= new Fabeltier;
        boolean correct=FabelTier.call(""WauWau"");
        Terminal.println(FabelTier.makeSound());
        
        
        
        
        
    } 
}","public interface Strassenbenutzend{
    public void verkaufen();
    public void speed();
    public void assGas();
    public void stillSTehen();

}"
Kemmler,"Erich Lorenz Boy",kemmler@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:03","26. Februar 2021  10:32","1 Stunde 29 Minuten","45,00",56,10011,-1,-200,-1,2,111,000,"-7,0","1 und 4
; 1 und 3","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {2. 1} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {2. AND erster Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Encoding; Teil 2: Kommandos; Teil 3: Argument; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 6
f_5 = 9","Hey

; Hallo

; Ciao","Das Attribut ZAHL von Y2 hat den Wert 0

; Das Attribut ZAHL von Y2 ist initialisiert

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden","float addition(float x, int y)

; double addition(float x, float y)

; double addition(int x, int y)

; double addition(double x, double y)","Es kommt zu einem Fehler, da man zuerst casten muss, um die überschriebene Methode der Subklasse aufzurufen","{int[] array = [0,1,2,3,4,5,6,7,8,9];} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    int i;
    for(int i = 0; i<20; i++){
        System.out.println(i + ""PPR!\n"" );
        
        while(i>=20 && i<=42){
             System.out.println(i + ""PPR!\n""  );
        }
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier{
    private String art;
    
    public FabelTier(String name){
        super(name);
        this.art = art;
        art= ""RazupaltuffTier"";
    }
    
    public String makeSound(){
        
    }
    public boolean call(String calledName){
        if (makeSound() == calledName){
           return true 
        }
     }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier eins = new FabelTier(""Aaaannu"");
        boolean recognized;
        recognized = eins.call(""Aaaannu"");
        System.out.println(eins.makeSound());
        
        
        
        
        
    } 
}","public interface Beweglich{
    public void schneller Werden(){}
}
//Zeit reicht leider nicht"
Weiß,Jasmina,jasmina.weiss@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:03","26. Februar 2021  10:33","1 Stunde 30 Minuten","42,75",8,10011,-1100,-4,-1,3,101,00,-9,"1 und 3
; 2 und 3","Dropzone 1 -> {7. OR erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Kommando; Teil 4: angezeigt","Prozess 1 und Prozess 2 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6; Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 10
f_5 =","Bonjour

; Moin

; Hey","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 ist initialisiert

; X2 hat den Wert 5","Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement","double addition(double x, double y)

; double addition(int x, int y)

; double addition(float x, float y)

; float addition(float x, int y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt; l; i +=1} {array[i]}","public static void loop{
    
    public static void main (String [] args){
        
        for (int i=0; i<14; i++){
            System.out.println(""PPR!\n"");
        }
        int j=0
        while (j<16){
            System.out.println(""PPR\n""); 
            j++
        }
        
        
    }
    
}","public class FabelTier extends Tier{
    private String stamm; 
    
    public FabelTier(String n){
        super(n);
        this.stamm = ""AlphaTier"";
        
    }
    
    public void makeSound(){
        System.out.println(super.makeSound()+"" Jappy"");
    }
    
    public boolean call(String calledName){
        if (calledName == this.getName()){
            return true;
        }else{
            return false;
        }
        
    }
    
    
    
}








// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier sabbel = new FabelTier(""Sabbel"");
        boolean correct = call(""Sabbel"");
        sabbel.makeSound();
        
        
        
        
        
        
    } 
}","pulic Car(String owner){}
pulic class Car implements Strassenbenutzend{};
public String owner;
public double tank;
public currentSpeed;"
"Mailhos Nogues","Lucas Fel",lucas.mailhos@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:03","26. Februar 2021  10:33","1 Stunde 29 Minuten","43,50",4,1111,-1,-4,-1,7,1,4,700,"1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {2. 1} Dropzone 5 -> {1. 0} Dropzone 6 -> {6. OR}","Dropzone 1 -> {2. AND erster Eingang negiert} Dropzone 2 -> {9. NAND} Dropzone 3 -> {3. AND zweiter Eingang negiert} Dropzone 4 -> {4. OR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 1137; Teil 7: 6; Teil 8: 1137; Teil 9: 7; Teil 10: 1011; Teil 11: 1135; Teil 12: 7; Teil 13: 1135; Teil 14: 1140","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Argument; Teil 4: auf die CPU geladen","Prozess 1 und Prozess 2 können zusammen ausgeführt werden.
; Prozess 3 kann nicht (mit anderen) ausgeführt werden.

; Prozess 4 kann nicht (mit anderen) ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 2; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16c; Teil 7: Klausurergebnisse","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 6
f_5 = 21","Bonjour

; Moin","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 ist initialisiert","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(double x, double y)","Es kommt zu einem Fehler, da Objektvariablen des Typs Superklasse keine Objekte von Subklassen aufnehmen können
; Es kommt zu einem Fehler, da man zuerst casten muss, um die überschriebene Methode der Subklasse aufzurufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop(){
    for (int i=0; i<14; i++){
        System.out.println(""Peter!"")
    }
    int i = 0;
    while (i<24){
        System.out.println(""Peter!"")
        i++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier{
    
    private String art;
    
    public FabelTier(String n){
        super(n);
        this.art = ""PunkTier"";
    }
    
    public String makeSound(){
    String sound = super.makeSound() + ""Jappy!"";
    return sound;
    }
    
    public boolean call(String calledName){
        if(calledName == this.getName()){
            return true;
        }else{
            return false;
        }
    }
    
}

// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        FabelTier sabbel = new FabelTier(""Sabbel"");
        boolean recognized = sabbel.call(""Sabbel"");
        System.out.println(sabbel.makesound());
        
        
        
        
        
    } 
}","public interface Strassenbenutzend {
    
    public Car(String owner);
}"
Korn,"Eric Rene",eric.korn@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:04","26. Februar 2021  10:33","1 Stunde 29 Minuten","62,00",12,10111,-1,-3,-1,3,1011,00,-11,"1 und 3
; 1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Encoding; Teil 4: angezeigt","Prozess 1 und Prozess 2 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 3
f_5 = 18","Moin

; Bonjour","Das Attribut ZAHL von Y2 ist initialisiert

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden","double addition(float x, float y)

; double addition(double x, double y)","Wegen der Dynamischen späten Bindung kann dazu keine Aussage getroffen werden.

; Es wird erst zur Laufzeit entschieden, welcher Methodenblock ausgeführt wird","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    for(int i = 0; i < 18; i++) {
        System.out.println(""Peter!"");
    }
    int count = 0;
    while(count < 24) {
        System.out.println(""Peter!"");
        count++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier {
    private String art;
    public FabelTier(String name) {}
    super(name);
    this.art = ""AlphaTier"";
}
public String makeSound() {
    String s = super.makeSound();
    s += ""Buuuumaaaa!"";
    return s;
}
public boolean call(String calledName) {
    if(calledName == super.getName())
    return true;
    else
    return false;
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier sabbel = new FabelTier(""Sabbel"");
        boolean recognized = call(""Sabbel"");
        System.out.println(sabbel.makeSound());
    } 
}","public interface Fahrbar {
    public void beschleunigen(int speed);
    public void addGas(double liter);
}"
Neumann,Sven,sven.neumann@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:04","26. Februar 2021  10:34","1 Stunde 30 Minuten","27,75",46,11001,+1,-,-1,-,-,0,-,"1 und 4
; 2 und 3","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {2. 1} Dropzone 3 -> {1. 0} Dropzone 4 -> {1. 0} Dropzone 5 -> {2. 1} Dropzone 6 -> {3. AND}","Dropzone 1 -> {5. OR erster Eingang negiert} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {7. XOR} Dropzone 4 -> {1. AND}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 96; Teil 7: 6; Teil 8: 1137; Teil 9: 6; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Encoding; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 15; Teil 29: true; Teil 30: 4; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 4(15); Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 5(15); Teil 51: -; Teil 52: -; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: -; Teil 63: -; Teil 64: -; Teil 65: -; Teil 66: -","f_0 = 5
f_5 = 9","Bonjour

; Moin","Es gibt Compiler-Fehler in der MAIN-Methode
; Die Klasse A hat keinen Konstruktor. Es können keine Objekte der Klasse A erzeugt werden.","Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden","double addition(double x, double y)

; float addition(float x, int y)","Es kommt zu einem Fehler, da Objektvariablen des Typs Superklasse keine Objekte von Subklassen aufnehmen können
; Es kommt zu einem Fehler, da man zuerst casten muss, um die überschriebene Methode der Subklasse aufzurufen","{int[] array = [0,1,2,3,4,5,6,7,8,9];} {int array, int[] l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    for(int i = 0; i < 14; i++){
        system.out.Println(""Bobb!"");
    }
    int z = 0;
    while(z<20){
        system.out.Println(""Bobb!"");
        z++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
class FabelTier{
    
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        Tier t1 = new Tier(""Aaaannu"",);
        
        
        
        
        
        
        
    } 
}","class Fahrbar{
    
}"
Özkan,"Mira Deniz",m.oezkan@tu-berlin.de,Beendet,"26. Februar 2021  09:05","26. Februar 2021  10:35","1 Stunde 29 Minuten","41,50",24,10011,-1,-5,-1,-1,000000,11100,"-0,875","1 und 4","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {5. OR erster Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Encodings; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Prozess 2 kann nicht (mit anderen) ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7:","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: 8; Teil 61: 17; Teil 62: -; Teil 63: -; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 10
f_5 = 11","Bonjour

; Moin","Es wurden zwei Objekte von der Klasse A erzeugt",-,"float addition(float x, int y)",-,"{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    for (int i = 0; i<26; i++){
        System.out.println('Peter!'+'\n');
    }
    
    int=0;
    while(i<12){
        System.out.println('Peter!'+'\n');
        i++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier

public class FabelTier extends Tier {
    private String stamm;
    
    public FabelTier (String n) {
        super (n)
    }
}






// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        
        
        
        
        
        
    } 
}","public interface Beweglich{
    public void geschwidigkeitAnpassen(int speed);
    public void addGas(double liter);
    public void aufNull();
}"
Klemt,"Dorothea Klara",d.klemt@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:05","26. Februar 2021  10:35","1 Stunde 30 Minuten","46,75",48,1011,-1,-4,-1,2,0,000,6,"1 und 4","Dropzone 1 -> {7. OR erster Eingang negiert} Dropzone 2 -> {} Dropzone 3 -> {2. 1} Dropzone 4 -> {} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Objekte; Teil 3: Argument; Teil 4: angezeigt",-,"Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6; Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 11
f_5 = 26",-,"Das Attribut ZAHL von Y2 ist initialisiert

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden","double addition(double x, double y)

; double addition(float x, float y)

; double addition(int x, int y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i += 2} {array[i]}","public static void loop{
    for(int i = 0; i<=14; i++) {
        Sytem.out.println(""Alice!"""");
    }
    int j = 0;
    while( j<= 20) {Sytem.out.println(""Alice!"""");}
}","// Programmiert zuerst hier die Klasse FabelTier
class FabelTier extends Tier {
	private String art;

	public Fabeltier (String n, String a){
		super(name);
		name = ""RazupaltuffTier"";
		a = art;
	}

	public String makeSound(){
		return super.makeSound()+""Buuuumaaaa!"";
	}

	public String call(String calledName) {
		if (name == calledName) {return calledName;}
		else {return false;}
	}
    
}


// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
       Fabeltier f = new Farbeltier(""Aaaannu"");
       richtig = call(""Aaaannu""):
       f.makeSound();
    } 
}","interface beweglich {
}"
Korkmaz,Asena,asena.korkmaz@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:06","26. Februar 2021  10:36","1 Stunde 29 Minuten","44,00",4,1111,-1,-5,-1,7,0,0100100,-316,"1 und 4","Dropzone 1 -> {10. XOR} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {6. OR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Objekt; Teil 4: angezeigt","Prozess 2 und Prozess 3 können zusammen ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: undef; Teil 3: -; Teil 4: undef; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: -4; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 9
f_5 = 24","Ciao

; Moin","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 hat den Wert 0

; Es wurden zwei Objekte von der Klasse A erzeugt","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(float x, float y)

; float addition(float x, int y)

; double addition(int x, int y)

; double addition(double x, double y)","Es wird erst zur Laufzeit entschieden, welcher Methodenblock ausgeführt wird

; Wegen der Dynamischen späten Bindung kann dazu keine Aussage getroffen werden.

; Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt; l; i +=1} {array[i]}","public static void loop{
    int i;
    for(i=0; i<14; i++) {
        System.out.println(""Bobb!"");
    }
    
    while(i<26) {
        System.out.println(""Bobb!"");
        i++;
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier {
    private String gattung;

    public FabelTier(String n) {
        super(n);
        gattung = ""AlphaTier"";
    }

    @Override
    public String makeSound(){
        return(super.makeSound() + ""Kangatraining!"" );
    }

    public boolean call(String calledName){
        if(calledName == super.getName()){
            return true;
        }
        return false;
    }
}

// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        public class TierTest {
    public static void main(String[] args) {
        FabelTier sabbel = new FabelTier(""Sabbel"");
        boolean recognized = sabbel.call(""Sabbel"");
        System.out.println(sabbel.makeSound());
    }
}",-
Hofmann,Timo,timo.hofmann@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:08","26. Februar 2021  10:38","1 Stunde 29 Minuten","58,50",12,10111,-1,-6,-1,0,1,01100,"+1,375","1 und 4
; 1 und 3","Dropzone 1 -> {4. AND erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {3. AND zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Argument; Teil 4: angezeigt","Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 3; Teil 4: Winter16a und Klausurergebnisse; Teil 5: ganz sicher nicht mehr; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 = 13
f_5 = 28","Bonjour

; Moin","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 ist initialisiert","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(double x, double y)

; double addition(float x, float y)","Es wird die Methode der Subklasse aufgerufen

; Es wird erst zur Laufzeit entschieden, welcher Methodenblock ausgeführt wird","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop()
    {
        for (int i = 0; i < 26; i++){
            System.out.println(""PPR!"");
        }

        int i = 0;

        while (i < 20){
            System.out.println(""PPR!"");
            i ++ ;
        }
    }","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier{

    private String stamm;

    public FabelTier(String name)
    {
        super(name);
        this.stamm = ""RazupaltuffTier"";
    }

    public String makeSound() {
        return super.makeSound()+""Kangatraining!"";
    }

    public boolean call(String calledName)
    {
        if (calledName == this.getName()){
            return true;
        }
        else {
            return false;
        }
    }
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TestTier {

    public static void main(String[] args)
    {
        FabelTier ft = new FabelTier(""Aaaannu"");

        boolean recognized = (""Aaaannu"" == ft.getName());

        System.out.println(ft.makeSound());
    }
}","public interface Drivable {

    public void beschleunigen(int speed);
    public  void addGas(double liter);
    public  void stop();
}"
Mittelstädt,"Lina Sophia",l.mittelstaedt@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:09","26. Februar 2021  10:39","1 Stunde 30 Minuten","45,50",0,1011,-1,-6,-1,11,0,0,-16,"1 und 4","Dropzone 1 -> {7. OR erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {7. XOR} Dropzone 2 -> {4. OR} Dropzone 3 -> {1. AND} Dropzone 4 -> {}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 1137; Teil 7: 6; Teil 8: 1137; Teil 9: 6; Teil 10: 1135; Teil 11: 1010; Teil 12: 6; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Objekte; Teil 3: Argument; Teil 4: angezeigt","Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 2; Teil 4: Winter16a und Klausurergebnisse; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16a; Teil 7: gar nicht","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: -; Teil 66: -","f_0 =13
f_5 = 9",Hey,"Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement","double addition(int x, int y)

; double addition(float x, float y)

; double addition(double x, double y)","Es wird erst zur Laufzeit entschieden, welcher Methodenblock ausgeführt wird

; Es wird die Methode der Subklasse aufgerufen","{int array[10] = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt; l; i +=1} {array[i]}","public static void loop{
    for (int i=1; i<=14; i++){
        System.out.println(""Alice!"");
    }
    while (i<=24){
        System.out.println(""Alice!"");
        i+=1;
    }
    
}","// Programmiert zuerst hier die Klasse FabelTier

public class FabelTier extends Tier 
    private String art;
    
    public FabelTier (String name){
        super(name);
        this.art = ""AlphaTier"";
        
    }
    
    public static makeSound(){
        String laut = Tier.makeSound();
        laut += ""Virusssis"";
        return laut;
        
    }
    
    public boolean call(String calledName) {
        if (this.name.equals(calledName)){
            return true;
        }
        return false;
    }
        
        
    }






// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        
        FabelTier wauWau = new FabelTier;
        
        recognized= wauWau.call(""WauWau"");
        System.out.println (wauWau.makeSound());
        
        
        
        
        
        
        
    } 
}","public interface Strassenbenutzend {
    public void verkaufen (String a);
    public void tankAuffuellen (double b);
    public void stop ();
    public void speed ();
    
}"
Bloch,"Céline Louisa",c.bloch.1@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:10","26. Februar 2021  10:40","1 Stunde 30 Minuten","49,50",24,3,-1,-5,-1,16,1,01101100000,-296,"1 und 3","Dropzone 1 -> {7. OR erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Objekte; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 2 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: -; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: -; Teil 63: -; Teil 64: -; Teil 65: -; Teil 66: -","f_0 = 8
f_5 = 23","Bonjour

; Moin","Das Attribut ZAHL von Y2 ist initialisiert

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(double x, double y)

; float addition(float x, int y)

; double addition(float x, float y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = [0,1,2,3,4,5,6,7,8,9];} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    public void loop (){
        for( int i=0; i<18; i++){
            System.out.println(""PPR!"");
        }
        int j = 0
         while(j<24)   {
        System.out.println(""PPR!"");
        j++;
    }
    }
}","public class FabelTier extends Tier{
    private String art;
        public Fabeltier (String n, String RazupaltuffTier){
            super(n);
            this.art = RazupaltuffTier;
            }
    public String makeSound(){
       String s = super.makeSound();
       s+= ""Kangatraining!"";
       return s;
    }
    public boolean call(String calledName){
        if(calledname == getName()){
            return true;
        }
            else{
            return false;
            }
    }

// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier tier = new FabelTier(""WauWau"");
        boolean richtig = tier.call(""Wauwau"");
        System.out.println(tier.makeSound());
    } 
}","//nach der ersten Zeile in der Main
try {
    //...
}
catch(Exception rep ){
    System.out.println(""Hier ist ein Fehler"");
}"
Bulut,Berkay,berkay.bulut@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:11","26. Februar 2021  10:41","1 Stunde 29 Minuten","45,50",184,10011,+1,6,-1,12,-,-,-,"1 und 4","Dropzone 1 -> {12. NOR} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {1. 0} Dropzone 6 -> {11. NAND}","Dropzone 1 -> {1. AND} Dropzone 2 -> {5. OR erster Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: SUB; Teil 7: 6; Teil 8: 1140; Teil 9: 7; Teil 10: 1005; Teil 11: 1005; Teil 12: 7; Teil 13: 1135; Teil 14: 1012","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Argument; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.

; Prozess 3 kann nicht (mit anderen) ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a; Teil 5: vielleicht noch, man kann es nicht mit Sicherheit sagen; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: 4; Teil 12: -; Teil 13: -; Teil 14: -; Teil 15: 4; Teil 16: 4; Teil 17: -; Teil 18: -; Teil 19: -; Teil 20: 8; Teil 21: 4; Teil 22: -; Teil 23: -; Teil 24: -; Teil 25: -; Teil 26: 4; Teil 27: -; Teil 28: 15; Teil 29: -; Teil 30: -; Teil 31: -; Teil 32: 4; Teil 33: -; Teil 34: true; Teil 35: 4; Teil 36: -; Teil 37: 4; Teil 38: -; Teil 39: true; Teil 40: 8; Teil 41: -; Teil 42: 4; Teil 43: -; Teil 44: 6(15); Teil 45: true; Teil 46: 8; Teil 47: -; Teil 48: 4; Teil 49: -; Teil 50: 15; Teil 51: -; Teil 52: -; Teil 53: -; Teil 54: 4; Teil 55: 8; Teil 56: -; Teil 57: -; Teil 58: -; Teil 59: -4; Teil 60: 8; Teil 61: 17; Teil 62: -; Teil 63: -; Teil 64: -; Teil 65: -; Teil 66: -","f_0 = 7
f_5 = 22","Bonjour

; Moin","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 ist initialisiert","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)
; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement","double addition(float x, float y)

; double addition(double x, double y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i += 2} {array[i]}","public static void loop{
 for (int i = 0; i < 14; i++)  {
     System.out.println(""Peter!\n"");
 }
 
 int j = 0;
 while (j < 20) {
     System.out.println(""Peter!\n"");
     j++;
 }
}","// Programmiert zuerst hier die Klasse FabelTier
class FabelTier extends Tier {
    private String stamm;
    
    public FabelTier(String name) {
        this.name = name;
        this.stamm = ""AlphaTier"";
    }
    
    public makeSound(){
        return super.makeSound() + ""Kangatraining!"";
    }
    
    public call(String calledName){
        if (this.name == calledName) {
            return true;
        } else {
            return false;
        }
    }
}

// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        FabelTier ft = new FabelTier(""Horst"");
        boolean richtig = ft.call(""Horst"");
        System.out.println(ft.makeSound());
    } 
}","interface Strassenbenutzend"
Todorovski,Adrian,adrian.todorovski@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:13","26. Februar 2021  10:43","1 Stunde 30 Minuten","27,50",-640,10110,-1,4,-1,-,-,1011,-,"1 und 3
; 1 und 4","Dropzone 1 -> {3. AND} Dropzone 2 -> {1. 0} Dropzone 3 -> {2. 1} Dropzone 4 -> {1. 0} Dropzone 5 -> {2. 1} Dropzone 6 -> {10. XOR}","Dropzone 1 -> {1. AND} Dropzone 2 -> {8. NOR} Dropzone 3 -> {9. NAND} Dropzone 4 -> {2. AND erster Eingang negiert}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: 6; Teil 6: 96; Teil 7: 6; Teil 8: 1137; Teil 9: 6; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Kommando; Teil 4: angezeigt","Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: Klausurergebnisse","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: 8; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: -8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: 16; Teil 60: ; Teil 61: 17; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66:","f_0 = 11
f_5 = 9","Hey

; Moin","Es wurden zwei Objekte von der Klasse A erzeugt

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Beim Löschen des ersten Elements aus der Liste wird das entsprechende Attribut der Liste neu gesetzt (und zwar auf das  zweite Listenelement)","double addition(double x, double y)","Es wird erst zur Laufzeit entschieden, welcher Methodenblock ausgeführt wird

; Es kommt zu einem Fehler, da man zuerst casten muss, um die überschriebene Methode der Subklasse aufzurufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    for(int i = 1; i<=18; i++){
        System.out.println(""Blobb!"");
    }
    int n = 19;
    while(n<= 30){
        System.out.println(""Blobb!"");
        n++;
    }
}","// Programmiert zuerst hier die Klasse FabelTier
public class Fabeltier extends Tier {
    super.name;
    
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
        Tier Fabeltier = new Tier();
        
        
        
        
        
        
        
    } 
}",-
Herzog,"Maximilian Luca",herzog.3@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:14","26. Februar 2021  10:44","1 Stunde 30 Minuten","45,50",696,10011,-1,-6,-1,2,1,1000,-,"2 und 3","Dropzone 1 -> {7. OR erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {1. 0} Dropzone 4 -> {2. 1} Dropzone 5 -> {1. 0} Dropzone 6 -> {4. AND erster Eingang negiert}","Dropzone 1 -> {1. AND} Dropzone 2 -> {6. OR zweiter Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Objekt; Teil 4: angezeigt","Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 3 und Prozess 4 können zusammen ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a, Winter16b und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: -; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: 6(15); Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: -; Teil 63: -; Teil 64: -; Teil 65: -; Teil 66: -","f_0 = 8
f_5 = 23","Moin

; Bonjour","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Das Attribut ZAHL von Y2 ist initialisiert","Ein Listenelement hat als Attribut unter anderem das vorherige Listenelement

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)","double addition(double x, double y)

; float addition(float x, int y)

; double addition(float x, float y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l-1; i +=2} {array[i]}","public static void loop{
    int i;
       for (i=1; i<=22;i++) {
             System.out.println(""Alice!"");
       }
      
       i=1;
       while (i<=12) {
             System.out.println(""Alice!"");
             i++;
}","public class FabelTier extends Tier {
       private String familie;
 
       public FabelTier(String n) {
             super(n);
       this.familie = new String(""CoronaTier"");    
       }
 
       public String makeSound() {
             return super.makeSound().concat(""Buuumaaa!"");
       }
 
public boolean call(String calledName) {
       boolean erg;
       erg = false;
       if (this.getName().equals(calledName)) {
             erg = true;
       }
       return erg;
}
}
public class TierTest{
    public static void main(String[] args){
        public static void main(String[] args) {
       FabelTier tier1 = new FabelTier(""Sabbel"");
       boolean richtig = tier1.call(""Sabbel"");
       System.out.println(tier1.makeSound());
}
        
        
        
        
        
        
    } 
}",-
Heuer,"Lukas Paul Ernst",heuer.1@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:14","26. Februar 2021  10:44","1 Stunde 29 Minuten","38,00",8,10011,-1,-2,-1,7,10,01000,"10,25","1 und 3","Dropzone 1 -> {7. OR erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {1. 0} Dropzone 4 -> {2. 1} Dropzone 5 -> {1. 0} Dropzone 6 -> {4. AND erster Eingang negiert}","Dropzone 1 -> {1. AND} Dropzone 2 -> {5. OR erster Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Optionen; Teil 3: Argument; Teil 4: angezeigt","Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Prozess 1 kann nicht (mit anderen) ausgeführt werden.
; Prozess 3 kann nicht (mit anderen) ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: genau eine Datei; Teil 3: 3; Teil 4: Winter16a, Winter16b und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: %; Teil 9: %; Teil 10: %; Teil 11: 4; Teil 12: %; Teil 13: %; Teil 14: %; Teil 15: %; Teil 16: 8; Teil 17: %; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: -; Teil 22: %; Teil 23: %; Teil 24: %; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: 14; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: true; Teil 35: 4; Teil 36: %; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: 8; Teil 41: %; Teil 42: %; Teil 43: -; Teil 44: 6(15); Teil 45: %; Teil 46: -; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: 15; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: 8; Teil 56: %; Teil 57: %; Teil 58: %; Teil 59: -4; Teil 60: %; Teil 61: 17; Teil 62: -; Teil 63: -; Teil 64: -; Teil 65: -; Teil 66: -","f_0 = 5
f_5 = 20","Bonjour

; Moin","Das Attribut ZAHL von Y2 ist initialisiert

; Y1 und Y2 referenzieren dasselbe Objekt der Klasse A","Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement","double addition(double x, double y)","Es wird die Methode der Subklasse aufgerufen","{int[] array = [0,1,2,3,4,5,6,7,8,9];} {int[] array, int l} {i &lt;= l; i += 2} {array[i]}","public static void loop{
for (int i = 0; i <= 37, i ++){
    while (i>17)
    {
    System.out.println(""Bobb!"" + '\n')
    }
    System.out.println(""Bobb!"" + '\n')
}
}","// Programmiert zuerst hier die Klasse FabelTier

public class FabelTier implements Tier(String name){
    this.name = name;
    private String art;
    static makeSound(){
    Super.makeSound();
    StringBuilder sb = new Stringbuilder();
    sb=(laut, ""Virusssiis "");
    return laut;
    }
    static void call(String calledName, ){
        if(calledName==""WauWau""){
            Return true;
            richtig = calledName;
            }
            else{
                Return false;
            }
            }
        
    }
    
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest{
    public static void main(String[] args){
     
        FabelTier saft = new FabelTier(""WauWau"");
        saft.makeSound();
        
    } 
}","Class Strassenbenutzend(){
    
}"
Gontarz,Jakob,jakob.gontarz@campus.tu-berlin.de,Beendet,"26. Februar 2021  09:15","26. Februar 2021  10:45","1 Stunde 29 Minuten","39,25",34,1101,-1,-4,+1,40,1,00010,"-9,0625","2 und 3","Dropzone 1 -> {7. OR erster Eingang negiert} Dropzone 2 -> {1. 0} Dropzone 3 -> {1. 0} Dropzone 4 -> {2. 1} Dropzone 5 -> {1. 0} Dropzone 6 -> {4. AND erster Eingang negiert}","Dropzone 1 -> {1. AND} Dropzone 2 -> {5. OR erster Eingang negiert} Dropzone 3 -> {9. NAND} Dropzone 4 -> {7. XOR}","Teil 1: read; Teil 2: LDA; Teil 3: 1136; Teil 4: 6; Teil 5: -90; Teil 6: 96; Teil 7: -90; Teil 8: 1137; Teil 9: -90; Teil 10: 1135; Teil 11: 1010; Teil 12: -90; Teil 13: 1135; Teil 14: 1135","Teil 1: Kommando; Teil 2: Argumente; Teil 3: Objekt; Teil 4: angezeigt","Prozess 1 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 1 und Prozess 4 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 3 können zusammen ausgeführt werden.
; Prozess 2 und Prozess 4 können zusammen ausgeführt werden.

; Es können NICHT alle Prozesse gleichzeitig ausgeführt werden.","Teil 1: leo ist ein Unterverzeichnis von dem Verzeichnis home; Teil 2: mindestens eine Datei. Genauer kann man es nicht sagen; Teil 3: 2; Teil 4: Winter16a, Winter16b und Klausurergebnisse; Teil 5: auf alle Fälle noch.; Teil 6: Winter16a; Teil 7: mit dem Befehl gedit ../Winter16b/neu.txt","Teil 1: 12; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: 13; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: 4; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: 4; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: 8; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: 14; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: true; Teil 35: 4; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: 8; Teil 41: ; Teil 42: ; Teil 43: -; Teil 44: 6(15); Teil 45: ; Teil 46: -; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: 15; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: 8; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: -4; Teil 60: ; Teil 61: 17; Teil 62: -; Teil 63: -; Teil 64: -; Teil 65: -; Teil 66: -","f_0 = 
f_5 =","Bonjour

; Moin","Y1 und Y2 referenzieren dasselbe Objekt der Klasse A

; Es gibt Compiler-Fehler in der MAIN-Methode","Ein Listenelement hat als Attribut unter anderem das ihm folgende Listenelement

; Das letzte Listenelement hat kein nachfolgendes Listenelement (das entsprechende Attribut des Elements ist null)

; Um auf ein Listenelement zuzugreifen, muss durch alle vorherigen durchgegangen werden","double addition(double x, double y)

; double addition(float x, float y)","Es wird die Methode der Superklasse aufgerufen","{int array[10] = {0,1,2,3,4,5,6,7,8,9};} {int[] array, int l} {i &lt;= l; i +=1} {array[i]}","public static void loop{
    for(int i=0; i<26; i++){
        System.out.println(""Bobb!"");
    }
    int j=0;
    while(j<20){
        System.out.println(""Bobb!"");
        j++;
    }
    
}","// Programmiert zuerst hier die Klasse FabelTier
public class FabelTier extends Tier{
    private Sting familie;

    public FabelTier(Stirng n){
        super(n);
    this.familie = String(""CoronaTier"");
    }
    
    public String makeSoudn() {
        return;
    super.makeSound().concat(""Kangatraining!"");
    }
    
public boolean call(String calledName){
        boolean erg;
        erg = false;
        if(this.getName().equals(calledName)){
            erg=true;
        }
        return erg;
}







// Nun vervollständigt die main Methode der Klasse TierTest
public class TierTest {
    public static void main(String[] args){
        
        
        
        
        
        
        
    } 
}","public class TestCar extends Car{
    
}"
